cset: moving following pidspec: 25587
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23046543 seconds)
loading group "string"... done (took 0.464794995 seconds)
loading group "linalg"... done (took 7.606049353 seconds)
loading group "parallel"... done (took 0.171442426 seconds)
loading group "find"... done (took 1.171854003 seconds)
loading group "tuple"... done (took 2.083213044 seconds)
loading group "dates"... done (took 1.332752439 seconds)
loading group "micro"... done (took 0.244556835 seconds)
loading group "io"... done (took 0.652021167 seconds)
loading group "scalar"... done (took 40.543940632 seconds)
loading group "sparse"... done (took 12.423397286 seconds)
loading group "broadcast"... done (took 1.108667814 seconds)
loading group "union"... done (took 13.623554828 seconds)
loading group "simd"... done (took 4.735076664 seconds)
loading group "random"... done (took 9.571283103 seconds)
loading group "problem"... done (took 1.950285492 seconds)
loading group "array"... done (took 22.318742782 seconds)
loading group "misc"... done (took 1.412807526 seconds)
loading group "sort"... done (took 3.560477705 seconds)
loading group "collection"... done (took 19.290894134 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.51346252 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13705362 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131849825 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146438649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200968391 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142724067 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157008657 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112541247 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.929955414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179054942 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152926319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511208916 seconds)
done (took 5.061355548 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.230059825 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093335763 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101984957 seconds)
  done (took 0.864806747 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076657523 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144042442 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092624656 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078005903 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092866549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076617368 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094021108 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076648246 seconds)
  done (took 1.330199466 seconds)
done (took 3.183549665 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727840425 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274691088 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203379173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460606385 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193175764 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212204068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672739452 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337433248 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252156664 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098819852 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143242235 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385000605 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136833014 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677073037 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091619913 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124091833 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177464481 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444295002 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084006559 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109381377 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115308147 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140683963 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130830383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090283982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182941952 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084782354 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192234331 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107166228 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079848267 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289034318 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199854853 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683452904 seconds)
  done (took 10.814053878 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110725434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133314662 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096279377 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138024201 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132140182 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097838156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083586473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095561259 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12039301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173745447 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128275142 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120631213 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094466368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081964462 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113884275 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242601275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120952318 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103777774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099456591 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103150393 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120813518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112139267 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107325565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091971661 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165332089 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219106237 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113402019 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126836205 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096733669 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111257515 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142815868 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14144443 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092810602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080620774 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170312469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12316864 seconds)
  done (took 5.095921893 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186548784 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118902718 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166010461 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161074252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138507854 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157770782 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11128217 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244246965 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109410801 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162534862 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139775592 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114761659 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081386922 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151991156 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081332318 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095824737 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.664560766 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121988336 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154289034 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115098421 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101681446 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083426923 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363332523 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101844621 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078800194 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097444626 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065630488 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157429195 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098445656 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.133218481 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121385097 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08109516 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137405247 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20718794 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109272352 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134045423 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094835605 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079377947 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177496199 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103616777 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079391448 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119520185 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076020788 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135263234 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131854998 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097870828 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095641864 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20319346 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079560599 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113008099 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961322402 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179677048 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088994698 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094328092 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317392573 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096604015 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096372231 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076664766 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281275606 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182379599 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096453854 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075740471 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096687373 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078278465 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098386607 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384577659 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0948253 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.864746883 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08153458 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104157996 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082045694 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095296773 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102342147 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088397078 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113352056 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076646712 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09570369 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081566087 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096126492 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077877249 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098495323 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10538925 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084961675 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096034808 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145973854 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.091819861 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096210287 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126610366 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098413315 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077863999 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129804507 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097078056 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080357376 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131874075 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096799276 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090997632 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098834909 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141660151 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095214844 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177959646 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093257274 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121594029 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097188985 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11389803 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110243835 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097605417 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083994792 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094281928 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076550644 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163075677 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079298774 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096710515 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080010825 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109608819 seconds)
  done (took 22.605112399 seconds)
done (took 39.190291064 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331916259 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101509586 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101929205 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101251311 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099793371 seconds)
  done (took 1.485857119 seconds)
done (took 2.211386724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286247182 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170472588 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093731961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165488381 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092127434 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172287303 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157680363 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10985225 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216665578 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076050491 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162038447 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092768058 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075836996 seconds)
  done (took 2.618885011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094682018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114997836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082043867 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109217025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075131497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109910054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091805381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11584499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10779022 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083842377 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092227445 seconds)
  done (took 1.798805111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093054034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111631531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08108854 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109257777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075637855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109017262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091577379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114348492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108347189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084611765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092314482 seconds)
  done (took 1.791277291 seconds)
done (took 6.922648164 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089624692 seconds)
  done (took 0.806023283 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.912759887 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.900482409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111774556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148635446 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297712781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19088777 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474092817 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12402317 seconds)
  done (took 11.086014992 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11592531 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113532593 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102258905 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085622566 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102981289 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084532474 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098190632 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097032033 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082913923 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099557505 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084804209 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101298738 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100633365 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081390368 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099193845 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083229891 seconds)
  done (took 2.318147635 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118851342 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117587362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105367126 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107292213 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085956095 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103369716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105538105 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08964796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10069501 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102605163 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090192058 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10448784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103085434 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07965543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104744481 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106100003 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086049243 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104809399 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105457616 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089224628 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10531687 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095041687 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086400177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106035773 seconds)
  done (took 3.233637944 seconds)
done (took 18.164569891 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159490082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10778351 seconds)
  done (took 0.99559834 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09425945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111107815 seconds)
  done (took 0.934252787 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097167107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094625553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120193687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107806339 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079661808 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094993575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118452881 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079793817 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094970926 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07988727 seconds)
  done (took 1.700184896 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081840639 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108391334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10029956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094961744 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10417686 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093603679 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087938369 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098308229 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108636797 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076343474 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101521019 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113101941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085420249 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116191379 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103782357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082775515 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100451074 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097616437 seconds)
  done (took 2.490330143 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079346467 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095505656 seconds)
  done (took 0.908546316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081216902 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093713 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080790893 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096314041 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092924831 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076638908 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093486709 seconds)
  done (took 1.348825621 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468139368 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134405643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25226246 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085113196 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119406108 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301736136 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097107205 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083849602 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101595979 seconds)
  done (took 2.433257238 seconds)
done (took 11.543490153 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092553956 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116393345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111691582 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463971743 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107080796 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095963283 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158843875 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24978025 seconds)
done (took 2.133762968 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148282477 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325483514 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112838572 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067345121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094044172 seconds)
  done (took 1.339461559 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079191998 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099380857 seconds)
  done (took 0.916888222 seconds)
done (took 3.146322272 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081043165 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129311151 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079945634 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097903044 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078024517 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097109542 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077817847 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095288826 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095465336 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07980129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095542335 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079280088 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095901686 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077302744 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093011245 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07732256 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095950744 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07722627 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093161912 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077605701 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09624005 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076751506 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093486229 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079432075 seconds)
  done (took 2.893137933 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098921096 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097205277 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101888176 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084737567 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100821964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085492459 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100647204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096330696 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085704364 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098350053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0994726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083965234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098147075 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084220233 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098592191 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099552028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084971273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096718916 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083195248 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100169034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101683696 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080603362 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09996726 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101378095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082950351 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099429596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082041411 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096483138 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102419 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0840369 seconds)
  done (took 3.551830715 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083884029 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093135168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078011366 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100688227 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077830549 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096262608 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07767497 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095188071 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078641171 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093852339 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079282772 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093401127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077879721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095606728 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07874887 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097388115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106499305 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077721826 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094590299 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078503488 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097406969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077375717 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09428223 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077793542 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094074618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077070834 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094544736 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077729876 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095251616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077413083 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097393541 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081363536 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094138441 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08436948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098291719 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077668526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097974945 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094196814 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078564795 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09373172 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077571908 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094213406 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078171841 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101517392 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078132349 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096654056 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077780784 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096073329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079179811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097507844 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077854991 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094122546 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080448122 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095601568 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0981912 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077480549 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095324479 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077058665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095040894 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077420963 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093420443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07722054 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096564785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078715062 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109734513 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084907122 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094479776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07950365 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095100765 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080146453 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095299524 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107634903 seconds)
  done (took 7.100562491 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083270826 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105168765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079375987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096919812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075899898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094618801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097519322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078438123 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096785912 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085202154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095154516 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080276924 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095553399 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10632637 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078055481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096308325 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085326521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093340322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078737025 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097923318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078755399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098916317 seconds)
  done (took 2.727557549 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208201759 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103402169 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14025586 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105665941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08442129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105832483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101072795 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086648977 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101596916 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08355956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099486047 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101617453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083759351 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099199912 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099613157 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084783835 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10125526 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086009847 seconds)
  done (took 2.630165895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092653949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097756598 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102143175 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097344236 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099041458 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083456336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10319169 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107261534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08339263 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097692659 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090415895 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099164989 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099555728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081083187 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100022819 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081146099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100203907 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080922749 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108104576 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103719658 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103253998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089638915 seconds)
  done (took 2.857373648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097380276 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099553914 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116693596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083332025 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093705541 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07983719 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105181232 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081167008 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106113655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099153739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080975188 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095899695 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087225112 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097464661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102993025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080653324 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099366712 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081313393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100005061 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077226419 seconds)
  done (took 2.622496687 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102569385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099874335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098965829 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091909108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0995398 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082692615 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107636186 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099973443 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082679905 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123672909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099331338 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082558943 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107931551 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104420441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098358832 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090929068 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107984639 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109542981 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082167247 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098697062 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123644529 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082405075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.213819442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09902431 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083195546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098640032 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098380494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089088836 seconds)
  done (took 3.618079364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080930154 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098301659 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078479666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095699148 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078413662 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096304926 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07824124 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095868954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08106623 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095565803 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080848584 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09768562 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080806692 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097117327 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081329002 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097734416 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083264502 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095434357 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078330597 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095118106 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080996607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097853559 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081356278 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095349404 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078413315 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097928746 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078503411 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095407888 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080888455 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094150769 seconds)
  done (took 3.407071723 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090565003 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105183094 seconds)
  done (took 0.955090254 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07849444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11405001 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078490831 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101781411 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086087989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098241622 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107152468 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086765177 seconds)
  done (took 1.510097074 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095757207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109438193 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083334175 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111302398 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108638821 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094863134 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158797963 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099957736 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087089061 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096460143 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111364863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080486467 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104920055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081497572 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103779815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088094527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096808037 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088193961 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100972535 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09687225 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082646583 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109101639 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083964147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095562419 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083082291 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109459503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108189598 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082977525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101370277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108591364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087012247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092838492 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081606467 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100341044 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079469461 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108073475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111539043 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084407883 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106984885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08336499 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109752185 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093897614 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086528352 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104170697 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091858232 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099696182 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083983488 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093833212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09571662 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084073607 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0941464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081570136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093439429 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088774652 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102617961 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11149073 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080231122 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099668124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084831412 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101750597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087926862 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100591427 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083822941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097823312 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106018499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085228267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106365733 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07695644 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09300096 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080016988 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107044049 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121189793 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090436768 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099742086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083150161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097234137 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101983336 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083324111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106154052 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090416195 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099054218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106034658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08978022 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098977377 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083739494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106971229 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096908692 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083884827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09615968 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096691656 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0978295 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079867124 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095910269 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107957779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085337871 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098614134 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079210916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109056906 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076206269 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099948334 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083274618 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099282914 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108055369 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087983184 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105583175 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106452793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088689377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099658135 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084978546 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096649299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084117171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101388215 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105923888 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076017477 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102027687 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083373529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100396205 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088971746 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097120472 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081804742 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107149567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105617027 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080280244 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095366938 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085169919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09981475 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086273897 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105419071 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097409691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077674207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09378491 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085678787 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099461113 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086184713 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104663853 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102048556 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076854005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097697108 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086145869 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107299923 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098890116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081869674 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10339096 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083302912 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099019442 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087776988 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101446529 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081923688 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103247006 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101037591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077347723 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104364959 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085160586 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098454881 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085465912 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10330047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102428315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083375381 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099269531 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088738921 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101685893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080629581 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098980919 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098312796 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091321762 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102265622 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077749862 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097143179 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089450813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097621786 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082054071 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098317297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102074217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083216163 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097832609 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081119201 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101544905 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112746819 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087368183 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101895739 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087733939 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110345001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082250632 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101803402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099802696 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083323377 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100788126 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089244084 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105271133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105094718 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084294868 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095899799 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08784638 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107383274 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081008208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097460635 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081160248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103453856 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105881736 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086390063 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100850457 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08078332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099485634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103853249 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085451193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099680389 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081234408 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104231282 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082089517 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10641396 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101254098 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091618971 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10326993 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077451113 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103258699 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097452149 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087840852 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095271637 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079380452 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0984451 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082999289 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098509923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08465877 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093666459 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089423122 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107544918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099355743 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08177921 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100365553 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091312622 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102878006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08620333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103371553 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105437878 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095489294 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099288143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085473515 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109574747 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100604421 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076393642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105440563 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081257286 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10026679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081954099 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09806058 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08545003 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108950736 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104837022 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076114321 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102850988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081067875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098971613 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07834802 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107076603 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103753902 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084022561 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108666837 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083435584 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101114396 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104028949 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08262691 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101300345 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084336267 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103817442 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084080765 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102948264 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081859349 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102771207 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098993792 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080841847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101637816 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08317158 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100290641 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088953443 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101917734 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082592182 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10221032 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101507911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084215732 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100801982 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082324174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104130338 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083249103 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100537526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085237688 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09559407 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107674629 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082551148 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107979253 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082800116 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097600324 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088135378 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103748565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106500325 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083660805 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102520044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083805506 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100428807 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084859155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108392744 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097611003 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092242862 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106409315 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083433435 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103378823 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082549815 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102292189 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099434853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08456717 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101447272 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083893274 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100613531 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087514193 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102980215 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082690709 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102458741 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101724681 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08268529 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101709356 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077305227 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099542479 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083061047 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101135077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089661149 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102496364 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104584165 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081570565 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102058094 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082882636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097272562 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091911324 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111131434 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102056474 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091588493 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100388849 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084783338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110656908 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094638438 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081528337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098644452 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08029385 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109249328 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084418063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108753519 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100374366 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081983504 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098205497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083656647 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098748665 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077434274 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098294467 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086015551 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102971284 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08173047 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101388451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102913513 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084712467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109074938 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082448593 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102666824 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083660983 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09847899 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081600146 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099883638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104073985 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084349057 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098481864 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08023494 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100747426 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084204662 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109023099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082870084 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102178003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090097319 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101004542 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103169403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087630011 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096041843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085551002 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100764158 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083099863 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100054146 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104457877 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08619373 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102086147 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090234669 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100931352 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083011081 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100851542 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0990483 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08276188 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100930815 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083413397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10059485 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085175808 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109570311 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08121634 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102431302 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100582035 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083450886 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105231904 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084149156 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103231754 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108360608 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086517007 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103562871 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089494471 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104897026 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086838273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102297815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102793983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089791559 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099284632 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09158196 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100917099 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083329224 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102731802 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080443084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101037396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101425279 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082301375 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105605259 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084411719 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099580599 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081935473 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099699282 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084651289 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104793072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108296098 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085187848 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10496931 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078341715 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098603607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084570917 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098159092 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085330135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10436925 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107282101 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0853737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101581421 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081926495 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108314322 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107984937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088091571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099131023 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087764614 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10258024 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085811735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10345926 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0832412 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103030085 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10674924 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085738173 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101372878 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091258159 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10585565 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084314424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102982623 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101776379 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083098519 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096507219 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084464993 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104749654 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089678136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10473593 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100626702 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093500111 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100406586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082964998 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105042936 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082596857 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108963866 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096806672 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08480079 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102458089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08504146 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096664987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082085763 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09895262 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085219081 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100926455 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078280068 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110959139 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108210434 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085144577 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100575972 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081876844 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097202018 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078673575 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100792452 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08432892 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103312908 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110258958 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083481075 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10082122 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07887528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101314193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086046169 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105415512 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079838219 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097268581 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100530475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086177518 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108095534 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08221233 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102153492 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086228222 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103869838 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08140996 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10587024 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098471266 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087139616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112825036 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084559549 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102221902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106417348 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091293302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102582039 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078538485 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102834911 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085403045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101906329 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102877304 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084802922 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115087939 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086577185 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101455861 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082153905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104999186 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100397374 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090240858 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103056502 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084323845 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106392197 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085619303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111669376 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104276599 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090457521 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10357842 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085561688 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101109245 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101707012 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081549668 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100163343 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085047169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102766563 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088464524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109976493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100496939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092481266 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109959701 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088365441 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099027974 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082201296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101399124 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079530895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10298265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100325183 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082258705 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100613216 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08259641 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102987416 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089003726 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103517226 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084431605 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102402768 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095334208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085673136 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10450147 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084348083 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099324577 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08448335 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104412856 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089904891 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108367469 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102242058 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085602761 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1033444 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085143683 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097356214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089999386 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101211689 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086241057 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10158036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083732889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103431397 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105223727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089783885 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104137106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086134192 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114567078 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104195698 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081325938 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099457022 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0886497 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099956372 seconds)
  done (took 57.298288504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146962728 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080379672 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098045813 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079376149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112127315 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098713244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079086958 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098479147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080545585 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101742364 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079414264 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096809854 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108345459 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122848055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093214121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10304749 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097076117 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080415765 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096875819 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080236982 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108492863 seconds)
  done (took 2.851758326 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106853389 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115631135 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113931218 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118546396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08981213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114582323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113671838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114654072 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099345631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109592376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117953441 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114754145 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091862705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10988667 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109210939 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093797124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118209745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108346014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115624518 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094732067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112333869 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113242136 seconds)
  done (took 3.207907289 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08570421 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101225343 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085067248 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097327292 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08337507 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096802214 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087330809 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099411902 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086929967 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10084873 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081441578 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101553945 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102572203 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07895214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100755657 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080848377 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150749632 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106192355 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083237358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103901323 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097250968 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084853414 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097687839 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07872977 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101111041 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088664557 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10226382 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081711405 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101834609 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081789281 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101903011 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080118742 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103988016 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101787776 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082068855 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100491152 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083368688 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101213924 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079443687 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100132398 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083903626 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09807488 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083870306 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104154829 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081705597 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099964906 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083896592 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102407569 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096880388 seconds)
  done (took 5.413972355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107600006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159110583 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085792273 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141383681 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119875602 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112345222 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087408215 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140676422 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102345116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082165593 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121891495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119024787 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103166626 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089199051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107453133 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102363835 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085981728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102535807 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088334849 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103158974 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107811078 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090104178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118738166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117323502 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106844139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083635806 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102194364 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108315416 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0971811 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108610634 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108320055 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090787092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119888964 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104886833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084460158 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107181754 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121412708 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084184348 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107397098 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100688415 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087132439 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108671616 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109597555 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102808146 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104282987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107573332 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085251761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100149655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116717033 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087042466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112712653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11853266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088038867 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104940653 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108508402 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119741002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084603045 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10124213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08751912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117359231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100578018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088479295 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117805708 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105764106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111958949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100050605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10888879 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107033075 seconds)
  done (took 8.077843119 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096679718 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110160265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11990563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120108155 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091324492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110578927 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110708367 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091950245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110969408 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11643991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110491141 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133246785 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086498698 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113825399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110724399 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09140217 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111398749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110902311 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091002477 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111207072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110715488 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120021267 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091155053 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119812631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141484278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105856151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09093484 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110777443 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121337599 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109702342 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121937636 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091680505 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110964571 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120259704 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122125386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090712206 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102311636 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110480182 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092022914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111166372 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104713585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1202755 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091096396 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105430872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111317224 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091078585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120587582 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124105488 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113699901 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097851363 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110152618 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121303003 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110806951 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090888408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120958594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146937847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120252395 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121546507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110884639 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120239119 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101106116 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128849742 seconds)
  done (took 7.651516871 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110260946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114984573 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116837775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099928782 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083181362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1086911 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08251503 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102626357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113780254 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094090862 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116880696 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108309201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112034768 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098164394 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108755482 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1120726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088447007 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108963401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113782763 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108000898 seconds)
  done (took 2.931929528 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095419441 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123783688 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085153699 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111443769 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106967557 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091116334 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10700327 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106324283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085899677 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107244593 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097094724 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116338459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104901048 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091361604 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115849437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110615135 seconds)
  done (took 2.484699325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099221111 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116786303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11961796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08419422 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103743617 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081186271 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105207183 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100560145 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081615983 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119620412 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084807753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109016153 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104666724 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083766178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101692137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088326963 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101522435 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082495374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105494008 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120196781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096075697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103888349 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10512579 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087246116 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104127432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090771047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10619143 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101641501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083102242 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104882585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084972889 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112438221 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100826584 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084256786 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102515594 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082901036 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104360277 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085464115 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108048746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103676111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083447006 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104293026 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085146133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106147888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081098553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105523357 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100482172 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091185716 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102999037 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085104679 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10513129 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10642392 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087263612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115524227 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089135579 seconds)
  done (took 6.228103024 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102625568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107870209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080073547 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102310425 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08852724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107186714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108181916 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088251775 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106659056 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082996788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106928467 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089360579 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107024429 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109358346 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087596478 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107761071 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080351356 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106409943 seconds)
  done (took 2.607062085 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09335556 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104111625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093368608 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10507408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08535936 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107072337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080903309 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104197303 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102449399 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085601938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104663852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087841778 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103475013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087362421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105872734 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084355859 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107039464 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102582557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085457341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101005218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087523263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103243527 seconds)
  done (took 2.959008437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120472315 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123598585 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092237699 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228622925 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10366154 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131111637 seconds)
  done (took 1.638103322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111709543 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120652282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105046177 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106977161 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114629168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106997447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08777552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107120061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117281647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101802994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106719085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117590083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116892421 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096673637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114942523 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11393921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107115601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08783375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105830513 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12826186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088168968 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118476607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107190802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087572879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107248736 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116911827 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116995834 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121372686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087266441 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118178474 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113877713 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087942311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118669865 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122690414 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107826238 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097700247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107611937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127697493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114023485 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0973133 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108179471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114591734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097799731 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113240355 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118694264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106891445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093658233 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107319092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10759424 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136078564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094663975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117366987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114157282 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117525433 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118166079 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135669422 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101803668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116596561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115185178 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12268584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116653943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094796752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117227468 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122645858 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115202073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117582184 seconds)
  done (took 8.125879415 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105118454 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125034638 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107881009 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12257404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097676952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108023811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107307461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088559857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107602394 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106575558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151607711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088537883 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118237659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117036886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107232909 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088407129 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108749279 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117557776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086917602 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134899401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108223707 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117159275 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116818597 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097791968 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122368897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115303543 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10730064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088573581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107463947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106878032 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094306243 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10818995 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116814082 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086925565 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11816733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108253155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087668694 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11388126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107953342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114140451 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096621132 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12895721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108663855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107384561 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122796148 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088093821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107529901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08663679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1077952 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106153557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122328703 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102665396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121884489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117911274 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10843882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088812733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108785478 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107943591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088175853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114988849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117620065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107690094 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135755336 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088813808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108445544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117648268 seconds)
  done (took 8.005481044 seconds)
done (took 154.092347307 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100797091 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135444301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096088252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167610912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106036358 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118889327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137051709 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09741045 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10573409 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086001374 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106110166 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087131521 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170958229 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085125799 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106786186 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107230771 seconds)
  done (took 2.662565124 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20030252 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254348565 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103157421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10590881 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088476494 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109368715 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104342154 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091455968 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109817642 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08627107 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108092914 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086773263 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104782739 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086125498 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109571793 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088038266 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105832553 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087667 seconds)
  done (took 2.88029031 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11575233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147524489 seconds)
  done (took 1.119448283 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120045892 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179257574 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305932627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15436839 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.139785286 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105061866 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154982306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13062397 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19596261 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123143476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12151005 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097089162 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139657306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11567758 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093860349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117063703 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142309414 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112855891 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094198395 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114946798 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136602523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085271069 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114975993 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092952856 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180170356 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119074271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106204086 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085742539 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115908099 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093860449 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1142519 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125636817 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118051374 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154010487 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101705654 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176068278 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097341285 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111866263 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114639396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091975357 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118667608 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118449935 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104061179 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116658703 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107143622 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097884625 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105797503 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084852052 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11480053 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117311484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094502032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11309307 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155106278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119032449 seconds)
  done (took 7.513063901 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792775379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163490757 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090852173 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878312432 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138204969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103926523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777183268 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133290789 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234712338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759096896 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134314011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121751453 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226870563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239331829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960511065 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31618307 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671653642 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101934665 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148341423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153649841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118996364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138017882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129499938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45248974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095390289 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112312073 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116746983 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099707727 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159003864 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125822769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114049836 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180366915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269779321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185203254 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116140379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090349097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111018029 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169407628 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266197854 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215783868 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181290562 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087298772 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110787 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121458609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112198894 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10856379 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163813099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193662074 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173221938 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092734027 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121782677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120154854 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120187725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164817649 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120472364 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293978319 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322113246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111564096 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120679702 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10574945 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267069756 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123067173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224164037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118177348 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211683911 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110301528 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793079194 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189758017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090391973 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118173438 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118639811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094452828 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12047196 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170736899 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390877475 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124659057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092941148 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111186755 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203700395 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124836679 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110633367 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162112225 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115646508 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09956861 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124850851 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123172319 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172392366 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233626127 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124372161 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119181262 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094157451 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125224727 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115634096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214456383 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21897022 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161914744 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212746881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12289918 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18292254 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168131668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098962216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193319334 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097457702 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125715652 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122350302 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215803754 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145560977 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122839562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094231108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117967031 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151652163 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12621179 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099192643 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191257578 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483180498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16714661 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108762691 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127821862 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099143807 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182144854 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097224061 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262724672 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120998131 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169368861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119074908 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088050906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120868612 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164775592 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122335658 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120532676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102050015 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118943747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237098567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217892804 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122615586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220925997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184026919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118790357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172528573 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121317045 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16735721 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120099663 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120451346 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096440897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790723055 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123516922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098413638 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116898801 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196430622 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110255204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102759731 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124729027 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109188808 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769953776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126629658 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120948763 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102348348 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118891448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120419945 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118062188 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095645377 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161644347 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231787083 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121340429 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119468601 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102977073 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180556935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095429742 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124749867 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12503108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124387269 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100556529 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114940085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123976541 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170133348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162723917 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219816444 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594863976 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091700678 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124672016 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230684201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089764438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289917246 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120300369 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224127097 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165366613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121186502 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316411992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166082475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198600163 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126291913 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174769263 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086228694 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118432172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162923515 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11290194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116937117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162801118 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125545323 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101678377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975741385 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112198989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227211938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108166116 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172284711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116194304 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099807634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293385583 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1104701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107690604 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186106489 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093820168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125645072 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729247488 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105021826 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122680334 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118343648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221897857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163763441 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118941372 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098600835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121168889 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163941343 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208346702 seconds)
  done (took 44.149203391 seconds)
done (took 59.175237169 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278756572 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211861011 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258275134 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168144534 seconds)
  done (took 1.859543956 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169301969 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147616784 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119650041 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106267808 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148349396 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085222718 seconds)
  done (took 1.650302636 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350125798 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268688991 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237843394 seconds)
  done (took 1.73587454 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287511698 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250263759 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354190405 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418426424 seconds)
  done (took 2.305919472 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208658032 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131374828 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110042951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104228411 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196176573 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247924821 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140085506 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200265122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120911326 seconds)
  done (took 2.383944791 seconds)
done (took 10.813686522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.249201698 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.146342964 seconds)
    (3/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.2855196 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.251089616 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.254030745 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.160773659 seconds)
    (7/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.186602128 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.204660549 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.204250615 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151763758 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191859426 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113760567 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202977522 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100543077 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112103188 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094954479 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11461157 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138705116 seconds)
    (19/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163970349 seconds)
    (20/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.200061363 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134745824 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119636678 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.172026757 seconds)
    (24/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150016398 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13787186 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117305822 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094110826 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185294667 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070054976 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087776963 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15906508 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.199951238 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.225101866 seconds)
    (34/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121185621 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.144695418 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140416209 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.199278337 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117314623 seconds)
    (39/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11328901 seconds)
    (40/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182602878 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204829915 seconds)
    (42/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096587125 seconds)
    (43/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.14419106 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120913806 seconds)
    (45/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097214145 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.16938028 seconds)
    (47/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0959345 seconds)
    (48/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116994682 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093458478 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113816799 seconds)
    (51/286) benchmarking ("sort", Float32, true)...
    done (took 0.231552279 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114139164 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067375967 seconds)
    (54/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177278538 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109139132 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.088673725 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.126626345 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.213244567 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1177046 seconds)
    (60/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233404102 seconds)
    (61/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091961347 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180812073 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110225181 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.200995757 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164157966 seconds)
    (66/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197497513 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124541325 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148673845 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.1235933 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114294876 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093048665 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18777084 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08766903 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188124596 seconds)
    (75/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088248264 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.16229232 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134846583 seconds)
    (78/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116985606 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127592103 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198311869 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183094745 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097305203 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.109139311 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137332727 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.163912642 seconds)
    (86/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116393366 seconds)
    (87/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075964529 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120620528 seconds)
    (89/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067037591 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.088849185 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150477356 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.184961308 seconds)
    (93/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066412504 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 0.232954364 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171370792 seconds)
    (96/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118895824 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082719147 seconds)
    (98/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116491935 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09355342 seconds)
    (100/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.188743702 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068774365 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109355999 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069193101 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107433438 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095241342 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.143866945 seconds)
    (107/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174645249 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094593079 seconds)
    (109/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.087756843 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124201616 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218418103 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109986877 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16181938 seconds)
    (114/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094140104 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066899545 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.110957602 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090663614 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.180485443 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119000937 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192826092 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09457771 seconds)
    (122/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232637294 seconds)
    (123/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137873011 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091775395 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1168734 seconds)
    (126/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066390724 seconds)
    (127/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089803348 seconds)
    (128/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08956782 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089057272 seconds)
    (130/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067354146 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095183212 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114657527 seconds)
    (133/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111107636 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066212878 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.11928416 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108192477 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09463906 seconds)
    (138/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099404582 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067659923 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108959209 seconds)
    (141/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067165933 seconds)
    (142/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067875005 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108200528 seconds)
    (144/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096317144 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118850338 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06723457 seconds)
    (147/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11140956 seconds)
    (148/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098599592 seconds)
    (149/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100139945 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089810635 seconds)
    (151/286) benchmarking ("sort", Int8, false)...
    done (took 0.208026905 seconds)
    (152/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.119747582 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11627072 seconds)
    (154/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.127095603 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107957192 seconds)
    (156/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108462021 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132527461 seconds)
    (158/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15266292 seconds)
    (159/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116658218 seconds)
    (160/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11033873 seconds)
    (161/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089813028 seconds)
    (162/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091178713 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099671865 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122996975 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068254852 seconds)
    (166/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.109724956 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098122748 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145838168 seconds)
    (169/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099639624 seconds)
    (170/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1539827 seconds)
    (171/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136103554 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087586245 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179055829 seconds)
    (174/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172760247 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069130795 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123700235 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077195772 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067693511 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115934953 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109968424 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08607419 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117421232 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096896386 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108514802 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094128611 seconds)
    (186/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066794641 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088559665 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068292269 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223126469 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107695064 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067510787 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068650324 seconds)
    (193/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136315017 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110070327 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067125108 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139138239 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068291825 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086904285 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.133553237 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118427795 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094371343 seconds)
    (202/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099320835 seconds)
    (203/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067079323 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094580754 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109906412 seconds)
    (206/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117275054 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 0.148941241 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183049984 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167262848 seconds)
    (210/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093362266 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116403004 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097785579 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108280817 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.282920395 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108968722 seconds)
    (216/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086595791 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135082742 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110192346 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109076048 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109672846 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100057053 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10979313 seconds)
    (223/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07719518 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108270897 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068072396 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10780939 seconds)
    (227/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067424619 seconds)
    (228/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172119777 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100373581 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089301532 seconds)
    (231/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067417918 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086167823 seconds)
    (233/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090188816 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112652988 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112909258 seconds)
    (236/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06707252 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11826115 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133699156 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095782861 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135761038 seconds)
    (241/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066838353 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066276925 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118332652 seconds)
    (244/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092821032 seconds)
    (245/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08951251 seconds)
    (246/286) benchmarking ("sort", Float32, false)...
    done (took 0.172955069 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086377535 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136134592 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086287292 seconds)
    (250/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101637705 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088064502 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121296848 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08679161 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108761443 seconds)
    (255/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093510016 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.089135337 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094618928 seconds)
    (258/286) benchmarking ("sort", Int8, true)...
    done (took 0.220016639 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108192567 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16242396 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088387679 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109480877 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085823986 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09036007 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094817862 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122052212 seconds)
    (267/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067404657 seconds)
    (268/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06699345 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122596015 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067638088 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090144578 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093157191 seconds)
    (273/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156628778 seconds)
    (274/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086967372 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109796605 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085889211 seconds)
    (277/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091084888 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162384372 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093000683 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108995452 seconds)
    (281/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067193925 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067616919 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11048939 seconds)
    (284/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068694354 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111084122 seconds)
    (286/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067491817 seconds)
  done (took 35.902829731 seconds)
done (took 36.78447713 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100155032 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147775647 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09686168 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136116918 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123082847 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091471892 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117779008 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098931297 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12281993 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124346405 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098882685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092724302 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098061173 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120410511 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097733939 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138382624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122840528 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094477926 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118393559 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085806001 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118071153 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086259815 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110978132 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070612516 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120474442 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094717256 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115362476 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119695671 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086267798 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10959813 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091984116 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117164379 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087394686 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122754368 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093657466 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117623287 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097213166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119943777 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110805542 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086734446 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117047961 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086554513 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116146074 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096077439 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115255979 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091854112 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118472257 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099703221 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138685897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114993139 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096425964 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119724113 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096784282 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116599646 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090775523 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11917321 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091920981 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138078868 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118636061 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091940187 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117836052 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095269061 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115692577 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095348372 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117621561 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12007929 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098461665 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115462238 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097453047 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114318856 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087062473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117931097 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089705049 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109430945 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095461257 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120766167 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108504463 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091913948 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117098192 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092116366 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108718218 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089565043 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111139634 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092942208 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112160509 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069759917 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113363647 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092965215 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10935346 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095990831 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11634371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094613427 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111363626 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099068046 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109682285 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092531536 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110249215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08779306 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112324325 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091395613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109348742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090118404 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11931018 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112390616 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09285446 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121918557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087267496 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116097797 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086659241 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10901611 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.1024483 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120987894 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086869404 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115933009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086774416 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118027991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086912749 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109797268 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110175624 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087873299 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116942995 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087856964 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113110508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094027207 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124933774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087117798 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113397644 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089302872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109655236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092821887 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109545299 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087779961 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11212475 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077852935 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11262471 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08746396 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117719915 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089965842 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119203353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089494288 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119883324 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09195282 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116193744 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116093733 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08641325 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074435214 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115332955 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089366335 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112152421 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088125669 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112129473 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086748829 seconds)
done (took 16.86698788 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088309213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183543969 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149927766 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141720702 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107417892 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110965156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121142778 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118838783 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113293537 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141919963 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110536236 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132114545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147430144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086907848 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111786073 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091374861 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112430117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103651495 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145009862 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131660637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163647954 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087040426 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145636469 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133665159 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120417652 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114285145 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112015818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091525749 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114214025 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103140234 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131992758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114658832 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08796297 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133415657 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105051919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119281435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087417763 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118413544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088208778 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11097046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14062242 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132602869 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092869277 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116568445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091938426 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11345427 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089831633 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120118621 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098404693 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115763421 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125834259 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155544521 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091424434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121249887 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086901776 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121859267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120680756 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09084141 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110572541 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090893795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111315532 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092461849 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126289887 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141548441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091562514 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120629442 seconds)
  done (took 8.576028743 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104707516 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138986315 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105327433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1302779 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110980663 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088624986 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111992177 seconds)
  done (took 1.735129288 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088562592 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134359674 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111591973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134884354 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131585504 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112727842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123090239 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089516322 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131932531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089742959 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13367654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149593708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090894713 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120552407 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137559334 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088749549 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136163641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089711677 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116540503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111618957 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115398918 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134235868 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091750664 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112811788 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103937702 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113605645 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161942373 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094452461 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114358151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092754673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110964569 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15065155 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104166596 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123914604 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088986922 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12866767 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128403576 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087842688 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12557354 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094771798 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126438671 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08986071 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114806572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088170707 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117822189 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100013814 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117258228 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106352807 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115901184 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132791672 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089561145 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126653057 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089073418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116585062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090501552 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119047219 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09863564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11325686 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132697229 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090094567 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130590725 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106232354 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128251736 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129858111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092341602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126668517 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103594422 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116422592 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090648544 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117640378 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105710045 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111396042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090895574 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124471578 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11582816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112224464 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136272761 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090971989 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124187285 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089963358 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113512784 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113440403 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112248816 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117578298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089572526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120697469 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093028043 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111275151 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088162586 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11660344 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08742263 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115435657 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092297218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114529455 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092178278 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130675118 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113824113 seconds)
  done (took 11.791180234 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090206344 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114194176 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092053814 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113735566 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090629922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11439003 seconds)
  done (took 1.568477471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116781776 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11722222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104535912 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120058643 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155025422 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104306443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129472895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123516107 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10920385 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125947737 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128710584 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105876513 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134994354 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120645646 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105049148 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119763232 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104701224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124037994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126322999 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096781161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136238804 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119528849 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097867468 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130572714 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11739194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096602955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125523372 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103972403 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12705956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122391561 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096133991 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116924187 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096580506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122529081 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128812394 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096293856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119741067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118472474 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100289739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117431067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104619081 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120036881 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126353347 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094623653 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122959896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120861886 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095131334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125875456 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129655914 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094230753 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121200171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096245711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117964407 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0949869 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122506737 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122533834 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095073197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129338878 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12084686 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096950613 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117661045 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093984638 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123241496 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118034142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104505224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11891302 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119978065 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09659259 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121495902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095612917 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117997225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092633258 seconds)
  done (took 9.19299233 seconds)
done (took 33.804398557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675710723 seconds)
  done (took 1.628251295 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.825218758 seconds)
  done (took 1.781207068 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.853639272 seconds)
  done (took 16.838121863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.483413426 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.565281902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991171782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179407796 seconds)
  done (took 3.172874849 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.919523201 seconds)
  done (took 1.891658623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282392693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234526312 seconds)
  done (took 1.474941524 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774199577 seconds)
  done (took 1.743946206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355518058 seconds)
  done (took 2.313526598 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325087026 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182277583 seconds)
  done (took 1.47291419 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544583385 seconds)
  done (took 1.511583662 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.584954608 seconds)
  done (took 10.558021073 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266279144 seconds)
  done (took 1.246900652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301417819 seconds)
  done (took 1.272804639 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.237937873 seconds)
  done (took 4.211654879 seconds)
done (took 52.083670978 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099061368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12534136 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101855406 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12294545 seconds)
  done (took 1.415379161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10125013 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120668176 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100680745 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12005065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12554692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096207767 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122740734 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101646303 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119938872 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096754508 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12007063 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118935529 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098472772 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1219135 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09375878 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122619009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122926156 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095919618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123871003 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097569702 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118126966 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097911995 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122937142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095726222 seconds)
  done (took 3.631631841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09990024 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117691202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095954172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11666098 seconds)
  done (took 1.410918306 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100627768 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129959793 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10584693 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124168336 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130228898 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105858511 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116599691 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092373279 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117989498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099676133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115039492 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138683977 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105927969 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122944674 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102265478 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112521027 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091519093 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129728717 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122978149 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101047734 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117729718 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100074308 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114278546 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108623807 seconds)
  done (took 3.682882345 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169564583 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125420347 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136835695 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095158318 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158448889 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139882257 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088338773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13932638 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087629735 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129192705 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116301329 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134030774 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128143821 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087347349 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112264936 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087961669 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127258877 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127280285 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091203265 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126230375 seconds)
  done (took 3.390143407 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097878064 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116168409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088682911 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115148648 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098769189 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120162868 seconds)
  done (took 1.614497474 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090626772 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113601332 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089736398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112488848 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093559354 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113399895 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088651905 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113745973 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088969461 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113697951 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089253491 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111602884 seconds)
  done (took 2.19622654 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500982092 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117638242 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118970044 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088841106 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120256975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08967012 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128043618 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092853679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139126028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088863825 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114672293 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093051232 seconds)
  done (took 2.669992654 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236666509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12408031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280930247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363671858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155545281 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164556467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276930385 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16015843 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195403127 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148260513 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228187605 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197579052 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150491563 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215672883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112063397 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143992255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18790431 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24789018 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152023983 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210009326 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204549211 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165888866 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179780729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150061986 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111969421 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190951245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094610677 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129540999 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231667604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177883332 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189017087 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160080408 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147235496 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234309276 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24597675 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194752059 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277071681 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13358378 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164190862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167020814 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23684587 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138102234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233389346 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155489321 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104581213 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218951479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166000571 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175616218 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143830716 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137353271 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196869158 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241415816 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192044094 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13759422 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294008008 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146322946 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157851228 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214038426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224506184 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224901291 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189105547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119458413 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186977015 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189438921 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208461839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151912429 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181009787 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146751617 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181835524 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188356548 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16444898 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203757748 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178900221 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137186174 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170118833 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171587951 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172353129 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258199944 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184257119 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121324298 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169309923 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148621226 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129403596 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168273515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124249306 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239296252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116769191 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161741243 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232929153 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133050442 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160444674 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219065392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183170527 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148094889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083822979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151895269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153965196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176487286 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138497764 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157454674 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155478646 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129521546 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169760402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097837317 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209912056 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091414151 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17197945 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208046949 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100303307 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160475316 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153050829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149163203 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177287014 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197262465 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138651642 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132665816 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209572396 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17800689 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139507293 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175849873 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228214975 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143419742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122250855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225703962 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241449616 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11279674 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228227994 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152651337 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108638205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132363814 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180792704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154981194 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160063434 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132077056 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182680217 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232284552 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098673268 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138114902 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194378454 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132576182 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131476811 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153887579 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147262798 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11106941 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1424819 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143523356 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176409988 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178457082 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15296139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166401296 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149058686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246824772 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139142221 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151353022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147900201 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094853122 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218590069 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198269676 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129231335 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204741341 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17046501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222747123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168926 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108134591 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201362235 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102975392 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118417713 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192781889 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167317119 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161046145 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.221123556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194572341 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179002344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.206875564 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166310481 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174934916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164073495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156427235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110508591 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158886189 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15733289 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124113868 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137895092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107133655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147400881 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141071529 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132421238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196997345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194612466 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188327309 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157093604 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147124645 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179967036 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101433054 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203049762 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178269435 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144462704 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1974736 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191943811 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211043908 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142309931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198323202 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118757445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098341952 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140700025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170028936 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132806665 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10787044 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185710787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180117593 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180046054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172457529 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230430137 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174494965 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190206189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121092906 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141399511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208679807 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17655264 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15486097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13566708 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150903944 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176845033 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153603046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254729109 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166954103 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175513039 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233456002 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148942712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104489852 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149644734 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176859413 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151914407 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176149325 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146225525 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137666238 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159705501 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129686049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159798469 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184689594 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162970469 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210992197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122420149 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211470518 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100232452 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160452918 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158131088 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16508882 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107749817 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173954185 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226582823 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120068636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16573262 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213934778 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103878164 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30467873 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232419334 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219451255 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111041107 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154529367 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160852889 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16241415 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169332459 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178291979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15691982 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18714247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15851018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135782111 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138368866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149318057 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124280689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132138557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148150865 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175460712 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13744246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185760728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153347086 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159340046 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170258175 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148945426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14320419 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14901341 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216857097 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181327971 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237654876 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150909355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178497508 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231163961 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099898847 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131433934 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105670819 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176383777 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135321629 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217805053 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186449638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197745667 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204788557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178394462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137954855 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092831626 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15700894 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167605794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227477743 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148402435 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146187221 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20271141 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135179784 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105328112 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165381278 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28301104 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141255323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220456746 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080574592 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277262001 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124053972 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105294227 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161507794 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234440446 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134399812 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151303244 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192342217 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160488569 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160867636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121619547 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216644365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210219802 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224701985 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18425545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131064838 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130001286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200276149 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191553293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155068572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137223839 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204277386 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194419237 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221228828 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140009195 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167291733 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167154648 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156545059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18717801 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134020555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205611878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13400754 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189418123 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1520414 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137258681 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176806449 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213071771 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138337328 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187982137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182432294 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134460757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131762306 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163953832 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178367711 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154097916 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099470456 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205915122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097014165 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217336659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231415793 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132417494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154188681 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146070881 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134488078 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126824071 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18146725 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111606446 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162095193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200934775 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134280025 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188704344 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228336929 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169918746 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172543284 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145470819 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691525729 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130021191 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193925255 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146559079 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204421143 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149666013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171676537 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157609967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16903487 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22025322 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160285111 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228882701 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191381865 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176700227 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131474685 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157146252 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154469428 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143421364 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151901453 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167571798 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160406801 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143544684 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178852013 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163924528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132642544 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113085596 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224070559 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120452279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211080061 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179572525 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136742334 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17207522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186135245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132465535 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17916269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235174753 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113182574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147594082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132885805 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149733756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259669868 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09666475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215626019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183245508 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158323022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167613043 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145925186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191230404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156652016 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209431105 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115816481 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157596232 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154239685 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136900316 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129449121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152888401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167163714 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1472307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159302544 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137368719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193022261 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122674511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143001607 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280238089 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175748794 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241661678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106798037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134472356 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162531985 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149440142 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175710524 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175216239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135755836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133899129 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135207699 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1270501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136415413 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129459831 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216671136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163472187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206677275 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135644515 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275665914 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112348637 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154990695 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114030644 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104480766 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149000031 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144973158 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154894154 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192069739 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259485788 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146698206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131535392 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147659968 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098109829 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13521562 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163078354 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165078172 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180270998 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142713915 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080723027 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154851221 seconds)
  done (took 81.803822658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183951742 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131258933 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145279784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200608398 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174979393 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268923262 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207955023 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251718988 seconds)
  done (took 2.634960195 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093203644 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144204973 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156674921 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13117937 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091802737 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118118096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34008892 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131827715 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115453914 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120788035 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169651471 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093989215 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.540668704 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090866722 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118097396 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105509748 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091842555 seconds)
  done (took 3.717300588 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.023559694 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473773187 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.611619345 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.188882505 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157393074 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11602437 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660621386 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094631031 seconds)
  done (took 11.397096331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11522368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134935728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123095325 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151377843 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139446967 seconds)
  done (took 1.744927383 seconds)
done (took 122.2770934 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097172651 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126130865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098524538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128623057 seconds)
  done (took 1.510324659 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095335263 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070617062 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099303832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074787497 seconds)
  done (took 1.410330991 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.186378776 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166798904 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381519233 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072200033 seconds)
  done (took 1.55460555 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114768656 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130907734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104394142 seconds)
  done (took 1.431345996 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105887954 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127405759 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102841476 seconds)
  done (took 1.413629358 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106153729 seconds)
  done (took 1.184078746 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107813732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135638654 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109071183 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135015505 seconds)
  done (took 1.565257685 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098219605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124748332 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109250867 seconds)
  done (took 1.407650721 seconds)
done (took 12.900976383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103118085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416622236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411036644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11042058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721058859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379958072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.016629269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144418053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163235144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093228629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137266969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673150062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042920657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371352882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005675851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370213223 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681955589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118921463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091388998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120169852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000846618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092781544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119607025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092615544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70217614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397237672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120748298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.367992772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091944793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124759791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383672915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121320828 seconds)
  done (took 16.857950874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096306154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171148566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097906689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122015621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121701684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094989307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1224246 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093344968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177300784 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120350346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110392137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119987707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123409827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09562659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139363901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094189311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123144499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092920138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119528398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094040506 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137874559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117871223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094269143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119385635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094024811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133392103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094080802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119893054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117502306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099080411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125390302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095470218 seconds)
  done (took 4.756058538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140005506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181441009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126690769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126634675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166842064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121534953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19671927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117445441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181053271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120880562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137500193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093110719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154715166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120126028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114036158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119054473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095975967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119687612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092210146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121341181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13792771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092739202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120182516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093081322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120823957 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107987098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121910647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119119085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09407928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124955918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099977409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121650202 seconds)
  done (took 5.086530208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097425369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123962732 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10867744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136353965 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094722036 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123154665 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097376848 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122825012 seconds)
  done (took 1.986243259 seconds)
done (took 29.771931811 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110565952 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125044465 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107237408 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133625823 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102925278 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130330439 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091318878 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131893629 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132082247 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102394358 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135318337 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091973168 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120496452 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091598513 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133036401 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097714982 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130165589 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102051148 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131955492 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13055095 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094433231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131057619 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102823642 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131105763 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103553261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131025711 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135391777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099346362 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120913769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094660869 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121682311 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102958417 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122330758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104446268 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124757908 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096552435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121813365 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093258818 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130848041 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130571253 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099911826 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131099042 seconds)
  done (took 5.930783295 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107873568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13705135 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104833101 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080533234 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114752641 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07999561 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135127107 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078668915 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10761666 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107225879 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07398824 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105199931 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078474789 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099992835 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077944902 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075102541 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106066846 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07625376 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07689326 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103902414 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080134563 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073005477 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106407752 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078747703 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074934889 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107704392 seconds)
  done (took 3.536444672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100541359 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132514176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112972713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182044231 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159311952 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099206302 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129972059 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137519149 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109810219 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118754604 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096546247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147726646 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109048559 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127382984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092649573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135343161 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133363133 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094266096 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125965061 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111569269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136726225 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103980633 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139134139 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130888874 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092364925 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12098911 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096413549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133194762 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097761559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13056164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097365839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122612697 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120606916 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10432803 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123806514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09458091 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139958986 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102509864 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128867092 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118905605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101263458 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119934959 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113333093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159646906 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092647007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127801009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122627778 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104305831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118950348 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111742796 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129285104 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092296615 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123959181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092561755 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119733194 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107595723 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122000992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094939022 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13067167 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125119288 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105801741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12278067 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10858928 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119852401 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099863929 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120170533 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092823674 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119800472 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141701791 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09454475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160338242 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092821204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122259313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102283719 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128524091 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126802027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093683999 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136151259 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102196401 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124215805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10254128 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123936734 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095561912 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138363332 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121726582 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09554179 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120505322 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100447167 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122243585 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093989396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134320167 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092060198 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123836776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110623141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120647649 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120642515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101043955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124843414 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09262269 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133602565 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098089083 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121529551 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13047298 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093756337 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122913125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103487902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125435933 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092514018 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125570194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098666381 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122271358 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093739534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124661925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094583997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130577707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127029738 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097892519 seconds)
  done (took 14.687867698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234235138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21439379 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234316757 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261029041 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134786604 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.142915695 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211312668 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125106384 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123233888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158641719 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17013295 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179890235 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167246575 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178544142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16800989 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093575461 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140487254 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163382138 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213326764 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256087342 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142477818 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128736792 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.132731008 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158443488 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136042099 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130669752 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109752166 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133384314 seconds)
  done (took 5.751479378 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108801391 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153481625 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098131517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143958791 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147293596 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093507686 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126046508 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094650957 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133497992 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134144202 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093681403 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128067557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100330248 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13061202 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121272579 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10255278 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130639647 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094463543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124892421 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097050282 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132772074 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101554855 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125685688 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119591005 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102978108 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120380043 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087241462 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141409549 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120304956 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114748717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119506573 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102094152 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135124148 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093964441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121623754 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094792916 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124283162 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095696827 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124078805 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09193909 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12125661 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077957377 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121706834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13481043 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100438169 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080508724 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128625351 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126494544 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095103204 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118784535 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096284965 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123257249 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096226687 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128592283 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0961999 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121852881 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096510239 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114081106 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100321568 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124373455 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084851321 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119590557 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099019809 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116587439 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101550809 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126348234 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092733891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123987713 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097077837 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128355798 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094791094 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128651039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091200865 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123861864 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095683973 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126904281 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123232682 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093388936 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121146539 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094059716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075008453 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122917867 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074473987 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125032012 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092595709 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121112787 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096150771 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128740631 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136602235 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096522552 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131049209 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094195007 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121261172 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096925867 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111871059 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09770042 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138775894 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13998351 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093885227 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120635112 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108139062 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124762887 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092505656 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105147666 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102739399 seconds)
  done (took 12.873744072 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13026322 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152209729 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123033236 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112118072 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154806218 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155812942 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100966024 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129257959 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095447258 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140794773 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094300503 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131423372 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093935942 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136940977 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155512744 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104110276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124766364 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108563977 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126749175 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167405819 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112414709 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141835326 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111063227 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123381996 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127929786 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110464339 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160281524 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107210743 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135363526 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140601392 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108363798 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159683259 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141118029 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098661068 seconds)
  done (took 5.439201982 seconds)
done (took 49.301616119 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.17949346 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.391802349 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.178798337 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060212515 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.190333133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.197150714 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.188562523 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186700218 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.542380274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.17483625 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.435161923 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.675780203 seconds)
done (took 59.507073517 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.225861162 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332898338 seconds)
    (2/2) benchmarking "String"...
    done (took 1.484170622 seconds)
  done (took 3.934088043 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.74650207 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.056262135 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434483593 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.173960071 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192611115 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482997496 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.762215778 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.458658915 seconds)
  done (took 27.661875096 seconds)
done (took 41.671590657 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.171562511 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261172833 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.209771046 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.153976588 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.278736433 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.197159108 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.331231431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.262237444 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.193515806 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.155080726 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.176678845 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189275661 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.178994861 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.481516252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.176752024 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.175605503 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.187422106 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.865499597 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.551059966 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191833046 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.178309504 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.2550686 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.186185791 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.181439964 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.194628708 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.179349017 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190684176 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195427825 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.260711481 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.179684267 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.281350021 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.437458449 seconds)
  done (took 189.211234622 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.175619692 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.298989262 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.376955023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.19598413 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.791602369 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.373882636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.324388348 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.846661015 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.191752839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.195530729 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.477233545 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.176456237 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.528086728 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184945745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211433795 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.243729876 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.378701555 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516454409 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214873563 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.339221964 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.182030309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.545982017 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.508671575 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.418208233 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.18623937 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.282013619 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206479714 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208531548 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382201599 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.330082049 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217016072 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.17885933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.727567682 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.034767847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.187943051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.2036647 seconds)
  done (took 149.951359198 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.177346532 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.178160658 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178630734 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.207014923 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.179451419 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.677540235 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678510355 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.709637955 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.488051514 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.439099529 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.394161516 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.178786602 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269717856 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.178372735 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.192458369 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.180728303 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.194739774 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220003666 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182940803 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179464675 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682031928 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.193173434 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.36751194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.344125184 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.193673633 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208144829 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.566067481 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180063652 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208716551 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499794183 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.222871227 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180549588 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.478183236 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.531438378 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289777521 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182820248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209693393 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180642239 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454163299 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181454073 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182145963 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.184120303 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.180986196 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782705268 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.180997608 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.682621273 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183669038 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082272472 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.180984908 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181538295 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.760796163 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.775587848 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.198261103 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181430401 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.18515747 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.181285877 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180669965 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210320844 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.796148538 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.277983773 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199541524 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181492947 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184498069 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211587522 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183041088 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.458147939 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182410041 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.245138643 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253515933 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.289505221 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.686817016 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186336701 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277362241 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300519459 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18295687 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.182612582 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18382528 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183975409 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182995035 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.290056577 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183303018 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.558637392 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.34866511 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199290319 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.397723217 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.28023786 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.183778948 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535686777 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.18492987 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182563106 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.897960186 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277081292 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.184319436 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.184332789 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184135031 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.557154311 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.690277317 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394440615 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187636884 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.677113745 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.191851909 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.573551107 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.681351412 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.796280531 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.187763727 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294108465 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.349697754 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199776231 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.184865604 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.388030719 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.185303118 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244149314 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.184855349 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.578843253 seconds)
  done (took 363.495809694 seconds)
done (took 703.760869291 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.782234686 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.771376862 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.875789501 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.764529958 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.73125043 seconds)
  done (took 10.035687613 seconds)
done (took 11.147794063 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.35945293 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.360128155 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239763266 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360426062 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216219666 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374961772 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338276881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.209929143 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281709625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.25959127 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280413951 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236239495 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218848371 seconds)
  done (took 17.847391918 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494416528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.496516715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250680022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494305025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22705415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496394348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383248057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392361968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40240811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21904651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200901319 seconds)
  done (took 16.169678969 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491477202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49823341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253884921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492641392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228110157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502017525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392688585 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405262594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396554955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219734433 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202239153 seconds)
  done (took 16.197020334 seconds)
done (took 51.326781554 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.196683092 seconds)
  done (took 2.309976164 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.228189068 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.390505187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214723688 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20311577 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.197113383 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.198530117 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.20414783 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.198234848 seconds)
  done (took 10.949174608 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194984742 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.19812475 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196805682 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.197583775 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196968593 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196795462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.194932767 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.194811383 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194803818 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.195712791 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198020074 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196786553 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197124964 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.195783128 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.195822919 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.195544889 seconds)
  done (took 20.2555095 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.197701278 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.195727497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.195005643 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196702088 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.195767047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.196533473 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.196826342 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195794255 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195706518 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196060097 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.196900616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.195626043 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196981536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195878874 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196464461 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197586399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.196692015 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196419608 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200766961 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196381662 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.197819288 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.195793819 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.197039433 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.197528826 seconds)
  done (took 29.836883247 seconds)
done (took 64.46634766 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.789736378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.68688497 seconds)
  done (took 6.592433946 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198253159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.199518737 seconds)
  done (took 3.515211707 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.19879818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198548865 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.199441023 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199629034 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198725749 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.199425222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199077343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.199153293 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198113571 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198055586 seconds)
  done (took 13.105658512 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199666265 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.199419957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.197843149 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19997388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.199998289 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198012042 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.199302327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.200419079 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200448046 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.197733969 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20078515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197059316 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200012969 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.198662428 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200619416 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.197760483 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19784998 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198465892 seconds)
  done (took 22.700522036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200814873 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.20070645 seconds)
  done (took 3.518183145 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.197846285 seconds)
    (2/7) benchmarking "second"...
    done (took 1.1982641 seconds)
    (3/7) benchmarking "month"...
    done (took 1.198640515 seconds)
    (4/7) benchmarking "year"...
    done (took 1.198012854 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198621728 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199246337 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.198227385 seconds)
  done (took 9.506046676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.200608631 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.367238372 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.443722177 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825116884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202402743 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205062389 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.047210683 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205391932 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20729175 seconds)
  done (took 13.821820463 seconds)
done (took 73.877054944 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.195351693 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209250899 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.376335878 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209043843 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.21376992 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.538039404 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247562321 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.319872143 seconds)
done (took 37.429184194 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.205182273 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.175745952 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.830115115 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.177832938 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.219478789 seconds)
  done (took 18.522768798 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.154058805 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528788393 seconds)
  done (took 4.802637553 seconds)
done (took 30.650535803 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203820558 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.200332255 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202947398 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202932121 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.200236955 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202945507 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.200844859 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200592854 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203066904 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.204387631 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.204200122 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.203216457 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203062223 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200192643 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201074635 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200991108 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203030004 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200979284 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20094942 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201404429 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203860975 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.200703489 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.201706639 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.204139921 seconds)
  done (took 29.972257962 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203371146 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202649739 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.204253907 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204174053 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201368782 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20363116 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.204462154 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.202361572 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.204597153 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.204850058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202490132 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202203825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.204435116 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202084569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205065979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.202446872 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.204997545 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201658083 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205494182 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202597104 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.205422228 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20289945 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203268874 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205406782 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.203453126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202563268 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205657997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204158538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204789705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20323903 seconds)
  done (took 37.231435427 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21037797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.213031137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.205382885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.206668361 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.206239335 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206838178 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.205649047 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.206265487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206183141 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.206732407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205948364 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.205700066 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206565083 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205887461 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206575306 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.207389111 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.20601286 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.205855226 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206977786 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206642857 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206622571 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206546595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20649783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.206358151 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.206609902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207050568 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.208089107 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.207390768 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207133873 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207257222 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207171914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208476824 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206992704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207390066 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207847536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208072339 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.212458602 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21423249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207675336 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207590227 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.208382711 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208258441 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207704606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209466531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208372929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.208617533 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208603132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208126628 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.208110234 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208649955 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.208863699 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.208559262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.208902036 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.20907634 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2087413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.209830273 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.208729075 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.208634444 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.208830284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20901299 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208998084 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.209057137 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.208344479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209482726 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.209580827 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21002737 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.210012364 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.209760863 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.209783869 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2101348 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21057583 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209716938 seconds)
  done (took 88.107801708 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209976257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.207350604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.20736615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207403688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207339314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210346809 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206757523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211117209 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207457039 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.210513438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210921503 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208580864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208845021 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211548855 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210192013 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.208117457 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210764858 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208878531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.211624191 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211482788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212313182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208253994 seconds)
  done (took 27.733696196 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21265724 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212823113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.20917345 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211881816 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210430009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212223986 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212146961 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214325507 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212169883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20919769 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209321539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211916773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20893897 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20917245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209714316 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211863837 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212288634 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211790585 seconds)
  done (took 22.929955194 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21108217 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.210401059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212895648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210258782 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.210979527 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212608453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20962081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213120829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.213113222 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.210581776 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213382535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212391717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213118983 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210240385 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21283092 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210824979 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213532598 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210083089 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213403324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210812416 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210838167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214684118 seconds)
  done (took 27.790353428 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213488034 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213765524 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211387389 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.212171324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211920812 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214324075 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213345089 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211123397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.214983007 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.214526167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211960622 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215734439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212685919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212832738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.212249579 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212524657 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214592816 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212575978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215139641 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211770861 seconds)
  done (took 25.392836408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21532352 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215719531 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216064314 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215691499 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216197981 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216392151 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216510169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216228553 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216569443 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215812597 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217199893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216703789 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217033492 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21636218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216387724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217212135 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216299538 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218332414 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.216509522 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217352688 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217655808 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216659239 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216344916 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217934315 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.216001246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216776158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217217864 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217576654 seconds)
  done (took 35.197669767 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218098952 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216974062 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.21525363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.214348263 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215084355 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215159202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215299173 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.214778897 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217725011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215889104 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.217503412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.216806543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218255263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.21735153 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218118435 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.217340778 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217187034 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.215814896 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215854698 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216357339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21857775 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218181244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.219341327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216203767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216359573 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.218694163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21614634 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216528322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218301013 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216239548 seconds)
  done (took 37.637670194 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.237186519 seconds)
    (2/2) benchmarking "in"...
    done (took 1.236779177 seconds)
  done (took 3.608622264 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.217321583 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219103925 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.219314181 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216803447 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217348809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21881498 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219737717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216589065 seconds)
  done (took 10.880193143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21943782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.220344767 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.221172653 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.221387932 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.220315427 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.220179454 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226822572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.237893986 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220617959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.220717974 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226954256 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227189638 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222628366 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219351184 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.220289091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222214786 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.221173527 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221364373 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.22115856 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223014827 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221305985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222651889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22256194 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.219478277 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.221971833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230842931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242773917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.222552827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221491144 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224158874 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.221187061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219145571 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222097363 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.223100155 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.222821033 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222051605 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230291001 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238831825 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227269038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240828397 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224031557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219809461 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22389504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.224333974 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224390717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.2225837 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225002814 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.220810618 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222635981 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226271253 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229421433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222518596 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22075649 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226136497 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22402671 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228827312 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.241095936 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226031088 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231932348 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.234166177 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253913842 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2469413 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224959451 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223622031 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233513395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247183556 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230011077 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239603922 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.221892535 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224978901 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.230035257 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254105332 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247680645 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224405716 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225152456 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225379507 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224336413 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225486447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231101685 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244630779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226692218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224663397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233854871 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248043731 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224686687 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.225322071 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.225657397 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.226548287 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226131557 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234923674 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.241884884 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.226808669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224650453 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.225702743 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226159428 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226030728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.224683974 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227213876 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223930513 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226490387 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225948507 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230045992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234341681 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226653667 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226585697 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232529176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246139059 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22679704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2327806 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227352002 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227451335 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228819448 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.233311507 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225232334 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230109344 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234553366 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.228470011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229825283 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228166596 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229114644 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237764524 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25360097 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229223272 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.228724564 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232765521 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240045849 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228443508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230513721 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229787678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225454194 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22593342 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.228808163 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.228691375 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229405607 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229477946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229703339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.225995223 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228808422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229602484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229155132 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.229244102 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230065613 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23026247 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229975872 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229245332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230497786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.235254733 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246702813 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230519088 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230057271 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227278429 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230620652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.230375344 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229791792 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229892605 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230786638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229457945 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229594476 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230516448 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231348139 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231716847 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230063816 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234305642 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230560609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233252466 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229683468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228283171 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230807124 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232190786 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230449708 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231376607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230342069 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234292887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23934734 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.232087991 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231367301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233731267 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23086649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23256392 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232617824 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234353556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.240120776 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2314465 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237837943 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250749553 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232039573 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233689403 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232806992 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231135066 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233528075 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236548645 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240654064 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244407259 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258230083 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233080085 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.236798622 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233856764 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.237534165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237145522 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.233697751 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23355616 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233215375 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233816072 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233673863 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.235461615 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234684982 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233145511 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.235624631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234057721 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234032887 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235322126 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.233625598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234215259 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23199733 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235811525 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234016422 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233792321 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.231868837 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.233640465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235054115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236304821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23491755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240441433 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232217595 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235836871 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236421398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234064249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233735644 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236755773 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237065206 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234987708 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241112089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.252336777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236103341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241413695 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252666977 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235511018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238192661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.236594329 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233993497 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.238815719 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245346244 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237136499 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236732955 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.236471815 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236590069 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237059022 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.241862937 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254095931 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236541381 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236953757 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237673283 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234621881 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237367946 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236831007 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.237219568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238760685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237922529 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.238758621 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237898045 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238143104 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.237840652 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.237906162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241262681 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24547461 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242892745 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.237889506 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.240185782 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238740194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243410478 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238792467 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239351524 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.239328574 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249895335 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262007811 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244085569 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257130114 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240113076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244293413 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256932277 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.242851616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239525237 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239880857 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240153351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239046426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.23782427 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239588365 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24181924 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240599415 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240949525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244355896 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241222087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.238679374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240333654 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240182852 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241165959 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.239309548 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241128404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241816071 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241831039 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.239404658 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.240009164 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246295261 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258514935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241882226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240306133 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240388764 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.239532571 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.2409425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.240818054 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244266505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248978057 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.243969227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.248772382 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24243118 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250565891 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.24134731 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244591381 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249686178 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239755529 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239933782 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242024825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24119883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248496781 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.259460691 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242335725 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246541305 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242324994 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24302352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243177919 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242640215 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243442711 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242666256 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249208027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26035442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.246057022 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243720059 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239818956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.243185073 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242770154 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.24065253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245254351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242813403 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243852991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242624353 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24256097 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.245044018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244235905 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245008433 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241608748 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243347698 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250916355 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.262015563 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248818647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24543787 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249909419 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262097217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250609223 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262673492 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244225319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244861177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244886622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.245803457 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243678151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244717731 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.245567668 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.245339212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249975809 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246029566 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247239311 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.245020139 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245713657 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244907905 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255580302 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269572736 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.246686549 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250275259 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.2430366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246759399 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249310097 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245400978 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244067859 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248110796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255662729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25476924 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245675178 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246480063 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246049038 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246837684 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246794366 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247299773 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246732481 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247459147 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24683004 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.246817476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247975778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246901477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247100683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246554106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247573359 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255891685 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.26640157 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247806898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246707966 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249039374 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.247765105 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246495855 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247079784 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247497494 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248234787 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248988906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253931035 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253335252 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.250297854 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.247577264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247725729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248452063 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248507302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248588365 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24843214 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248076892 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247976968 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248471144 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248250951 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246820103 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.248873738 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.248414826 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250888661 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251673003 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256214437 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248737997 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247251442 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.249028148 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250241628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.247828898 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.249429207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255064193 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270244979 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259968692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257524823 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253442346 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249322632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252274362 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257116636 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246917446 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.250049664 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249392807 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250478307 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.250375649 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252445773 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250331118 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255510354 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268724987 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249408004 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257132493 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268711377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251150659 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250929279 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.253692999 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25023328 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248346473 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.25153021 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250517895 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256114629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269891486 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250453674 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25268598 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250073053 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251519772 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255487855 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251317928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251837793 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248649853 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251711456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251408108 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251647018 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249642753 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250590201 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251033826 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254833055 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257529456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250611556 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252812797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251816192 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251698949 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252099173 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253129085 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250120446 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251078895 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.251415295 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253220826 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252305769 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253503266 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251023393 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25360189 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255235217 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253316238 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25492269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.263203791 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261538807 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250962633 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252585868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.253500298 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254887349 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254104776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254587221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252962188 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253979911 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253555288 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25386129 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254348657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256202677 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269566827 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272219947 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254263789 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.255121813 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256412926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254458646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252102014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256745768 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256507153 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25721765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262422941 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.254614405 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259902066 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271871826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25592025 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258681771 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.257605044 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262736093 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257228582 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254372395 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.255660543 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.260859393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271077513 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255589255 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26475717 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283523854 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274298867 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.255834205 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255561718 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254439649 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.256455413 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257060699 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256490212 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256867518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256289207 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257379132 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.257480987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260574678 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256372574 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258907578 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257985617 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255581382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25641121 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254096733 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255958023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257515089 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.257128621 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258123857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258089206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256739055 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269677434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282682132 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25759083 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257294533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25453051 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260078181 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261255801 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267531906 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264988455 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257179121 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257237982 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258614725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257693838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257326072 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257000408 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.2579091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258368005 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255736131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27003089 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28263208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261822876 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257926051 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258843875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259405103 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259098927 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259654314 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258925403 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.258131412 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260766676 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262542255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259430354 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260051835 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261362389 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.267242938 seconds)
  done (took 741.791918483 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257599656 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257048077 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258500349 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257009647 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257497905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25741922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257394594 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258768488 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25671299 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259889397 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257748565 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257509127 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258263784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258854735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25786721 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257954153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258545777 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257770474 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25819186 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258486216 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258703641 seconds)
  done (took 27.590318469 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260751081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25910459 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258215931 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260915126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260012747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261273266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258976761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261390622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262333959 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259036121 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261744118 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261899461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259898165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259164719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259143189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261437796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.262775277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260322744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261963008 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259893095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262042638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260281471 seconds)
  done (took 28.906699201 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26264512 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262305175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261384775 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260333711 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26284484 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260661594 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.261492238 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.262647913 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263239061 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.262031146 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261918756 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.26348481 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269144661 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268681007 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.264659795 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.263175084 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406601774 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262366967 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.263723355 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262963787 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260623161 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268636384 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.280936682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.260981215 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.2614244 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263563154 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264747533 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263771333 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263642116 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.264137755 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267139827 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263899849 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263111723 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265842957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.262625906 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265536247 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269085531 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264720014 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262254953 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265948158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274592811 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.287164705 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264439924 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.26981263 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284681606 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.265569347 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.267446581 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.272609878 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.263139598 seconds)
  done (took 63.333618111 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265647266 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265624008 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263381141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265688883 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266103452 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.265656022 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26717862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265240518 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263487617 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263870554 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266182816 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263945685 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264153675 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266527518 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266194665 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263124671 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263855988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265266137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.26381247 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263449685 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264140836 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266992422 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267168588 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264458026 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266985018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264271849 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264905002 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267373391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265472553 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264691196 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.267709396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26677503 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267119845 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265770251 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265774022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267597717 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268371225 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.265672512 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267615944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26499904 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.268048096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267974919 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.268085941 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268523856 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265632613 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265763447 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265264885 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266639573 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.266168152 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268925494 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268618194 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266052625 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269193578 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266824558 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269507094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269473952 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266635993 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267427803 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.269644426 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267800602 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266835456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269751633 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267938427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269681594 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270094951 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268329412 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267703271 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269966718 seconds)
  done (took 87.304396313 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269922307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.269273036 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269963375 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268877804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269718592 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269139033 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269369683 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268706883 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269690434 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269285222 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269828139 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269858953 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269704688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26955126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27011229 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269843209 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270236249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270307023 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270006043 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269716056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.270659353 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2693538 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.270378994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269906599 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270418575 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270504728 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269889396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270671373 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270751642 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269891787 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271367894 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270563956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270724127 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270683596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270975873 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270812397 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27082126 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271145591 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271002696 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27024081 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270746341 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270825338 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271722077 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271201082 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271258396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271138778 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271599898 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.271039138 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273789865 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271536109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27225507 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270895984 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272451976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27155954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272423654 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.273013103 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271978938 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271568039 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272186869 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271734972 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271887575 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.272671023 seconds)
  done (took 79.966524071 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27400933 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272610805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271178306 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271316389 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273878045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271815359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274246104 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274033665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273424226 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273790607 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274098731 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271167441 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272398803 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274721305 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271977629 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272744455 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272458362 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271885001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275737615 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27196065 seconds)
  done (took 26.64404276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271438557 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275587707 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272908238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272308856 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274853688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271793823 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276409344 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274767325 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272407099 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275308787 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275619488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275167385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273032088 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273201804 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275866927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273176688 seconds)
  done (took 21.569900497 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.272759515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274644626 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273594355 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274955727 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27303928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272795404 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276053954 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.273080632 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273498091 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.276076775 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.275966255 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277075608 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276650397 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275168538 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273992734 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276809006 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.273777838 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.274762928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277056237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.276752789 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274066506 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274375893 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.277617286 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277385946 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.274258291 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275020614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274512775 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274717071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274757158 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278628218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.275090673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27538947 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275588172 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.275579677 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.277520409 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275428801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279565589 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.278132794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.278315341 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.277456301 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278171601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276330681 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277690282 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279157333 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276420124 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.278811819 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.275777204 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.277615028 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276763795 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275803148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279557992 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.279593073 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.27905614 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279387988 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27946947 seconds)
  done (took 71.379821746 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279418747 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279417228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277625225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278977906 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280601838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277607084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280737221 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278719562 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277601506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280091929 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277703477 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281477752 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278257349 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28112435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278092548 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280435062 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278885352 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279214434 seconds)
  done (took 24.215533908 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278285069 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278897729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.280654215 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2786637 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.278513915 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281098131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27775758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.281087205 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28060071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.278336457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278519758 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.280833878 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280426546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.281702058 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279070019 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278440558 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281650144 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281396273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.278860465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278994394 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282057431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282589135 seconds)
  done (took 29.349083716 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.280943659 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.280540022 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.279946465 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.297256236 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.299666449 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.303050683 seconds)
  done (took 8.933130296 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288150197 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282210458 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280148518 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282590797 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283603704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280045418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279878524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280568955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282822261 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281532478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280359955 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283236977 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283723159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280470105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281514961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281967292 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280808791 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280452837 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28124882 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283291761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281444763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284085523 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281317611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281398803 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281675303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28047334 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284230042 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282299667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28171634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283595182 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284382006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282314929 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284168425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281869587 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284714368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285601981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282033292 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284605298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285056552 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283506991 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284693793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284824834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286162524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283289613 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285896095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282331945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283512604 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281719818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282956148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285737103 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285838675 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282841323 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284828104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285720554 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286257131 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286057133 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283938348 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282548783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285684007 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284570214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283225442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286133388 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282808701 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283999076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285904289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283268587 seconds)
  done (took 85.911028373 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284411249 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283809735 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282974124 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28543574 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283941819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283959632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284881487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284356105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284247134 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284789645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287253091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284256402 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284370373 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285246648 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284971152 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284638387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285489173 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284503137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285637555 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288000577 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285501819 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284663097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285029966 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285062139 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285113156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288503893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285432015 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285374083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286320012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286077726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287516467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286090394 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286057084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286128695 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286711277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286724585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286378678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286517239 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286334102 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28841928 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285354352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288927086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286244357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28683782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287881844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285509299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286304248 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287274287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28731103 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287111634 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287672261 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287668125 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287913378 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28741407 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287295692 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287093415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286845538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28815373 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286570547 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289558356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287835947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286595531 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290791535 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28764498 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287936544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288170328 seconds)
  done (took 86.095342516 seconds)
done (took 1730.595736052 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45120524 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404951726 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.287043005 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.284846393 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289013771 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.311174912 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.282618686 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288687066 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288165164 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28863478 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289092815 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477695639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.342823564 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288385593 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.288344928 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383178611 seconds)
  done (took 42.447838773 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316511646 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.294017987 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402650077 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315752617 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316731804 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472190757 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.349177788 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298603374 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457814184 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340571131 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.796593643 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317904095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294971697 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.363244429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310927396 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470375712 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.53542292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.804296077 seconds)
  done (took 29.659238343 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.723957142 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.302628361 seconds)
  done (took 9.229800601 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311894223 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293404389 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.29523312 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293245815 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28642923 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293189618 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.29037362 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.835333537 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.420420741 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300737758 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305317834 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315123144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296056494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293752696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331930804 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491362016 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293954908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292968916 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.301042022 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295617868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391895436 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335544721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298594783 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415783432 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.822190411 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302976884 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30346981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.479946749 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295643123 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295175239 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295625104 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29650449 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181771223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.723331751 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303083829 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319519586 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306508712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294779817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.441854196 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298112158 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303113403 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.28984278 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.71904142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432179562 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413137868 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.500964435 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314881703 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298148786 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358750715 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297060736 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297810818 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340235612 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.068430928 seconds)
  done (took 109.389053871 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.31422483 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.680681462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457059021 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309001639 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979761292 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026443051 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312658636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.567420494 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.373815973 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289939151 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.577426809 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.788883207 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305915568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.297808661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.469531697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.29861274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291036718 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.078108427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309005062 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296292867 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789465357 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29820673 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.291671523 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.545458941 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328838925 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.735223484 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.651921049 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.784562111 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313945252 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.291395056 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754016711 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320774286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.340933607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291575072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.549107307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637860774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641782346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.317908476 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320586576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293246989 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.323693975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739317216 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653323052 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315402472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29302388 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749272984 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315041236 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.296861248 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296186422 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492287979 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.007180692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29423068 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.659022195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298841577 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.586437668 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353421702 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309202309 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773638536 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315536692 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.420984419 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346701903 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293602193 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296297072 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298360347 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294782795 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639031082 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680505395 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297148829 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634380958 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.772677769 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316395409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830499068 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.198821524 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313050025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362764208 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295474813 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.912315175 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788577166 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.349416028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29527539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627175365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320469215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.571408374 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310026688 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295616255 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82018413 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.303781754 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.298729713 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.295999936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296035256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.972587917 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296121862 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.575271824 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.357688446 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296101803 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.295719056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.315294198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296146389 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316862461 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30047878 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819539837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319995281 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.403968515 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318004108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298524287 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297644216 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298762785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297449291 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512734897 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.755437702 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319763979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300381767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.296724006 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.317913224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.551813818 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301095047 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60054043 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321540436 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297707562 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.300978919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043032411 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328232809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297747343 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.302540129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173279779 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512026788 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315745301 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.299001478 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298158264 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.3167251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.483002777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317886559 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349707821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303613648 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993859244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.356596115 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324386187 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.665380416 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30881281 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.107273672 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324686375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297900526 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581595693 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.560459804 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660429457 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299958028 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.316218653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993052172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.374224699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436806832 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317540503 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.387610434 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496435853 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624363796 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299900959 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.904657323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.300430084 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513293202 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300946915 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595397205 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786680284 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323037258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307799717 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998742079 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025833239 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.115578022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.302284581 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572579281 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.244188865 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770804747 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.301037741 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301758834 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.785475415 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30167971 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309498561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.300956541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30080492 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454046541 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.472338406 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.108992486 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309791903 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748501919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346387948 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302286152 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319327619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303910825 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652160639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329129952 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.301612002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.356007806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302507795 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.302334024 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774944957 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.234899721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.30858194 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451677089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927426679 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.324327751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30378972 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.898145241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.732157871 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809631601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.3322658 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609188786 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327870454 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34063291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.9355749 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335727482 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772753923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325317527 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.303387906 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895805196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.32548464 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394485161 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.303938299 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303681142 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842148762 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326522983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.306212758 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.533539669 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327955193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565552569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.304896268 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.356411523 seconds)
  done (took 1103.715213727 seconds)
done (took 1295.642032141 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309207939 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304121664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290129691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307044026 seconds)
  done (took 26.430696679 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322625465 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.311251678 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312885858 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310841305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316547573 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.312046858 seconds)
  done (took 9.106945931 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.394355881 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306041727 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311824439 seconds)
  done (took 19.233893987 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.512263908 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.566181966 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.631093283 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.455189229 seconds)
  done (took 10.387563988 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313680699 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.314144527 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313272125 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316665817 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.324451011 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325469366 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315805483 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316582452 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325413842 seconds)
  done (took 13.087018898 seconds)
done (took 79.468633021 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.658245511 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327782105 seconds)
    (3/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.854165707 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.29433456 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40186418 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.420913918 seconds)
    (7/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.659220908 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.65802062 seconds)
    (9/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.730711575 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.313307617 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.717033699 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.567390602 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.536597652 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372219813 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37210898 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335418137 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.324555864 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.373768866 seconds)
    (19/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.801241072 seconds)
    (20/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.079672897 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.961009756 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.394248424 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.782343113 seconds)
    (24/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.296291615 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.313842688 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.417587421 seconds)
    (27/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336099994 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.289735766 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30737537 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.293541601 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.112705689 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.763397929 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.331546868 seconds)
    (34/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.310343611 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.354748735 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.942645481 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.03145217 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43749576 seconds)
    (39/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320921514 seconds)
    (40/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.289873103 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.720034333 seconds)
    (42/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423125481 seconds)
    (43/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.911531612 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342102926 seconds)
    (45/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370867805 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.300964955 seconds)
    (47/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.421593048 seconds)
    (48/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.336639192 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421524466 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.759306263 seconds)
    (51/286) benchmarking ("sort", Float32, true)...
    done (took 6.315262725 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.072315004 seconds)
    (53/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.309418446 seconds)
    (54/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313243288 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.586955216 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.291720683 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.097551454 seconds)
    (58/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.604445565 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.372864623 seconds)
    (60/286) benchmarking ("sort", BigInt, true)...
    done (took 6.313220689 seconds)
    (61/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.417277259 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.414343731 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371838888 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.292492507 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.518497655 seconds)
    (66/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.310149107 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.687806999 seconds)
    (68/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.300175573 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464373158 seconds)
    (70/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.686309642 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.075452443 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.298797194 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.415592419 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.40929971 seconds)
    (75/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.32562973 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.293042445 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.222886797 seconds)
    (78/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.396811842 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.6918895 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.294399739 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.293964697 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743243045 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.508215368 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.158074453 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.823488199 seconds)
    (86/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340964761 seconds)
    (87/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.769552785 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420614671 seconds)
    (89/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30765531 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.131656048 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.557229936 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300540388 seconds)
    (93/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.711725727 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 6.320515212 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.110060829 seconds)
    (96/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358685901 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.295759129 seconds)
    (98/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342350887 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444258932 seconds)
    (100/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.906313305 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.315109533 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.315605753 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310984737 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.215188081 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537526261 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.68259643 seconds)
    (107/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301322618 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363942346 seconds)
    (109/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.494733368 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337452099 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 6.318169699 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.924818778 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.319953401 seconds)
    (114/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358145227 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.295868364 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.836195063 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400215329 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.833504486 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.35596604 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.332296353 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596372742 seconds)
    (122/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.326312349 seconds)
    (123/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34555441 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.061000731 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597130754 seconds)
    (126/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.260336633 seconds)
    (127/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.302863398 seconds)
    (128/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.464156417 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.296652187 seconds)
    (130/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.874899139 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.422149644 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.343075346 seconds)
    (133/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.380533031 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.345062728 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.702270438 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.106489539 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345067851 seconds)
    (138/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.077997169 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.301802785 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.316728884 seconds)
    (141/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.299257341 seconds)
    (142/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.512631501 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.910200867 seconds)
    (144/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.321387645 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343808815 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.156441329 seconds)
    (147/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.408200603 seconds)
    (148/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42552942 seconds)
    (149/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.29857894 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458935523 seconds)
    (151/286) benchmarking ("sort", Int8, false)...
    done (took 4.331845979 seconds)
    (152/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.945732037 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133124533 seconds)
    (154/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.66619337 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.667872894 seconds)
    (156/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.288965881 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.807822465 seconds)
    (158/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.578758572 seconds)
    (159/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.159508481 seconds)
    (160/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.336401907 seconds)
    (161/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.407809899 seconds)
    (162/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.524047459 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.360623742 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428884961 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.056719758 seconds)
    (166/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.147740922 seconds)
    (167/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350781605 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.319620012 seconds)
    (169/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.33351053 seconds)
    (170/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.357572634 seconds)
    (171/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.359424744 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31915667 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.037245236 seconds)
    (174/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.296936556 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.3030204 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.578492322 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.602787399 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.300139778 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347805409 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.329817683 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406872089 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330397719 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.363085478 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.728144823 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363375304 seconds)
    (186/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.305658665 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.782653362 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.842809367 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.405352855 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395757828 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.300772651 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.305929153 seconds)
    (193/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.444868675 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.332556451 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.304371709 seconds)
    (196/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.427899342 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.917002259 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.747482615 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547369607 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.962707977 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.40708808 seconds)
    (202/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.072822234 seconds)
    (203/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.304888441 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.343234946 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.183154651 seconds)
    (206/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405075845 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 5.61773726 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438223678 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.098346592 seconds)
    (210/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.530288196 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.361214482 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228932195 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.363533881 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.832628837 seconds)
    (215/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331831929 seconds)
    (216/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.450021085 seconds)
    (217/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.66368574 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.409348731 seconds)
    (219/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.71452802 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.323213483 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.035376168 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.088828909 seconds)
    (223/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.591270282 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190322437 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.557374513 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.824936549 seconds)
    (227/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.501875288 seconds)
    (228/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.532066357 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.681028249 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.466176885 seconds)
    (231/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.571986428 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.550600625 seconds)
    (233/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363588355 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.700202724 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.331879476 seconds)
    (236/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.981560214 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.354261307 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.802422709 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334843465 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.340558822 seconds)
    (241/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.136312528 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.421794792 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.7276386 seconds)
    (244/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35138703 seconds)
    (245/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.514522977 seconds)
    (246/286) benchmarking ("sort", Float32, false)...
    done (took 5.329983707 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182470589 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.324312028 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.244941654 seconds)
    (250/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.315103906 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.424263826 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.324656144 seconds)
    (253/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.078413097 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.972280692 seconds)
    (255/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354236675 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.31541405 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417292155 seconds)
    (258/286) benchmarking ("sort", Int8, true)...
    done (took 6.325034299 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424539241 seconds)
    (260/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.3053309 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.376939389 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.325033432 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463006813 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.305527464 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.152881063 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.03309305 seconds)
    (267/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.962355718 seconds)
    (268/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.306647131 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.552474612 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144121214 seconds)
    (271/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.3280337 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.37209072 seconds)
    (273/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.418198777 seconds)
    (274/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.336138496 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.721988669 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.57127793 seconds)
    (277/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.347760978 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.353005563 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.349054482 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.729737497 seconds)
    (281/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.324352232 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.55409023 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.352915488 seconds)
    (284/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.308176594 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.013796307 seconds)
    (286/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.806950011 seconds)
  done (took 933.574417371 seconds)
done (took 934.799475988 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360901028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363622559 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.338054863 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359735745 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456110282 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.36119275 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348958969 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.340556497 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386359283 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387754071 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343181783 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.360375863 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346549516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.344413278 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.336999433 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358556069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.373436478 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346001269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362433469 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348014273 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.362109459 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344307417 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388718586 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360555407 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343013757 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.342741298 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349077647 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365657444 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458508155 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349869504 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342870064 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356682499 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.3730735 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336920963 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.334500411 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.365681489 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358241584 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.348516803 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343666097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378517118 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.768468607 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361944296 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348110475 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.34167858 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341242091 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.3448257 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349425648 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.348201754 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361677602 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363620121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.757180879 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379673614 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.350896445 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.342992249 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352541418 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348031214 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345843556 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365650326 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.36769482 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366162036 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.360838896 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346144818 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.343339349 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.365041841 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355844415 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.795470349 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.354599261 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.345760059 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.770509105 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.363373386 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.79433851 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374471081 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344205858 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363472828 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.380888577 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.375684078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.337131701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342185577 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35588917 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348119712 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354671926 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363354966 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.348659791 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.343996264 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36462018 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.366990959 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.354367284 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.351140895 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.352452073 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369824444 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357458922 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.361380234 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348089402 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.33934792 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.353576583 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.347901962 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352810616 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353618084 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349400667 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35472833 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.771797493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386283226 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341409211 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.341288303 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343896633 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364388335 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.772961052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368493234 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36574807 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391708387 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.346531126 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.363736863 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355878705 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370807244 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35488712 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.349220754 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341346514 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.365821206 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.765634272 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.383961443 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348083723 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350253455 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370867748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347324234 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343056721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.383982868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347584105 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367642181 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474871724 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357021487 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383970168 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.35187282 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35049651 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369611523 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372746139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.3851794 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350444408 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370757252 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.369689602 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343220279 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363591831 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.35658991 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348995389 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.352977745 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341971362 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369708099 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367805024 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368279001 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.368615988 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474609867 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345554065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.371287835 seconds)
done (took 227.302006752 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405654414 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34247968 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427702336 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.344595453 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444392882 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457896266 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.342758043 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342007572 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342499882 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724017812 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341842669 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34264801 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.344248492 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343071592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.427232286 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345351567 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34282941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.735550862 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34476764 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417734882 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.337451179 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343541883 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.345048576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.78174914 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.337107665 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.338731837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419689748 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347042639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690368258 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.339458725 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.344445237 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.739541805 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.436569204 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362939143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355497507 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.353866073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454682433 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36453886 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.439451857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429859487 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441823419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.384736841 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.341053117 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.341900967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.34767557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346732841 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.345268043 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373765694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.338530088 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345545994 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688522585 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357077434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355209474 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345186935 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345760398 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366747525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345349076 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.347808244 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438705503 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348123254 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411277828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727304433 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.782921346 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348324814 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347790883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347944458 seconds)
  done (took 149.484719191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413373273 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419248939 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.460048417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364363879 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398037716 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464359319 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365243517 seconds)
  done (took 11.138775452 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.354615092 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349613874 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397110652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397838242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348842136 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527325425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349873786 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359275634 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347861601 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401744065 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352184297 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35086553 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356345618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.350299618 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396943608 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359720183 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463512761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349962514 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350919985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509631218 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347909923 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358128242 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.407097988 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360851415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352308908 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354115875 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.159160257 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350138992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348837734 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349861162 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350265849 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428048401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352345317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.34864272 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34847017 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466445796 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350616417 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349287216 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351354761 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.347336604 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351571505 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35196731 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352540829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349938244 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352541634 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373944598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352854595 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352473051 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352054829 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354113371 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401708618 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353548653 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350636204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350670876 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406801496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359544071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353635172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350731226 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354296274 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350683886 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512197504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399210728 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353662682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.399701374 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353895016 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353759265 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353559062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352373466 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406975118 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353594681 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399325194 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.351545357 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.539540714 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375788858 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355056612 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35533241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355721748 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354128056 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.347797639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359211719 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352959155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353649588 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359229825 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352807455 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352430009 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527023605 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46286735 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352773196 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365566889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360150612 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352699329 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406592072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355489704 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353074268 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406313117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.468716038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416466222 seconds)
  done (took 155.421156665 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358651094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362586763 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.35674542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371842482 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355284784 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355193211 seconds)
  done (took 9.420419178 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357136343 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357569139 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356269566 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355859266 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356257317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357203734 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357157358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358182415 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361384929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357081969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358444738 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360258444 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358368558 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357107964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356319233 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357998581 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357726537 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354579391 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35797081 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357014583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452173468 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358096094 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358060405 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3579849 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363704347 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358814955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366256245 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358901738 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359290531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362585751 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376965663 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360039852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357394232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365749572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36244893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358447018 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363776043 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362305149 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356094927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359598207 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362034929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358800384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359442385 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362286136 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359796271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363954523 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367486563 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367293568 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.360113665 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363681313 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363241418 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359723182 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359690926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3634339 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360762758 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380892804 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368391689 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360170468 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359858768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36093812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362540187 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361376286 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362325152 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36421535 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367826347 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364075322 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361553997 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366073368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361618677 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361314868 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364016798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358459084 seconds)
  done (took 100.349856211 seconds)
done (took 427.06710569 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.724061854 seconds)
  done (took 7.989347452 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.420563058 seconds)
  done (took 7.688620026 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.803757809 seconds)
  done (took 22.075329681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.370693604 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.429106045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.372396648 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374841491 seconds)
  done (took 26.814431207 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.684685079 seconds)
  done (took 7.951383182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366537209 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362200594 seconds)
  done (took 13.996789339 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.368067205 seconds)
  done (took 7.635426086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051826652 seconds)
  done (took 8.323750807 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.382024684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391430634 seconds)
  done (took 14.306878843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.334117061 seconds)
  done (took 7.601534749 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.404447804 seconds)
  done (took 11.671206923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369593587 seconds)
  done (took 7.638002084 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.415855229 seconds)
  done (took 7.682038211 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.403958835 seconds)
  done (took 9.67084576 seconds)
done (took 162.313449215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.354616265 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.353459057 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.355472624 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.354777564 seconds)
  done (took 26.685056321 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397959772 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398970027 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.413867953 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40670418 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395791341 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388491305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388304708 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407083771 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398729729 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39773198 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398804491 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.396737547 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389122307 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399213244 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399163142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408211605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.39784288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389609362 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399927237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366006975 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408379093 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401162063 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364567671 seconds)
  done (took 34.779418012 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885080014 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435810133 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51682434 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430783141 seconds)
  done (took 7.53758569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416449606 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.41600946 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.429959912 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46721746 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500822029 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426720333 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39167692 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385990446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373155486 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418235831 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493162949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43509137 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513589131 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365259617 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.559824117 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364351302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365947559 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416921911 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469067928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482006226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366422043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418782955 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421023634 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444000916 seconds)
  done (took 35.611073488 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.365655742 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.384880602 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364947786 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.364413711 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373787471 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.365722363 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366031222 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365980226 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.36573703 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371802443 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.365508214 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377848846 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.365687575 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365697016 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371697353 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367225333 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372819871 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36529137 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366764548 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371889077 seconds)
  done (took 28.651533736 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.358185603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.212459395 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711257443 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615428319 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360388484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359244676 seconds)
  done (took 27.887825302 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437068354 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.587092776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365777895 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730547353 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.82111146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384028747 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36734188 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.608041694 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928926237 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.927116447 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427869306 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437691298 seconds)
  done (took 20.296026263 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.370421416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363775468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.362771398 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379227835 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422295244 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389316116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374616419 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.361693158 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425556775 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.445059166 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392826149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422959622 seconds)
  done (took 37.984929292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449236957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412580124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.321501288 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388171257 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080331282 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57381027 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418872701 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087631278 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385532464 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637493781 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368736657 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452217296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619790007 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368185802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368512903 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364740202 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608250723 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852562343 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366468276 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.538151875 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389567756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371245657 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.52672542 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604266046 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598501665 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342677188 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624891161 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141148565 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655138856 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380937101 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374698832 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365327994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640163635 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021838249 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480094183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580713579 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407478675 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911973066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.348458653 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.407133449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380095697 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367096825 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377097888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365920827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30002383 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37583643 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084042609 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390344133 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.07771354 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366745314 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629788101 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462631378 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.370242444 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.35654194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404946439 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.391239543 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371249351 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458740829 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954095994 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.713821805 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371598051 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.321844976 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364519638 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400463816 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989980028 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389771548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.372270856 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371633249 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302406914 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.397531454 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383483114 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515695301 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39281337 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018228181 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061402077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38766246 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297319918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916877206 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374626053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.305762788 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596602982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143263412 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304389968 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.316912669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302601891 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077242963 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376994319 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.768380049 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389847893 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098685649 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605173292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407498598 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391923216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591915813 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.514901832 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370174473 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.373638174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497013891 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392306233 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.081818691 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322401199 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374015326 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625334282 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.581047292 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371058873 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371529661 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866872768 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389658299 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.393160858 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375233964 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590087574 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.976213867 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407146814 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.705692159 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391913373 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145874527 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113667095 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380834814 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.379226838 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371108672 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646788458 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128713448 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254485687 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439983001 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373693293 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371392514 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418762596 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220750716 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.531727365 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.571821606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404110961 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386595062 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373169955 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320579582 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.36996831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383553384 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.148383251 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596366569 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372012257 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668337546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306179515 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519421072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385566097 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595596204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.580734637 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.395907583 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632360043 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374263571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389037943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387239185 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393126923 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473658441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396074858 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.373133243 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632677732 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376965254 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377799237 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431322875 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155117017 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382075002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379907964 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376923458 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962709245 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369240934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37429409 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263289679 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.388825522 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442102778 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38083469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592364008 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.653374185 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3954679 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.379916041 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377030336 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597993514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3846732 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.469486197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459348139 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.851934838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98455534 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40930674 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.309989225 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.086254752 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068802962 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375552662 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56355814 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376615403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594927637 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412992151 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375054547 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967054811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398537313 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.425037935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.381485176 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388390966 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381830425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376907926 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.625399754 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.757915236 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381911978 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391913947 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52104838 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391208391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310133807 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893858337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383176389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377254298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.154578445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412585997 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.438035038 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181575127 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655209983 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375513157 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642374627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.587393527 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.415423524 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376798794 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378469193 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41222544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394443813 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404291839 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389481159 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.485151814 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818685864 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94540759 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147929238 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942641883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696422244 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.398278915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265375985 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098819491 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332301649 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035624264 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622548351 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11478151 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342907333 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861525482 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.614576431 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175600009 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64588281 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611328402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674712809 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407873892 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648512273 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59512154 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414491365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392929255 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312768923 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.667329141 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940813851 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405620205 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459851054 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102905028 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400173586 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15751448 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.393216144 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.110287216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793506276 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.944352361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767373458 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382474783 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388143031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183829848 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400951298 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906641989 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00729318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401000102 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86488618 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337289893 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602407146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.416185392 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378773176 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.965279647 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.3809596 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.635228281 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6484994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320771983 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39685077 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929612635 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253063784 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387318171 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382539095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134090854 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390160172 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678217988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.387329596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.667512692 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406679157 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318137116 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31879069 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.075208078 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391480315 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358940725 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875866869 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.388520327 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383923524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404465241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233515796 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639834677 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397810735 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97796636 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629593711 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396518822 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406396737 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387212098 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393683579 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.36522986 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264981546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619548398 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398751551 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077577073 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.370541526 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.285237429 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418972868 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613739867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278282429 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392755938 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634754276 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.1171691 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.405484443 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125364423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432145969 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385334353 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412245495 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397731662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404851208 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474176545 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606543565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.419442841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396289033 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798057412 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405355117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388393504 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398444597 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478710962 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.780397036 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.659575058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159990888 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98365328 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160434391 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006811566 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675933305 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389638622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391564195 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320579988 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535312859 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912374068 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66072306 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516822101 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385072795 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410265045 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398460692 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389291371 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602745625 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662254281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257687536 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387930389 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050450408 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.282612361 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399289146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599413549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888859471 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94888751 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.759738337 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401235879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108455799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680716305 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478673099 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38830118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981395548 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.392080373 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.11973084 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394813353 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394128311 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536540974 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65464388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059774848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418656593 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.549456275 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.161995894 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473423741 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645331313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.85970385 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612883378 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011526996 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127502584 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65690383 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460111302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613957799 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522612045 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537972884 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387008302 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.304370364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389815993 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235158928 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.101651657 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.399502743 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994395779 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674080475 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.394355232 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.391301335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412622281 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.400155158 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613721774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114783066 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613993123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399889117 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389815556 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.960684289 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992558165 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681551593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330297428 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.394143352 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639857195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64940751 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416272264 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.843305122 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.103293688 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947817658 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364324695 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413274236 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406438158 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11634335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00362367 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.694877698 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907406799 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050013644 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407414183 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669541126 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39674909 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392837071 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672248961 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.39631402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407212553 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619628299 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014300056 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20573554 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.399747942 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.639484432 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330872518 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619717921 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45657873 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348707151 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402266486 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.813337826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415471047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524889622 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405442778 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395891119 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404779321 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.131116555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677731439 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.400842634 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.391683659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379060631 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399941159 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489504187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961374308 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417568897 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070016608 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744372528 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651123209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395210283 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.37774351 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397256034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394801661 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113321663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364222586 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396147338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977064778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.39778638 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.426574778 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399388098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611943826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607406388 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405368147 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621062892 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430433204 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413847075 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.295273992 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166232804 seconds)
  done (took 1682.683335962 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447892358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.41174261 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.412765374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.441947388 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420806264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522474328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.476811573 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.404067038 seconds)
  done (took 52.843257546 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.395574247 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.555738737 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426609301 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.409318382 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404283539 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.395876527 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.858863527 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.424706068 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404169 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.405616429 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410942617 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.413319367 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.068784104 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405819508 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.399547439 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.396596616 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407570042 seconds)
  done (took 66.493427785 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.63212559 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.526101307 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.473190738 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.434169027 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.447540492 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396536828 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.492729453 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.414168209 seconds)
  done (took 54.122984793 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41395665 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414001782 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414439351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.414709389 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.414880325 seconds)
  done (took 8.379137797 seconds)
done (took 2085.224965047 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401085613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404935963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.401939909 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404503528 seconds)
  done (took 6.919060303 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377898837 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122135813 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380026251 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393546303 seconds)
  done (took 18.580446988 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.412104548 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.423048596 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117917625 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.044879317 seconds)
  done (took 5.470954117 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.151501765 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16403058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.148618597 seconds)
  done (took 7.77422778 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.40242752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.403272252 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.407527411 seconds)
  done (took 20.522926906 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.698404414 seconds)
  done (took 3.008220613 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.548730424 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597014958 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.717229464 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.73814042 seconds)
  done (took 7.911521018 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.787716751 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793228877 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.603540831 seconds)
  done (took 6.495641663 seconds)
done (took 90.825845358 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.292994285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406733459 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.605507577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.259004754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630934907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605004428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.609194633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.232188204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.770495439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.761312715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.264849038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.63206356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.767443352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406929163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.769760883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403808746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.634955485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.336620702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.951203964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.19480925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.610577024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.898685421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.097292341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.916440505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.634371281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557388419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.498397242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.650369041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.120373016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.506084528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557449723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363811482 seconds)
  done (took 194.258911716 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412503228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417103152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.403460079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.404047987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.414591165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406078774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404255438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.419308282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411496173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415686962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404035429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403552477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405236828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.408346971 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.405680936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412725726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406736049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404349823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.412534631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405722742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407084389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423464113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427951647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40433766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421813688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42292832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414736764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403945865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405024572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435290884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.403997453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416784331 seconds)
  done (took 206.478748785 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.407620577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405683416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404853463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422327687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422507679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407101215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424425424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40775401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404838044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43763835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404991128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422545647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.407641876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422702346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423367079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407086683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409470168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405206131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.406569155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423875548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.406752219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408196877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406310148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433883703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406995081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420623045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420029055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407130797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437883994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406548596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407186327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427310478 seconds)
  done (took 206.58238513 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604032551 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.415097216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415965278 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348527138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415584942 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415018017 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.408860977 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612299415 seconds)
  done (took 14.951951399 seconds)
done (took 623.584127601 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.722945446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.437430393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.621191238 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436454307 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197552546 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45423902 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43655403 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.608650265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.352491664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.615737315 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.670029536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.451556656 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.815794679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.434516926 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.696448286 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.536544265 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337521548 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.468212019 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.755882734 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.955397772 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.707239714 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.932536389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627537453 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.341980787 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.831976365 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.925204564 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.168327896 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.329406681 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451307043 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.770956001 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.083553045 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.423668588 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498346197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498047331 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555367237 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.5355211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.399266817 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.494541474 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.639905661 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.699332423 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.969764265 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.168851251 seconds)
  done (took 95.375611612 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.40138887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.401165788 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.400820058 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.400819645 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.401744731 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.40124529 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402066243 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.399625313 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.400485048 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.400349455 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.400669983 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.403252114 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.401097644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.402158666 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.400157828 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.400767556 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40194748 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.403018618 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.400988067 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.400401878 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.401869801 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.400601102 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.401934486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.402292358 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.402551273 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.401950677 seconds)
  done (took 37.757278059 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416904054 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.672081026 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.835372839 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422602523 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417222384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420720642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498812899 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.423136603 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419847156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420688273 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.589149438 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420826132 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453192993 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.862778984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420431941 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419175935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419600164 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417219445 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.681842947 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431870666 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.521390519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424240394 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.500001755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431562823 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442208737 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419140705 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422885932 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.995132841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.43913517 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.594912025 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.231366333 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.499659805 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.92949056 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.863568532 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.237971461 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42505473 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.421080431 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.595234013 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.421847805 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419869611 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500234475 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420574515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.843676686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086824013 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441855835 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420857497 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.008413388 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.614772821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.669782184 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428157773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.866479951 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.423436639 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423549103 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42217895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671524817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.427399233 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420284716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.990686848 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444534063 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500598962 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422982078 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.421147559 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.689615927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424629812 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676892302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.424666496 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429114816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44139914 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.846955119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.423769742 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.10832625 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443158884 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422643332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.593916882 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.676114754 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042868507 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444453324 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693777544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949852148 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.517479155 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426585365 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.978187919 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.521665464 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426339924 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425904026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425914511 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.424254646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47698838 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499532231 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.041332701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114293911 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.017730454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.523921506 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436267234 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422673908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.99582784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444566277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423660664 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.846485922 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.111663512 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.445998097 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.431569901 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.115947684 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447413395 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.506515623 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430361293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.858020425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427430158 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477786549 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425255142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430849097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446624278 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.505439057 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.429308693 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426713859 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084787179 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.627556281 seconds)
  done (took 187.242815342 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.441289499 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.417259319 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.426403502 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418695804 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418383352 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426343537 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.41876426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.419058275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424730935 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.418636291 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418501888 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.420051332 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421014691 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42376011 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431250827 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.42676808 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.031990042 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.420330019 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419234863 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.43844774 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.220190074 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.424702411 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419523847 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.436966073 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.421063835 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419705347 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.425320795 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422499245 seconds)
  done (took 154.597717407 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428335471 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000163612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445966727 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.561773931 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452094316 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425802293 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.561150192 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489836519 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445709616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425681517 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426114334 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.733752141 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.42969893 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.951881261 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.623466639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.584421328 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.952934959 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446832823 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425655715 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426268221 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.563498599 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.434538758 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739186589 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021081928 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452688241 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019083796 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414651924 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428851174 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.426955413 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01972405 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.447698679 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.748239503 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511308153 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.491703162 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032755578 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.981237414 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.983436003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585830756 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.430693159 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429565795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.427126005 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.412171087 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.008280059 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.450428599 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42896408 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.994700762 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448252784 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430737341 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435480826 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.427421616 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.490452236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.509114349 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.758693074 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.011369976 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.526793557 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441443314 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.566369774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.806724555 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431840376 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954956442 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412888905 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.011823508 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450740665 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413309334 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430628594 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435694826 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.58677985 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.572081661 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.959290197 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.448328169 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.955128454 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.605297228 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433510625 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.429494384 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433674547 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.011644245 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.974818795 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.603548528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.572335961 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.635711912 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.418478389 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430656488 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.415678659 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.510887694 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433331578 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013721552 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.973101497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449813558 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434228623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433362508 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432810775 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612548268 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031072591 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530357671 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.945816291 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.760940205 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.744258423 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.434645788 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.493622197 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.449878275 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.74478015 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.43596753 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491552885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868028914 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.745855748 seconds)
  done (took 170.306322161 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.675676102 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.647694494 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525850776 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.586883904 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03501256 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.017268122 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745119822 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.575259229 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544828859 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.697895332 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.59678268 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522859075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.652241041 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511106915 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.174883847 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524105799 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544349712 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584254982 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.603377589 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445889929 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.111286191 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.720780187 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.632534378 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.331841239 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526695936 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.195340023 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.010695632 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.964001255 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.612710896 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.754947714 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.977785946 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.571783781 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.409562603 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.129058163 seconds)
  done (took 68.494788577 seconds)
done (took 715.092216362 seconds)
SAVING RESULT...
DONE!
