cset: moving following pidspec: 8596
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.395137086 seconds)
loading group "string"... done (took 0.574425326 seconds)
loading group "linalg"... done (took 7.263209656 seconds)
loading group "parallel"... done (took 0.160124716 seconds)
loading group "find"... done (took 1.166769203 seconds)
loading group "tuple"... done (took 1.789597137 seconds)
loading group "dates"... done (took 1.250676971 seconds)
loading group "micro"... done (took 0.223662379 seconds)
loading group "io"... done (took 1.019430447 seconds)
loading group "scalar"... done (took 39.335741923 seconds)
loading group "sparse"... done (took 12.609297368 seconds)
loading group "broadcast"... done (took 1.00921019 seconds)
loading group "union"... done (took 13.152599121 seconds)
loading group "simd"... done (took 4.721452897 seconds)
loading group "random"... done (took 9.677449223 seconds)
loading group "problem"... done (took 1.869534761 seconds)
loading group "array"... done (took 21.708216786 seconds)
loading group "misc"... done (took 1.703653204 seconds)
loading group "sort"... done (took 3.364596407 seconds)
loading group "collection"... done (took 18.162016365 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515232124 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124330413 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117759418 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118779839 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1463034 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.110757486 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122591824 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08323404 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.798647187 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150443793 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117028404 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427047387 seconds)
done (took 5.129380054 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176060764 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083967987 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083650348 seconds)
  done (took 1.285615515 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065709995 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123227549 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065666635 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065785776 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066597083 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065782991 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064886029 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065436457 seconds)
  done (took 1.643056046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073773374 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070021055 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066396209 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069151599 seconds)
  done (took 1.398813897 seconds)
done (took 5.699587822 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.784818805 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207400415 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186050315 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408879049 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129920454 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157642217 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64160077 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314331591 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186630033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079389853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107142255 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.326465571 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110473257 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.625990003 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076814531 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092676727 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13727096 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42597941 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066099562 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080733393 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087909714 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126949043 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086858023 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073130205 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14421836 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066414484 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135080482 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07968359 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065266126 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210562134 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172093493 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658376215 seconds)
  done (took 10.216296679 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098434728 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100071352 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069984514 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127288982 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094157657 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068930647 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070055815 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066540211 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085189313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125976507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086833871 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100057816 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064821001 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067811677 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083762061 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204660608 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08247201 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083078556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071770554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076616786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106217062 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076758986 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075597521 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075726201 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127750655 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178964117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099225602 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098594875 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067576585 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080758579 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116353642 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124799451 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0645941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064785243 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122552091 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093343699 seconds)
  done (took 4.563487853 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998088353 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14347278 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089884716 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133180536 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063679384 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107749418 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064503402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080108469 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207217212 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.39176252 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.583236287 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109864665 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102703111 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066432535 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066917943 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06616778 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.475925037 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09862826 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110374658 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08368224 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071024356 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068516237 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369282915 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066816685 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063540865 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067477735 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056491534 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125796961 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069427244 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938903534 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124519244 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06480791 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098820055 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159943624 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085646742 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138846893 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06553032 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.195685585 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158606133 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070041814 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066587336 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084268252 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103916432 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112369087 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064813988 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065902261 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161189913 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063781929 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078743701 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.640780249 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086646704 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152495076 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075516219 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063159647 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252747872 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089062997 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068381568 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063584052 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180652178 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128460144 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066295519 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066047093 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067031528 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070111835 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360750695 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06480285 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.875346103 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069723569 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077699726 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067878535 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068017071 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071798315 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070792399 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086138761 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06536957 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074337399 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064831356 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064874824 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06588895 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082394022 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372732296 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065493527 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066692211 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064322851 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087918462 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0953718 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065678939 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064073158 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090100719 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09911073 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067008637 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065289019 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105838943 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065403738 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082454089 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068354944 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111977028 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064624463 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062374094 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19208276 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065196043 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063119226 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094259151 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069224078 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097965937 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082109944 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069419571 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418237254 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064600228 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064267436 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06784127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064296493 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066394168 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065433107 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079261045 seconds)
  done (took 20.896059518 seconds)
done (took 37.799471131 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242529263 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077004074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080477052 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079737302 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072401103 seconds)
  done (took 1.769227813 seconds)
done (took 2.963061202 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124835624 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102397939 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065820232 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099715772 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065999986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104109889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101591698 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080967405 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099819849 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063515901 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099129443 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063048516 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063119349 seconds)
  done (took 2.349441762 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085380792 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086130169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070794606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084861868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064464182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084947443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082803112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091739836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082751276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073958368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06478237 seconds)
  done (took 2.061239465 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084599785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086243949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071276054 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084719004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064343568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084142428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08303773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088100223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083120669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075554192 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064853858 seconds)
  done (took 2.056105121 seconds)
done (took 7.647929894 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078965748 seconds)
  done (took 1.253034121 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592918014 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.038838844 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080245816 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110129551 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189100288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117236899 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267065259 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085524697 seconds)
  done (took 8.848473483 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105113342 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069778817 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071304985 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072757171 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069879002 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068774141 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069289658 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071599718 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068382276 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070804059 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069341725 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069444187 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068203371 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06688744 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070654074 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069937445 seconds)
  done (took 2.404898338 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094023825 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092671948 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074643689 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0759042 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072895108 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072610287 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073612911 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071806254 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069260068 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071651161 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073035842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071776685 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07028209 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063693161 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072669868 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074033033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069908146 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072872482 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073209562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073800371 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073145121 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063132804 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06986222 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072457128 seconds)
  done (took 3.055761973 seconds)
done (took 16.747990647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116488167 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071816285 seconds)
  done (took 1.368919002 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082719372 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084393823 seconds)
  done (took 1.35820301 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084959857 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06668318 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090958606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079491491 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067148607 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067009505 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088797836 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066826843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066677229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067214779 seconds)
  done (took 1.937627823 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069205822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079128111 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071427764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082110056 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074658133 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064711962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073141897 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06809033 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078450446 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063305629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071806368 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083253772 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072339928 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085791443 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073119312 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069132169 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071209953 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068015152 seconds)
  done (took 2.51465652 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066243898 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067773697 seconds)
  done (took 1.329428244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068103781 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064136758 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067734916 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067177794 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064045505 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063079055 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064054544 seconds)
  done (took 1.649726946 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3942108 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114540716 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318640283 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072436921 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083569984 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256294478 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064852275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069508485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069788323 seconds)
  done (took 2.681037738 seconds)
done (took 14.036176842 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081731952 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088532896 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097773602 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383881128 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092768574 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066595946 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114644158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186220235 seconds)
done (took 2.320641681 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213891786 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.646807993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403475411 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204091729 seconds)
  done (took 2.455302587 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348682262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089087704 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060624082 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068271463 seconds)
  done (took 1.77476882 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066689632 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070720446 seconds)
  done (took 1.341362761 seconds)
done (took 6.990589171 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067617748 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067092406 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064999094 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087732322 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067216578 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064972432 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064303005 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067476004 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067112305 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06725229 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069825304 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067167492 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067732014 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064614686 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064774087 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067144576 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064706021 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064745207 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065023647 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064804782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064680169 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067373427 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064598607 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064737043 seconds)
  done (took 2.849749081 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086256506 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067214682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072456261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072501498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070721657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073012644 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072154095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066699199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072064986 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069592617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070711575 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07072186 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069228579 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070728692 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069479652 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070918921 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072694173 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067351749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069853442 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070975733 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073010964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067035757 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070173143 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072477924 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070395233 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072069751 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068211322 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064992774 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070559563 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068291551 seconds)
  done (took 3.335519201 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0712281 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064612 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065586219 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071953319 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065752914 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065258273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064358881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065023584 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065446829 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064627155 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06573321 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064745789 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064933782 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066047127 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065821073 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068669456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08096728 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065144209 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065228761 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065189346 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068153212 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064781048 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064786447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064697887 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065190434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064512287 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065380818 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064649409 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065245057 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064438144 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068231094 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068112256 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06347506 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071713532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06786648 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06333608 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066415193 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062047762 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062687363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061962995 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0619697 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062328883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062148603 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069416114 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062672831 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064187831 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06289254 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063762098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063048461 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065193667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062443284 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064177961 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.182721513 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065659495 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068290803 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063583271 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065379168 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063679245 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06474412 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063927574 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064111808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06379289 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066725697 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06493573 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079639309 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071357503 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063821904 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065797384 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065246248 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066781993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065872662 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078088573 seconds)
  done (took 6.076082042 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091739119 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08841406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066449318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066420423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063098702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065125714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071676006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065215349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066309087 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083421284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06542365 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066198871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066317309 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068534688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065368171 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06645763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073562589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062760238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064746511 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068699822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065207193 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070820509 seconds)
  done (took 2.762429192 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157145619 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071744333 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107583706 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076307643 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071418934 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07679731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070838808 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070800179 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071489702 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068420653 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068259943 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071093301 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070584236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068920352 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068055474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06883122 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070392542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068377552 seconds)
  done (took 2.617317548 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077874535 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067037146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088510651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067571353 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067612502 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06965023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071273337 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075617223 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069166538 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067072729 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075067256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068545174 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067353513 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064636764 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067228707 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064668569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067510844 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064652693 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073068368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06886566 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068919111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072822098 seconds)
  done (took 2.76594485 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082457366 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068900973 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082591014 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067426685 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061121712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063085322 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069043647 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064628341 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069321599 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066709147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064507948 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063137782 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067714593 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064817628 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06750501 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064413304 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066920433 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064495477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066845937 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06045592 seconds)
  done (took 2.568327423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087224542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068820203 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068711977 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077079862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067473724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068586493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074142307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066693692 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065796518 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086604218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066541572 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066235274 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073924403 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071339805 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066562811 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073519936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073088552 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073491447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066276099 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066037628 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087098449 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066036915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073165988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0658796 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066457097 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066026062 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065617298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070946778 seconds)
  done (took 3.212488604 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068246227 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066846539 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064306047 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064923328 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064174618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063975204 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064537731 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064414201 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066564841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064363411 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066741556 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067015173 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067112483 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066711827 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066084169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064891568 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064950275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062715809 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062498572 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062651694 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064561676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064612888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065053716 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06277431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062215252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064638013 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062549213 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06252192 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064985985 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062511645 seconds)
  done (took 3.167340159 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076525148 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074287723 seconds)
  done (took 1.378560806 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064202101 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081896002 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06494698 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071228698 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070237605 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066299548 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074048645 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069637827 seconds)
  done (took 1.786345855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08308361 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079116655 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068792197 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08061448 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078040386 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084007131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136881201 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068585626 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073765863 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065220309 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080826715 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066044222 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073419543 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067089479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071635353 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071550364 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062729997 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070538207 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066726315 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063815303 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066627872 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073972842 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068172799 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060725868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066659702 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086736775 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075721018 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064471072 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067782432 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072101149 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070599166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058898759 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064387819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065385433 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062842559 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074597362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080136021 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067891913 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073210923 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065052701 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074526716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059664844 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069567654 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071734695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07471746 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06528862 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065570858 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059821176 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062384441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067214959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06025421 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067735123 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059578965 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071833653 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06833311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075455389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063913438 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066553147 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067507594 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068235739 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07181231 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067086837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068073433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064703006 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074919124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070106484 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073623766 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060222229 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059158345 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063035855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07436223 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08768632 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071476119 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065317245 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06557886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062536554 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067743433 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065528373 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070634773 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071098903 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064634129 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07012859 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072522393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06555773 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067284288 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072333889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06304764 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067172944 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063178791 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08113257 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063635034 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062927461 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06291508 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074965531 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068346962 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065268128 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063128536 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072067747 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059549993 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065227623 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066657366 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06532073 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07494956 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068776693 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068454207 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072540331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071298639 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064408912 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066821766 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061226051 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065955948 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065445081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072896521 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059824883 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068074589 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065069898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064592946 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072246992 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0618052 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063893432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070785251 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.193827258 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064468201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063181696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069497502 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066271952 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071270804 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075494372 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066082678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061603357 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062259356 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071323384 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067411328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071012969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072917268 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070520706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060560943 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063368971 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070559269 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074952652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066035595 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066565627 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071057824 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066850045 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06482919 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071863083 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068281432 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06493657 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071249243 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066562949 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060441732 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068113817 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06795098 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0638751 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069506679 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067517793 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067550845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065468808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065449091 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074304366 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068022306 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066919875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067064791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066445081 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06909949 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062755586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064874172 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076338885 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06523878 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067426747 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06620553 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069388018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067583407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065304779 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066721943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069312152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077349389 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070087577 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065943154 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070204162 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076104201 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064215882 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070257865 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066294246 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068350682 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068000444 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075667265 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072820455 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072391984 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070282253 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063325718 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073537276 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074263066 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065816596 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063614133 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065809788 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070937312 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07175875 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068611635 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065985091 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063099002 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065793931 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067751762 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06790808 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064475546 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064304514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071385442 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063039211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070896858 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06575364 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075128743 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068276442 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060122512 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067525103 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063213968 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070773555 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05997423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062777107 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064555232 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066469045 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064236016 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068037133 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059195405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072422585 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072440129 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065197356 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064258116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064398774 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071876951 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066206245 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067982395 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067401558 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069279053 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073777455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063337214 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067047865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07358415 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063842954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058110773 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068830082 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062263344 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063025108 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062944385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062051776 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066876689 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070964089 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.198102136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05958301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068500557 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06548559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065523967 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06196247 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072837376 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070584576 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068454923 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074053265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06866421 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067854659 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071533642 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067674224 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068315796 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069823639 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071372528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068456037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069208638 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068100152 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070695658 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06680318 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065413954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069474479 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068059531 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068356173 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072562944 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067557023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06712447 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071341792 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067960031 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068444917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067930735 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067084405 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071208761 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06784973 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066280467 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067922331 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060869613 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072479987 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065261918 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072566055 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066060916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062314359 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071843747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068059327 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071804008 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065271409 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065250674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066603136 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064165193 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069936909 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074429061 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064489591 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078596725 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075594693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068364741 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069797688 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067246798 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068709036 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06646997 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067688094 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06787322 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067420103 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06733215 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072668959 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069988424 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067191837 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069038321 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067180007 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067154573 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067992718 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061476843 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065117573 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066429806 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06583116 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0759577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064994396 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064880842 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064073837 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065598351 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064100198 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062028935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072725192 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073625049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065480759 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071911413 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064911948 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066712242 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076330266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059540471 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06326317 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06302536 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063148237 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072743223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065388305 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07452248 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064901518 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064401825 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062074185 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065309847 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063655591 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059544996 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062726232 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069139351 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064324112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064033675 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065376284 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067608441 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065616563 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074681166 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06450427 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06536542 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064823689 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061236436 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063138921 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062993031 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066747393 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06390252 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062116136 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061358393 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063444383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064628867 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065278571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066123039 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065435056 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070804586 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063470783 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066784547 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066611537 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.190768218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069605878 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065553217 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06647834 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06731268 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0710922 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071645241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067968972 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076313858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066565103 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068886695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067295265 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065578787 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06788988 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068148843 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068056066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067287476 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067252496 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073864167 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063900521 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068586994 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065631854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066386869 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0717908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066513133 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068368955 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07100422 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066461567 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06760084 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074187857 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069940778 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067993652 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065985527 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067478017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07138695 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065032863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071955236 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065970148 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066798881 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067341299 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063090561 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064825706 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065550545 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064489353 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071957404 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066660583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064381503 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064981816 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063285188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066887645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068751186 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072553106 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068152505 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068743185 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060220655 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062296753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065893123 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06338356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066767124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068243823 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071435309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067760107 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065935756 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063942984 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0745854 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070661588 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069668811 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063513179 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068241533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06560278 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067644852 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065925275 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065221106 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066129434 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068680591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065951376 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064060407 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071813531 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068067158 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066082938 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06642134 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065934335 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065809561 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060056608 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065758688 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06693288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070198561 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067119195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065644567 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075508118 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063054996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065787986 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068039857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064302419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069537551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060353408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066775043 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06563168 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065956823 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060407488 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064897775 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063240651 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067319783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064318079 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060505905 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074977688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074146916 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068043702 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063946148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063658537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060514113 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06048583 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063658354 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065198249 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06644452 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074133856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063257255 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06310823 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058892988 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063693047 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067532254 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067304133 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061406504 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059649182 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063320359 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067116966 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069781992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062689471 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063670717 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.198331215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068699122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063801655 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069150283 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062914836 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069348998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078289117 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066260001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066557456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071536561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072882707 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06656003 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061050551 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066634945 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068699733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066357032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065830066 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066326718 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080774511 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069179439 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065432078 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064092369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068680254 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065196102 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073994457 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066543561 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065603336 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071013646 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06667252 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073619699 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068887778 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073297806 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06872479 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068572076 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064448141 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066228624 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063629554 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064635793 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06598799 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065522874 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070534839 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072821229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065568263 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076530734 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074487834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068042848 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062416802 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064516686 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065437166 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060509762 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066388432 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063588233 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063767359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063619699 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063698337 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066892606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070502135 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066705882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066356575 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064915752 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059096642 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06786043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067397787 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067049783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062921831 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066784823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067738151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070870329 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070046789 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065587035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0687878 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068054116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066372302 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060440609 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071566739 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064316959 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066698333 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064202272 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064979488 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066052346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068309387 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069074929 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06569527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067056936 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068397955 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066473027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062546478 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062878972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069949254 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06295775 seconds)
  done (took 42.047624062 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102106923 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063321599 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062277649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062279013 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072193744 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06157452 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060294397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061567953 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061898412 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063606956 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060578171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060963137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069088057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075523119 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071445314 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064713829 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060234122 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061422166 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060114891 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061677161 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068561575 seconds)
  done (took 2.701305672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074025043 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077264175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076048181 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081455739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069956865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06860344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07346445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068445089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076446227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071250455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077104819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068799386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070646987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071240123 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071646317 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068881738 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077005219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068902591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068740267 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073857572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068783214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073473536 seconds)
  done (took 2.892803096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067295234 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066833467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068274196 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062580292 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066817842 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062453608 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070103054 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064495159 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07009515 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0664938 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065508204 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06553899 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068742785 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061547593 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066821553 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064345006 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10822526 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069535847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064428074 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065122902 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.059599252 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06623037 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059760501 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06047064 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063690092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069555964 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066596805 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062905755 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064005969 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063454342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064098258 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062497301 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066007565 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064493345 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063227461 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063152142 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064146017 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064053096 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059637111 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062566035 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065318187 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060090628 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064583436 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065688973 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062179758 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06257291 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065898816 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064086044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059831603 seconds)
  done (took 4.506410155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079756666 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111084053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068866319 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09252525 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079961992 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073094955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070607872 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090944153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06359623 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065097181 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080874459 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077064241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063721733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068668001 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067915685 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063606414 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064985787 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063766272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067198858 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06332762 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067475508 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070557732 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07780703 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076635294 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067847608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06285096 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063152194 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067824872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075364051 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067955221 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068160704 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069233672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078261695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068703114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063163434 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065881148 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07906228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064021417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066273443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061940727 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066609181 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070698253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071245026 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079406713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065786445 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070492974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065527187 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062826872 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076477298 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066072092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07096209 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077079314 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067929667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063821366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068061147 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078042788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063576762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06255473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067423919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075810758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062021777 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06761385 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076151394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066454281 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070463342 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077276292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068892921 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067850674 seconds)
  done (took 6.258673711 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078088351 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096381049 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084294584 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083874515 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076290952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075955518 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076136526 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075913553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075885638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080756459 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076457698 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115251673 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069343388 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075702185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074583605 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074004468 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074012846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074104854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073981251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073709492 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073769618 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080613353 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073382242 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080876607 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077896842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069513736 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073374408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073819057 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080772011 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073813266 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077940212 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073459881 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081941857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080544275 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077674243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073225126 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064672698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075964046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076535346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075521601 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071198048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083116406 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075355781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071342694 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075963148 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075557806 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083045477 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079440153 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077984575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080187485 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074473883 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081230063 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073375752 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073550202 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081427699 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0837757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080856083 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080649107 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073543705 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080752207 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080539557 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084268378 seconds)
  done (took 6.145424889 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083971695 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075205077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084001314 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062556939 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065317954 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072588002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065700825 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064841193 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074704755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075416568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075351378 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070130609 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073562924 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074306995 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070279223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073093617 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070176387 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070206162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072382351 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069932959 seconds)
  done (took 2.767380195 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075220964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084186588 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068057891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072959749 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069587287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071222493 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069242134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068527332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065463891 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069626616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076881301 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076806235 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06736231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072133425 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076358116 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071951302 seconds)
  done (took 2.472017644 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086153811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074127403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08123184 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067093181 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067914218 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063009925 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066063011 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062217111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06282735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079067643 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066338121 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076643142 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066288485 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065472013 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062815331 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07176216 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062641095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063754048 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065910478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077954286 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068809927 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064126392 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069509736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06627323 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068631153 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070667125 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065636966 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064759736 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061671063 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064383088 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067326599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067654767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061326554 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06222466 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063249418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061588354 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063967755 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064780259 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069441602 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064034678 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062773043 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066358544 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064279782 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065057737 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061078196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064887445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06086408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066220037 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062563134 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066628045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06440522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067406865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067298861 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073176409 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069266847 seconds)
  done (took 5.001210501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080743778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07069322 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062030496 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064958476 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070980997 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067856962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070382547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068164671 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067955016 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065379661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068004811 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070367727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068813829 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070041687 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068398451 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070243818 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062322933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068491938 seconds)
  done (took 2.567011051 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072451552 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067136824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073934103 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066979542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066053477 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06873995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062787179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065425427 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065435388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066518839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066763465 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069054581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065288084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069188481 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066354241 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06628703 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069448398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064747795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066446029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06228287 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068921414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063878329 seconds)
  done (took 2.798136504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095620493 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084972628 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143614853 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079871182 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085736923 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072471207 seconds)
  done (took 1.886683182 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092050088 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102346817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067034545 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069882653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076458209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070316923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070473448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070515677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078626111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076528931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070404907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078549937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078681024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077866242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075937447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074891728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068792378 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068726042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066864328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082164631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069053275 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07725461 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069320866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06948632 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070817155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077381276 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076895545 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074303377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068335257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076925167 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074211751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068863923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07783178 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074439031 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068101242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076781122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069018466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082214542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074819808 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078171938 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070002928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075920212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076750011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07320745 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077227023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069527332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074187247 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070133556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070739913 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086346987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076364499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078152153 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079117637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079250111 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078944857 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086699792 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076993146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078368822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076769546 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076690969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07853621 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075585824 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075783105 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074737803 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074403437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076342398 seconds)
  done (took 6.305821425 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105277797 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06785034 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071581221 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077358067 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078638295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071301745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071355104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071867543 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07093881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068082171 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109935801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070359747 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075881261 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076211431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069047726 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068601948 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069222262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076128987 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066136784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0845542 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068883783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076414094 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076023759 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075779217 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074798448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074422323 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069018342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068748044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068455667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068676691 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072878515 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068677838 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075844889 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065310523 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076021605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068416584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068221767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073229187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068393375 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074323736 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077127782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081393266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070172223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069974688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0752606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068320706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068353878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065054591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069345996 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065879791 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074466476 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073892993 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074359601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075392295 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068876885 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06921097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069620561 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070370889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070836513 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075709137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075414578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068455814 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08366366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068426852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06865254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075715856 seconds)
  done (took 6.16935828 seconds)
done (took 128.240042405 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186286894 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163596882 seconds)
  done (took 1.669144201 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070013855 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099777733 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07947556 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130165985 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065501334 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098749353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097625032 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076551779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064905695 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.064858884 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064753369 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067869081 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130192249 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.064782326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065040891 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067455525 seconds)
  done (took 2.640673662 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10222778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167987636 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103973847 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066212728 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101224899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074704139 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06627292 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076789561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072109719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066898868 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074152408 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072099966 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06616227 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071787135 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072261 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07367063 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064509468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072005161 seconds)
  done (took 2.800136513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101123158 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094004679 seconds)
  done (took 1.534905951 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15863717 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103211534 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143450715 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348000295 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167620497 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146810874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142196081 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142821236 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11495816 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136229545 seconds)
  done (took 2.938064764 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101824758 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155862555 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267379328 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117878072 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074506221 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095920616 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120307291 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078297931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078449834 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078262278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078957574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07419024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097837563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072183232 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072855014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075260137 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101692703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071691557 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073359998 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074714734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098813978 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064554463 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072271759 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071430384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076109224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075845264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064554433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064406301 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074872579 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073238003 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075565641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091618994 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075740527 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103813863 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069252398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104705506 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075564923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072903931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073395214 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072013143 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076662078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077173217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071230146 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074234952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064296256 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075294151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064228485 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064624261 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077164155 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066234048 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077910196 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075450803 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104194253 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06732213 seconds)
  done (took 5.909329387 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105167164 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107917519 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072585202 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115247421 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102344632 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070998516 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101252887 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09412726 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102138178 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06908008 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067183598 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069227144 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081337813 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080985194 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114069425 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104908484 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072627273 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069613616 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104747059 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103672913 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067285006 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096015282 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089851615 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101670151 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066114053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069825591 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066627797 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069020994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075502219 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076784256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068484649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079149555 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082749301 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07611838 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066074733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066535359 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067079383 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077762119 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078107647 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077114559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075724559 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066442639 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066531785 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06844449 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068999011 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06659346 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07732293 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07855688 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076573044 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067936395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069288621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066912152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068497481 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078543954 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076205908 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078941105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078194314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067342651 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067239739 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070775582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079092093 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077706336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07759429 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068023024 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077289027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066770791 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078878008 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081974567 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066813819 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068805903 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067092516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06816862 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06802325 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075943664 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075808832 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068677295 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068552392 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067097401 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07819528 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076436349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066554471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075743311 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066392841 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068365159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069115111 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068024845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076346314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079480782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068050566 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066845561 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067957683 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066764441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065689192 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074819425 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078869945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077471361 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076125438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066974026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076162395 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075194298 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067600057 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075916788 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065853286 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067316329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066615227 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075015822 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073871297 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204496398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068647367 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068852446 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079657124 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082543693 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067833632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077986726 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079085921 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078171705 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067014554 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079492569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068416123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079187208 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069311157 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079074303 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067836188 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078240216 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067608324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067123242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067385842 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079229454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073043858 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067926948 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069436287 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06869531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078814399 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081637586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070529136 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076656655 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077486407 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069193796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077627348 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067682333 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077270883 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068923425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068930967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0662231 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081035532 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067303736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067394002 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06807343 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079155268 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067515521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079398836 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076284169 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068053414 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080254027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079092113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076264439 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079090451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070030755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067007349 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066968804 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068337735 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075346252 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078053964 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069684293 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067990285 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079215947 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079638776 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065936667 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076949074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077094709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076914849 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067608401 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068446591 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079067214 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078833372 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076470383 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0766323 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076428597 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066867545 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075571918 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07613109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066905029 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082050171 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066838615 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080881655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077259694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075028184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077223722 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079180282 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078613183 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078640589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081183573 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066677432 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066634768 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077611397 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066506746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067759448 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076150806 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06824706 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068572505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081748927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067630441 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078899939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067049467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077348118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065862368 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067924359 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080115605 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066138887 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06747628 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076733191 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067589237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074522262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077241175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074853237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065554229 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067684297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207288784 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077653043 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068075494 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067769327 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071878018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080334492 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078917111 seconds)
  done (took 18.350271498 seconds)
done (took 37.187518058 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213558196 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153276339 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18221099 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117586587 seconds)
  done (took 2.112028275 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119135116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104060745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094608486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066079387 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102425568 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066148152 seconds)
  done (took 1.933305229 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313098909 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208843498 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186951245 seconds)
  done (took 2.085710618 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204071143 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193090745 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422786698 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259822381 seconds)
  done (took 2.573763571 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146650958 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090413613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068471362 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085358663 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135115416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162775359 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099706928 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12400265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077547427 seconds)
  done (took 2.42451088 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146855534 seconds)
done (took 12.654355771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.256435893 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.212991332 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.207656604 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.173335532 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179784131 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111359298 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.143821535 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163647518 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113386597 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095998649 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117098616 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080986427 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09538302 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08158283 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077791201 seconds)
    (16/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083143894 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074919464 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090542721 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14591224 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.122512339 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139381077 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092386804 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088823123 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06979611 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.185696167 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077504585 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162132324 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089851563 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.159507605 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17641717 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173347525 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.112165112 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07754747 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16274925 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214058997 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.154283335 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103950085 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15773164 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.142230978 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07193917 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114435505 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075973541 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.153201165 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155406654 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143303665 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052507045 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.215784332 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175630684 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051986454 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066653006 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076797913 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070077615 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130083993 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143236287 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110653139 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073923543 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087338749 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077359405 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069942819 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077551437 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.21768467 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068026513 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203930978 seconds)
    (64/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.120136461 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052986488 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067415087 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.224268814 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063062206 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074846052 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072636407 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.1944385 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181537445 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093067462 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097636828 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064493896 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050789345 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090964142 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.050639019 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050124895 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088313327 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074605965 seconds)
    (82/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0654417 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106045142 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088045422 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079080969 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072173013 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.280957722 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069601582 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.06650101 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05152215 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072235511 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091004474 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066979142 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081536509 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140570913 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21615284 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090292605 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161390256 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075880496 seconds)
    (100/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06517181 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.167194868 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147390887 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075146516 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075044387 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10962475 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071406757 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087696967 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074605109 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087226347 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.161177253 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194730184 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153681907 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089166566 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050081551 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.142764688 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07286384 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182024284 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073447652 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071494386 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050114014 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110437006 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072392577 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050016829 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050070386 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050714242 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082180422 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052119827 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09323235 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139172759 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.131471186 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071812295 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070519211 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087659283 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064083045 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049742972 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193411663 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.136769438 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075016587 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.155195294 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148544195 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071446195 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072848555 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152821174 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064056573 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06954302 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083135429 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063850759 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109143062 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071118168 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065780438 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.050374688 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.140244921 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049810645 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064103639 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063735455 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071611032 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180830823 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076021046 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206330732 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071679987 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089165846 seconds)
    (162/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052026435 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07147116 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088696682 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065730869 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.296552507 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070904193 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054632769 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140344853 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074028577 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086359254 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180217268 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118414814 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078784512 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076177585 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087045735 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071102408 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049456123 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059651462 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084079866 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067670544 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06072794 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174443913 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063457214 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064953965 seconds)
    (186/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064736995 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066611186 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.049396891 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069515248 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070872447 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184451715 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050008939 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063785628 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.049166872 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181674696 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.221146155 seconds)
    (197/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06565856 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163745773 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05133403 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065549303 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052993023 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050848627 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068276007 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095088173 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051715172 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065050812 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088688944 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051117353 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064539642 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064684387 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10745321 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054359157 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076614979 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07467776 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052194469 seconds)
    (216/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079844612 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079663203 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072600944 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078919701 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100132806 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064620517 seconds)
    (222/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05152571 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066197517 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072062672 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049890231 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109441602 seconds)
    (227/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07172894 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067553549 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05290135 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072923917 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067052047 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074112518 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076659588 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087871087 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067078476 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062964382 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099394457 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 0.129826442 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050084453 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051187133 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134425479 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116969593 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064245798 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072848548 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109542058 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088971008 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065130968 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050011802 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064179986 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05084541 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154875791 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072640466 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051281599 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064395752 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072182519 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06370866 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051049283 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064783932 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064589096 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.05991678 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089568395 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050193487 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069644166 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068508451 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071514524 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183335466 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054327403 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075231029 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070594244 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093474563 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069465528 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065535924 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051903863 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051653592 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065462568 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052583269 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094935051 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154349989 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050990317 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069845026 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05187995 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074411921 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065368918 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070459018 seconds)
    (285/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.0672122 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07158721 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063682656 seconds)
    (288/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061104899 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051344976 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065011361 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061869318 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051917218 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074215426 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066115531 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051191019 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071962839 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052881187 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090850528 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049680047 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111601805 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049824229 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049842136 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071601026 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051420826 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049670676 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069937916 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066380867 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052547414 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078401548 seconds)
  done (took 30.796370128 seconds)
done (took 32.184171159 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089104112 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096601691 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077399466 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097010496 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08369226 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077049636 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072556391 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078645952 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079929657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081659028 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078298825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053990453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074051483 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07412218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074526418 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090547156 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078580999 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073014919 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072715563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064445827 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072594286 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065043036 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066783928 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053582725 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078194133 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071438392 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071470206 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073452287 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064850319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065179351 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068741866 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07360967 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064498932 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077671405 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071482789 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072678586 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074096377 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076094852 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067032662 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06509353 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073942408 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064794611 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072416989 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073437317 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071626834 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071450879 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072561177 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077503604 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090492571 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067356302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074176789 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075591807 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075310418 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072626198 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069754545 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072692092 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070810783 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09058686 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072837867 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066921704 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073806105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073968893 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071135694 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072198619 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072106308 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074543637 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07489945 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070573009 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07383244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070855792 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066350347 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074449655 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070496729 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066451008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077669789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07728198 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063932859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070654387 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072068587 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069851217 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063418477 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066451668 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066250391 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070896616 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06602317 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053404664 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069244208 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070989354 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063892282 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072262284 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070878485 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071578879 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066313221 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075015461 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063909806 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07033887 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064923451 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064770272 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066225985 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069086628 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06440592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066376399 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073843767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06584055 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071410453 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078184429 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064854018 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071997368 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063488311 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064020135 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078555007 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074078638 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064365407 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066590206 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063403355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072298314 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063556871 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064051895 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063805568 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064338568 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070675946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063728638 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065407822 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071824983 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077141976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063880263 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066672134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065106909 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063734535 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069308173 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063649125 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063161689 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065081849 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060265142 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065131141 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06334809 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071058302 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065442062 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205336538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067652216 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073379406 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071573937 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071914933 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071260679 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064379517 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058767468 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067605901 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067150579 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066963358 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065073812 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066643837 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065046976 seconds)
done (took 12.371054343 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06827155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142926297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099620331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09680121 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085410301 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065898056 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07549862 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100200586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067437017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100943136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086988542 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084966697 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113642748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063703728 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06518803 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069280299 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066983956 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080848415 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100154761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086196855 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114708797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064461112 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091552734 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088841477 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087187632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102836409 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068787211 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069029532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069039383 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09212886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087839943 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069479061 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065992804 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097376154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092775852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083249772 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065640939 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082368779 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065969931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064657621 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066609499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097743047 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080018026 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080137141 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069142316 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068441629 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06626586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083775369 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089348306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078636542 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085380047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100368547 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068043787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064467198 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063423529 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084859182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063794891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067708782 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065001957 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06727835 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064711507 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068132575 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079276792 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079175672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069191331 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078543414 seconds)
  done (took 6.735715021 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086440611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093582335 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083321731 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083583154 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065016455 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065395321 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065838757 seconds)
  done (took 2.022574932 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06889554 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09093583 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091955002 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092012218 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087197477 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088735456 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075686248 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065436134 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087361159 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066935697 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087149889 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100067474 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069323674 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072882912 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08983724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065317093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090374382 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065598257 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068512314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089088354 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068072201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094871161 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069044742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065874117 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079748378 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066227408 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111964332 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069432761 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067047317 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068603918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063435521 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106241129 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079230516 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073761353 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065313163 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079969334 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079819922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063702097 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082264408 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073918848 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079337137 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066303456 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066426484 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063532795 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069818539 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075799405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066113841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06593501 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068211478 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085405971 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066111846 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078982998 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068427105 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070713862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066644243 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072136901 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07538947 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067007638 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08490348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067093348 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082443021 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081848079 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079075281 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081639149 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067534783 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078840101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081782315 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070370758 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070212135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07143027 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084051283 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064083652 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067748541 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077012484 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068561567 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088322288 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088170929 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066958438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078708815 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065537842 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065656969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065873824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088253899 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07077348 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065366926 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069203471 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068712213 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063911303 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064560976 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069008662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063492039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067245309 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068193774 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068207106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06849897 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08159828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067645389 seconds)
  done (took 8.724266931 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070808681 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07002771 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069946453 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066557507 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067117547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066849185 seconds)
  done (took 1.908659737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095717555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070139412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079707899 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070773749 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103134071 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085445972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085441731 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07666536 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083111683 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077457028 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085479758 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090724889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095695547 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07463066 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089408271 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073519314 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090276792 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076951237 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08073007 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07481895 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088792617 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074299878 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073397188 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080630247 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074341045 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070429694 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066076511 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07747294 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.0769719 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077128214 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070800813 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074479261 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069272807 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076807814 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085993023 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069886549 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070289442 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075855278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071082597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074154042 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087527656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071336625 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073303145 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075929443 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076879683 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069365832 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076489425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073661237 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085278077 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076625225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075892186 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070349097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074157564 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075662696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069217916 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076483851 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076214597 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085717117 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072217908 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069995586 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068034923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07422311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076455231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074076587 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077525624 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07609359 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06937518 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070968896 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071414305 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070974646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076106545 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067664557 seconds)
  done (took 7.018536683 seconds)
done (took 27.874908635 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538562863 seconds)
  done (took 2.002191423 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621130899 seconds)
  done (took 2.110388609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.619219662 seconds)
  done (took 8.108163172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403690591 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.492342221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717003281 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130979756 seconds)
  done (took 3.2750424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706270433 seconds)
  done (took 2.207588506 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219046826 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203567411 seconds)
  done (took 1.931807737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378685541 seconds)
  done (took 1.867497874 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.151348954 seconds)
  done (took 2.643081416 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260641659 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177567632 seconds)
  done (took 1.932022774 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.494115891 seconds)
  done (took 1.987720674 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.852180408 seconds)
  done (took 6.34906129 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215814613 seconds)
  done (took 1.757563442 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244115417 seconds)
  done (took 1.735482368 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.692626172 seconds)
  done (took 3.190313658 seconds)
done (took 42.593061459 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083374361 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082668476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080831984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077197648 seconds)
  done (took 1.802467939 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07969923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075426749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079525423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074799314 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07977084 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074794403 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07674957 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078979931 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07531483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074151344 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073235756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074065886 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076941311 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075506402 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07093419 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076464226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076672166 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072223778 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075092697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072152105 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070593855 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074330476 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077104957 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073978193 seconds)
  done (took 3.305085196 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080240451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074995004 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07749038 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074312614 seconds)
  done (took 1.812969834 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081416289 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098894067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091718565 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080124477 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093712961 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086215914 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068621493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068382837 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069659163 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077281872 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067995466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095936468 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088066422 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076990002 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079186369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065417085 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06810742 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087188117 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077632916 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077859267 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069501838 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077421238 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067561523 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087638527 seconds)
  done (took 3.40347719 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089754591 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10715059 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081819498 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088358682 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090295815 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064478138 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087987114 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090423289 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125815047 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06484719 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070022426 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064908283 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071968855 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06462335 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080737687 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107031236 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110493851 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067908953 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096126127 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065084555 seconds)
  done (took 3.197111651 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075931618 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071480608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068165596 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069427563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076560979 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072264647 seconds)
  done (took 1.944634044 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070165521 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069491864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068464906 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066605671 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072688337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06729451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065552625 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066908462 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067037842 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066145496 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065577373 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065185761 seconds)
  done (took 2.313508882 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20760148 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067991856 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068659021 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065381775 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069672932 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06525329 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080075199 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067305147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090611514 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066054928 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065558127 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067459642 seconds)
  done (took 2.487347424 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209902248 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078871274 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239279446 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149238472 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110140815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114563027 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111171595 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113255117 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140208987 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099978711 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166813494 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165346594 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10671134 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136004592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08870612 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100148167 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153066839 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161718995 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10462955 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16560757 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143553757 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125278741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152888118 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100914543 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104758052 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120303118 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070693996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079042887 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168386009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132147875 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142856964 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110282469 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091598298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175911497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170759409 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139420865 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145984966 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083669283 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103722615 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133505043 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199925466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090807894 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161002985 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106904732 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217943279 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13310041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119607534 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119507093 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104445467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089707078 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145201577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182011736 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136275219 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088301526 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123064775 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113107704 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113572891 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112814102 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181189578 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160388622 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12645419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071140146 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107289365 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153134814 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133325508 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109133989 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12339294 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090814781 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135884551 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154518176 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119742111 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144054729 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115872351 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088059268 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118869867 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13930369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126276506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159609037 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12340255 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072673599 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122457986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100590946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080386999 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145425491 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075056712 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174919627 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097913117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107796938 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124665381 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11235766 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109972276 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156297723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142500744 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101576634 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064495774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245169325 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122078315 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146791353 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086004271 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109947008 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116285708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077805304 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137722533 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074916322 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123201062 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077449525 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127897513 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128733208 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076787324 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1227013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102961864 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101140332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132086447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159693569 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08759838 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081706018 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169864261 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120786688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101954348 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144418925 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155893841 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101113575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101604883 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152002728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182958968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092428988 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167498354 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109668643 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085905906 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087148402 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12245508 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110956021 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122868713 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080858193 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116793132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167792502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074518554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09507393 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133348426 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078123976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080554961 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104050672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103435306 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094589194 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098511253 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101786654 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133965768 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122005712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104200991 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121586623 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096951755 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312105938 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088065107 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10242019 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106308026 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071038095 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134511246 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158245762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082083016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164775358 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123205846 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115467066 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122206383 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083138432 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139732444 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078733801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069324923 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144414922 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109927494 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109595053 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151440019 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115751809 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125160328 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118351752 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13330317 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131160906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130031308 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107195378 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090129762 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116229209 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130672969 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07402269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091562507 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081401795 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1042937 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094912627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082572689 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139993743 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122978591 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108941458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11114796 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095740396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147111359 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075803087 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128176324 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121309542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095110384 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151330464 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151215595 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130080873 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098012073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135043363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069682762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072869774 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087127974 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121196267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081654897 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082046585 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258035905 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148532528 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129039827 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135673181 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123656887 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120647681 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156057953 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07010859 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118065667 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147324991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121629345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10498341 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089313583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09830783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142972035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107448598 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180642499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117225437 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123658117 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151669822 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100820893 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079010779 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102438551 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135453406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102933457 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142561413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098989316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087798028 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10962365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073710211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098043819 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125736876 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117331741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133550763 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114380816 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131277067 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076933763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114863664 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120738789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120960322 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063504597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119547348 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160426576 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093452592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117426099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151754782 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078128189 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132846154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172621277 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142281797 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083760468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251481662 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120088807 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128804434 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120124834 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14127072 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107394119 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137470376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110412466 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086167944 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087122185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097767819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104612617 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094729452 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105566865 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113892777 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095328578 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13143477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103024119 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111057571 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116999303 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098962798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090096044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095690307 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176385633 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118243204 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169425372 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099639022 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143528584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162659869 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07475093 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078682162 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077699567 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139576068 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083977253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128726741 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106243607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116392978 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12294494 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141576929 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095019544 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068140634 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108141288 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131489637 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123546516 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097425355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102870873 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163260331 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100573334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078478237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112882164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114805987 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101691652 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168857794 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061167674 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104758304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075046852 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079474217 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125723207 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292134275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080489659 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103220606 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118986198 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113641445 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127883753 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099883133 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107883016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125330392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148844027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128170119 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089817168 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111159978 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128399765 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156823499 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104593001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095710851 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17257342 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152625768 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158393351 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086474209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113872187 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114373474 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10884986 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137099752 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085299806 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165835746 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084831109 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139943321 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104157769 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088467038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127796757 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107561854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087008488 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147014121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116901213 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082205526 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077036437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116608526 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118794653 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105158945 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075164109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138189802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073041219 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130821275 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157115158 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079639788 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106699471 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095228235 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078161675 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104895029 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100487727 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086000375 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.237999005 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17518826 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087024579 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151621226 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132631764 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112455197 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135789728 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10263809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640058601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079571687 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152121427 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115111311 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175498519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100404111 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117948527 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110642407 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122032019 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143390335 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103590413 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180797254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130428089 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114828979 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079801669 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101537572 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103110486 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087554265 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106729154 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113613772 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115091647 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092236442 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115461489 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123028479 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081521726 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094886386 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155257537 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115970004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142534529 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139665785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085299287 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117423906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137260299 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079801175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119452818 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149782929 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104912981 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098248918 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079403413 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099416119 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15622148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072399752 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156129705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116037693 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253027618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114685709 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112541888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129751719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107219456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121625776 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092809796 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110909108 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113252436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08119875 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076351946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105455556 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111693817 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098777988 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097432118 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098426888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151833447 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072308747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099109235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114867222 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14400277 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172384496 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088979902 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082194565 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116857645 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112259347 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111541003 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120391651 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078534707 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080861334 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080247593 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077196984 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108011712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1121082 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11401221 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110290223 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161393913 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082895834 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231593815 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094912831 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104675634 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069488166 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077397483 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095269539 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097601431 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106583911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109626928 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158105512 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095002461 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089531324 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090353713 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073791578 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082711429 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128038087 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108213362 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116148179 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097306549 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06145168 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105511722 seconds)
  done (took 58.647844271 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112876218 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0826517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096810949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143994962 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122036984 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202218843 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153337006 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187951976 seconds)
  done (took 2.732948253 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070916383 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097780053 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10411503 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08599549 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066205908 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068259679 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231540618 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08104282 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0662085 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097858196 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07827439 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068221802 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427910364 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068788194 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070957909 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061750112 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066920163 seconds)
  done (took 3.415016049 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.398494143 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615218833 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.382009234 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072562543 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.455733361 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091764901 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.133509554 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131105101 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072913364 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537310814 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704077 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123146804 seconds)
  done (took 18.329977287 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078225024 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071410844 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08559729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084133093 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074455656 seconds)
  done (took 2.006581962 seconds)
done (took 106.950525015 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084226912 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.6109409 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052685144 seconds)
  done (took 2.304246421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086642972 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086930335 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08480067 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084749912 seconds)
  done (took 1.965647627 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077074171 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077914932 seconds)
  done (took 1.771372179 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232403439 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168482448 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095918814 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086328072 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081154839 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079620282 seconds)
  done (took 1.865679579 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075302759 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076340151 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072544696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075944507 seconds)
  done (took 1.913264764 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080347549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054973471 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056836779 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057145636 seconds)
  done (took 1.863065733 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090233681 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081686745 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079487804 seconds)
  done (took 1.865231133 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105477181 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086740097 seconds)
  done (took 1.805965273 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085187526 seconds)
  done (took 1.70733702 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104136113 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102686657 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132308301 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110613587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13918986 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109002208 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084130171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084796549 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075779592 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086188706 seconds)
  done (took 2.652221174 seconds)
done (took 21.903937367 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082600297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463970712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360225151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090047555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721621406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355770811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988782252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092353054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114585263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067147995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084282697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647561089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011470314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418234325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999732574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317833873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648205703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067812728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067272162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067402546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973256412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06706728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067187033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06756173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64914264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371522464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067460786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323135997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067153968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068914538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354103172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068244766 seconds)
  done (took 16.418121711 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073252952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123799908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075445342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087086207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073375557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072190203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073589653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068404459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121633446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067663881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084344996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06718781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071676983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068079348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087166368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.084996365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068070717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067751351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067288476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068070936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086246658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067110592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067271355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068222045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067328411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080212369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067539461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067330295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067922656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070029726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070592466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067619514 seconds)
  done (took 4.051228333 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122483358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126344396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073618101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105193987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113653705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069587046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147313916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092770346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128921019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067173782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08441743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067323718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101786951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068334481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087758207 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068175761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068810606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068484919 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068194857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068363143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087457694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067853006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068326568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06863734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068013395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082171712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068491283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06883699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067625317 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070095039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071306801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068278842 seconds)
  done (took 4.285877451 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075309589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078257738 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083678683 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084062561 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071800966 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073001882 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072810073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069223635 seconds)
  done (took 2.23891009 seconds)
done (took 28.623360915 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08187552 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07093001 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072769523 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082434958 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072327024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079142853 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067061677 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074996971 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07176783 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072789216 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074750291 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067633975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070730974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06693078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074447361 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067440002 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078612013 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071448651 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078747255 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079320131 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070489346 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073385999 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07523073 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078785144 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079300799 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078846284 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077544171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072865247 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069259649 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070867287 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076731768 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083974946 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07113743 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082614897 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07052299 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068935787 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072325989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067642826 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081935183 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078239196 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069646348 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077082837 seconds)
  done (took 4.731166439 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092058397 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09645065 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088294812 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063849233 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070479275 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068584693 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092978837 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062595223 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062012369 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091854581 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057708953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062525983 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065790792 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055511213 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065421419 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059073587 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063308289 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055185013 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060731953 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061328201 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092459253 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055390713 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080134685 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065837439 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057056438 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062830938 seconds)
  done (took 3.450158926 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078139803 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089370085 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093656273 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135861757 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108899241 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082307366 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083906656 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09919826 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089815931 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067510715 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071178906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093487316 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091372975 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073427064 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067253183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086904749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083733755 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069110092 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073169522 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096027505 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086868282 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086316908 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098518921 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083631625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06658097 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068981888 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070913344 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081488927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072850116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076346215 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0708933 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070272669 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068979839 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078647882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070735563 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06894545 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091939485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077467439 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078143171 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067272258 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070195203 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067889272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091895322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132417747 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069165486 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076210793 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077137468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077098672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066878788 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08675353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078289889 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066647539 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070887106 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068103206 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06890548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083636315 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071125027 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.087973175 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078420928 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071874729 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09269182 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071707115 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082422934 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066576549 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073918083 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065476733 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067903683 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065321035 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09468721 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068106228 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111219494 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070652647 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070243261 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0785593 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077183222 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073695916 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067701165 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082461134 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078280656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071332782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075582537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069834662 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069369825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090511867 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069235587 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068490214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067749605 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072641209 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069067322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067684375 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079712719 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066561624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069350426 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083641612 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066580647 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069239319 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072363758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07127115 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066093051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077337215 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07169149 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067373948 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076735134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066381532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069422675 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079298846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073679628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065677698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071074082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072705286 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0672916 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068230533 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06927141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069011167 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07545239 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073655065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071164548 seconds)
  done (took 10.655736648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170550916 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161877849 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072618464 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149294567 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07674039 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079013161 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150440928 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094494836 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068761754 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067996719 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068490108 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112553097 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110531527 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123897255 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078256234 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067240605 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084581131 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114628006 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153110327 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147227183 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084755456 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076727582 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069624013 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068462257 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06978466 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077709138 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085011126 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076096273 seconds)
  done (took 4.430529658 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083074345 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075563912 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092212343 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093539874 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070299757 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071836467 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06891378 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080918103 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077657816 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067025881 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073511864 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074592593 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070951839 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068114139 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074295857 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074360863 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068921812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070999234 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073319194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077796363 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091543509 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071191826 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066253713 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072835655 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066588147 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063369769 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085812126 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07048404 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097252144 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065755118 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075347356 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081443178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068020269 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066988772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067680672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066945516 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066953987 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069273106 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065694146 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065632744 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056867101 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066005675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078294257 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073500275 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05559107 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071669077 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072135112 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072002805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06458736 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070115842 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069619208 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069930459 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074428124 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072167188 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071986542 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067813264 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073584924 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076409401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067190946 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064215588 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065901077 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073683806 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064888953 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075508768 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072423011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065517865 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066799435 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068885244 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073280987 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066528702 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070319201 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064454578 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068757781 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071587157 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068891869 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068224161 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065483573 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066694512 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067764272 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054507586 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068102707 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054457482 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072788075 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06774478 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067984167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069626348 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074333251 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08133138 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071066049 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075497575 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069575895 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065865414 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070101054 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059219652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069647511 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082428002 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081734715 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067257512 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064636554 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082184695 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071659762 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065765495 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055483134 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074208772 seconds)
  done (took 9.153719137 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093790057 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071962421 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086025011 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093515604 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08712343 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074967879 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077167687 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069883961 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083286746 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073945797 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077252778 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067558539 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07832955 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07719128 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069726599 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077572358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072031563 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084735713 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082252806 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067764723 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076025728 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080733138 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089905318 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082247083 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080844323 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081899541 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090847244 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071771476 seconds)
  done (took 3.89718841 seconds)
done (took 37.942843074 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720716761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.883592462 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.709149425 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.083938703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.033243522 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.718281023 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.873031551 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.706248992 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.851770341 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.740941645 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.916393278 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.823063166 seconds)
done (took 64.702156721 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.738818677 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.848070796 seconds)
    (2/2) benchmarking "String"...
    done (took 1.977803848 seconds)
  done (took 5.46968782 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.024158523 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.269044307 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.953301075 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.706638894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.70857782 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.047573457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.514975739 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.232065008 seconds)
  done (took 30.076668429 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.822268208 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.935094166 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.381946888 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.415991233 seconds)
  done (took 15.243657624 seconds)
done (took 62.283237305 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.712290677 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.71558068 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.715079623 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688281653 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.763059922 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.713765634 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.121060471 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.755118057 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.703675103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.697282449 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.706245651 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.143028176 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.709481147 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.186309626 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.709256136 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.712785652 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.767313869 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.241582664 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.864270704 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722854941 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.713995684 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.711215417 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.70855744 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.711202106 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.733305743 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.705296259 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.150503316 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.710094916 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.331619272 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.709280482 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.737223799 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.197505415 seconds)
  done (took 202.110534762 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.707714614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.831190801 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.889870469 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.718189512 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.253451314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.88804907 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.82663829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.292571804 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.711702669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.734866637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.953478748 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.710186402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97923851 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.66059923 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.738192753 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.82103021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.996606081 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.987723303 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.745234394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.88573797 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.724607108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.869635592 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.813692995 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.93167682 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.752835626 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.727771738 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.720261679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.846567521 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.905158414 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.972614277 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.753139715 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.734520388 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.925913969 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.579182964 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.732440315 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724185187 seconds)
  done (took 168.69396279 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.107878675 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.712082075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.711396779 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710083199 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.723402072 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.711254662 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.832412128 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837524209 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.318936298 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.25387582 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.76203504 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534675013 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.70872917 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779756879 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.721123257 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.708179218 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.726923944 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.739032466 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70737099 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.712452668 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835702891 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.721591794 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.726866208 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715049184 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.713057092 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.717043871 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.085804409 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709019158 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718615602 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.974883326 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.709526679 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712872781 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6166789 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.352053183 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797765495 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.710722357 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71869469 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.714139061 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.932349383 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.709230136 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.713896743 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.716582109 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890565712 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.709969083 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836171554 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708358406 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22697708 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.70879782 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.712381211 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.308270401 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.713276508 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.416911524 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.712033933 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.713522891 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.716508887 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.71332129 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712483461 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.719403166 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.282611755 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.786118368 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.715957929 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.716702277 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720115737 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715699675 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.833962604 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708823767 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.36421407 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.772180581 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.842281757 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837025806 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715099946 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781111705 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805003009 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.710644039 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.714015435 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71334637 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.713575263 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.795543713 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.709977902 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.855341065 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717845351 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.714615414 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765410936 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.783552061 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.710824224 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614831837 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.711437819 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.714729533 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.71303626 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.037288235 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777561658 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.710348043 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.714182084 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712970489 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.850249279 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834376002 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503649778 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.711262563 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.714482765 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.314571886 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.715530794 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.715038388 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.86084946 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711998378 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891719184 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.716536399 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.796999699 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.714627965 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.717749325 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.715636261 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.746620241 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.715955445 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.775739697 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.716589842 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090472557 seconds)
  done (took 395.153004374 seconds)
done (took 769.764978403 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.401390018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.355440553 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466790455 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383709917 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.35268546 seconds)
  done (took 13.610901417 seconds)
done (took 15.260105779 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.80167806 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.804481472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.737708292 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.807475087 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.732785214 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.80804254 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.783373164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.74264164 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.773239453 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.738475737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.77795091 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741707395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729348995 seconds)
  done (took 24.630030683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958447517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961194302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788117204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950750885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76479076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951861228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885247674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870469704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872600433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.73483773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732482677 seconds)
  done (took 22.122644974 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.960407258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969156812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797290273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958274441 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768979245 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956455495 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889239976 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.874416668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872827323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736129158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734010157 seconds)
  done (took 22.169521378 seconds)
done (took 70.57384997 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.726904473 seconds)
  done (took 3.378833246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.751384327 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.907776719 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.733337309 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.731522856 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.727089501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727254021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.731137165 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.726999107 seconds)
  done (took 15.690882387 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.726699307 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.724981617 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725506396 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727753084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.724650004 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.725341804 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.725590819 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.728312906 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.725882751 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.728853833 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.728771065 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.727317223 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726048807 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.724756476 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.728201433 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.727917949 seconds)
  done (took 29.280649664 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.727025725 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.72538648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.726807405 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.727368168 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.725330555 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.7267123 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.728420181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.725416235 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.726531427 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.725579091 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.726025497 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.725929883 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.726254042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.725806472 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.725870234 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.727590423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.724981573 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.726359508 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.73091704 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727263625 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.726635372 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.725675255 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.727258506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.727271321 seconds)
  done (took 43.09660624 seconds)
done (took 93.098847532 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.566743876 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.087221642 seconds)
  done (took 8.308106817 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.731342312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.728829328 seconds)
  done (took 5.150447175 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.729431939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.728367052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.730402058 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.72803828 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.729417714 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.72859699 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.729330618 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.729045447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.728161229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.729453262 seconds)
  done (took 18.94655801 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.730122662 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.729785833 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.727893853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.730273608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.729222622 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.728274624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.730758671 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.73045744 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.729743684 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.727919709 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.730456659 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.72697162 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.731602878 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.728392845 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.731545217 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.727709916 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.72860226 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728072832 seconds)
  done (took 32.784973248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.731269721 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.731126678 seconds)
  done (took 5.119387305 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.727169797 seconds)
    (2/7) benchmarking "second"...
    done (took 1.727292032 seconds)
    (3/7) benchmarking "month"...
    done (took 1.728529983 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7272568 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.728631916 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.729795415 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.729124918 seconds)
  done (took 13.754437983 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.733338541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.890168482 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.957039782 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.36881163 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73377776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.733784919 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.69112823 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.735329634 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.737523051 seconds)
  done (took 19.239629233 seconds)
done (took 104.958889308 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.559414729 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.722876824 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071636683 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.833152095 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.737881278 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.066253072 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.756256717 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.027304664 seconds)
done (took 42.434061107 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.731571422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.29019272 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.328040642 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.528159152 seconds)
  done (took 12.804867754 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.725658988 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248133709 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.755224482 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.308865879 seconds)
  done (took 19.742021567 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.093121796 seconds)
    (2/2) benchmarking "read"...
    done (took 2.06756555 seconds)
  done (took 5.823662929 seconds)
done (took 46.76563978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734502386 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733594778 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.73035737 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.733241453 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.734632261 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.731614706 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.731387916 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733586929 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.732224271 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732777358 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.732930531 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.734171049 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73269761 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731448562 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730359723 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732961557 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.730856315 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731469066 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.729561342 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.731390436 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731579125 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735586447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.733075118 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.733206936 seconds)
  done (took 43.238996287 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.735554317 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.733630449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.735089771 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736565415 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.733117273 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.736093 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734835093 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.732228206 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.73559372 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.735489813 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732842616 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.732705418 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.735537306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.733971903 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737352002 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.732314757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.736045483 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732375897 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736288284 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.733794677 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.736767991 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734287315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.732673569 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737273825 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.734216994 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734709727 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.737110868 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.735180817 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737098472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.734373004 seconds)
  done (took 53.708040976 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.741983527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.747137654 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.736681705 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.736608931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.736712731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.73716782 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.736608242 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.737397134 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.737021799 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.736144632 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.737735373 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.737668943 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.737718629 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.737095307 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.73745908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.738010768 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.738228041 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.738441462 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.737685502 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.73677218 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.738286133 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.737759584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.738605933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.738819199 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.738093636 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.738911537 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.739741827 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.737820672 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.739773461 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.73906121 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.738819388 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.73941391 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.739366397 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.738729726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.739924715 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.739501952 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.744587322 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.747732906 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.739767323 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.738067865 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.738989958 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.739352776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.739938563 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.740599375 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.739303176 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.738749282 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.738823469 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.739891482 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.740843416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.739293385 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.739007078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.740066897 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.739305234 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.739820094 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.740353161 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.739071977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.739680179 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740325405 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.740271429 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.740732106 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.739980791 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.740463727 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.740857993 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.740521248 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.739870388 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.74034743 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.742235314 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.740492718 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.740418612 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.740618016 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.740479584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.742287913 seconds)
  done (took 126.901352453 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.741402392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.738557894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.737162575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.737354952 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739624483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741498546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.738793589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741516899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73886022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741909074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741156939 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740164056 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739151842 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74267608 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742635796 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.739800827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.741849261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738511378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.742311809 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742312857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741755352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.738642496 seconds)
  done (took 39.955604009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741857511 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741539857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740046504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.74333777 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739086408 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743122248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.742378431 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7422001 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742413118 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739774426 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740583543 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74345103 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739834413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740360203 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740212383 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740113375 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743168133 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740742324 seconds)
  done (took 33.013958733 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.740890057 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740858546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.743059148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74057082 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.74183598 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743782143 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742114782 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.743694828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.74530637 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.741755205 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.744522468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743440297 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.744031165 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742364811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744511011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742084626 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.744534208 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740722358 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744558016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74262465 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742148918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744191365 seconds)
  done (took 40.012919805 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744523843 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744535586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.741619721 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.742581313 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.741988217 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.745047265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.745037168 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.742612567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.745596685 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.745977529 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743459698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.745347961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.742720213 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743192386 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.743516902 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742032822 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745336767 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743140285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745106737 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.741937954 seconds)
  done (took 36.54720617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745246376 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745076591 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746322744 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74584028 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745355741 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.745379243 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746148468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.747367142 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746920972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746270472 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.745959004 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746285055 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745521431 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746683188 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74582219 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746114285 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746855169 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745809172 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746537944 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746482232 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746699715 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74736748 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746856097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.746358533 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7466509 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747068487 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747085489 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746941272 seconds)
  done (took 50.570290446 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747469111 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747238337 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.743874541 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745663444 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.744418733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.744442071 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.744439739 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.744649308 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748558105 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745253149 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748053076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.748189141 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747211421 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.748901433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748508727 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.746975702 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748910589 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.746143768 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744645978 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745684742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.748730585 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747440888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.749766159 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.745737775 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746233246 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748426446 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746174987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74572776 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749122916 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745430655 seconds)
  done (took 54.076377404 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.767370017 seconds)
    (2/2) benchmarking "in"...
    done (took 1.766990889 seconds)
  done (took 5.208635075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.74557905 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748060341 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.749960431 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746813669 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745387697 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749108657 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749927791 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745877817 seconds)
  done (took 15.654522882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.749448763 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.751336109 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.751476758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.751323439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.749899281 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.750322682 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756509163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.750997246 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.75158802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.750892495 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.758255833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.760374679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752184567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750489073 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.751016986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752846035 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.750369912 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.750897021 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.751963766 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.751570276 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751720596 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752973012 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7540622 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.748016509 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.752316381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.762933223 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.755394657 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.751503772 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752599757 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.754764846 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751900653 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.748570007 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.752042625 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.752214761 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.751758765 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.753250955 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759604076 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752221535 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.759435443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752690817 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752071927 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749430039 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.75386599 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753893102 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752318873 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.751627973 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.752292575 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.749865813 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.753308579 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.754990115 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.759035703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752178914 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.750978074 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75660168 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.755430767 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759463095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.753884941 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.756033261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.763514333 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.764182934 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.766646222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.762526554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.755119311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.752821419 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763032353 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.780365927 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759682699 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.750343497 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.750991646 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.754195219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.760139054 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766751364 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.764508339 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.753431557 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754427168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.754620561 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755168102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754809533 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.760402945 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.757009245 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.754370737 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7536083 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764740526 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780786424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.754648085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.754504324 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.755530606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.754631147 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.757227134 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765300663 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.755976547 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.755305379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.755211756 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.755457991 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.756426749 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.754167891 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.752920585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756096447 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.752538264 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7561157 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755140937 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757328373 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.766540423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755561276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75328451 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.761321894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.754729278 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755513801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.762153043 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.756416566 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.756208036 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.754272113 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.762739805 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.753057941 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.757698075 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.765830194 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.755031635 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.755818543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.755772384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.755656529 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767332003 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786082972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.756919996 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.756563625 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.761856124 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.770747998 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75628069 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.757720198 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.757910577 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.753731348 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.755319934 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.758109946 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.757764023 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.757491983 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757391359 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75634634 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.75498668 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.758500546 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.757660273 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.758187314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.759747504 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.75744973 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.759003164 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.759913042 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.75773853 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.759908876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.762758296 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.757648731 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.75885647 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.757885037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.754923648 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.758464955 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.758218175 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758336287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.758124593 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757656403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.756427219 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.758883624 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758410008 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.758949385 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759312139 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.759715135 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763348384 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.758251705 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.761916185 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.758585504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.756427597 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.759817397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.760027178 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.759275443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.758306959 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.757941796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.76252905 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.768729722 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.760271021 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.757914546 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.762249315 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760599802 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758734712 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757942505 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.762490895 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.768609551 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.759078652 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.766659817 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.759845274 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759926316 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.761014757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.761489254 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.759441484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759077017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.762425422 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.768826595 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773626652 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.769136998 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.760156256 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.765739498 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.760658395 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.764550903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.76302512 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.758973506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.761130453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761961695 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760496109 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760902769 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.763534348 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.760703366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.761036022 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.761356803 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.762565163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.760550992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761972708 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.761886953 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763152526 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.759023646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761901693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761950474 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.761157367 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.759623652 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.761736183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.762336534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.762416993 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.762226705 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.766456948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.75860969 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763461213 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763034715 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.761497765 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.76025063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.76384875 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76486847 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.763772026 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.768793061 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.761387081 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.76388161 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767369605 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.761929739 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.761360256 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.76484717 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.762659673 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.759025961 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.764227532 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.771854259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.764132492 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.762491074 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.762560093 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762329725 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763173581 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.769925077 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.760700118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.762131685 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.763655043 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.765001229 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.760668551 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.765500272 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.765363608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.764767813 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765236705 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.763655134 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.764791566 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765984851 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.765211081 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.762232806 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.763141479 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766216512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.772446667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.767808782 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.762195254 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.765058342 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.764278641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.768820054 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.76321117 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.764815304 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.762276633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.777281078 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.77361061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768753602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.766233453 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.764890107 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769357925 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.765648627 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.770073491 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76508433 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765276685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.764997511 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.765338594 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.762205131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766022743 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.7657394 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766048199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.766241573 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770897758 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.765634526 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.765101702 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.765199459 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.765310446 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.76447464 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.765742078 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.766490574 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.768328129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766946065 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.766676659 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.766302794 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773454736 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.765015059 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.765846817 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.765857007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.767656225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.766082088 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.767297165 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.765982735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.76749227 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.775073087 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.767621924 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.777367408 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.76758132 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777103121 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.764529035 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.768098892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.775872494 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.76417779 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.766876437 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.76639848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.766844707 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772380322 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.767262924 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.766993185 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.772530461 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76840307 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.76697741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.76619828 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.766878511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766773264 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.767522949 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775555631 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.768071891 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.773391421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.769933894 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.765978535 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.767439869 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.767670792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.768236959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.772650935 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.765846237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.768200874 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.767768316 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.768252497 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.768355057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.768097851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.768356463 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.766838605 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.76998354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77474051 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.768766157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.773074486 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.767684749 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.775595056 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767366979 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774834703 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.766814568 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.768907593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.767548342 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.768091264 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.770958928 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.769541546 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.769693829 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.768470382 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.768671947 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.77376943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.769658727 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.769404857 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.769640171 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.770359485 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.768294476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77908687 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796037102 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.768828251 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774500456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.768142249 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.770478862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.774810632 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.767395853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.768372699 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.772041978 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781240265 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778232782 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.769842481 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.768412093 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769631874 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770316124 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.768792922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.769432638 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.770252401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.769273354 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.770576013 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.769354057 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772839598 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.771815599 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.771553255 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771119697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.770484099 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.781765489 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.770309077 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.771989423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770260885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.770555345 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.771762685 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.773094682 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773420441 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.772628798 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773748901 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.774402169 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779596987 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.780630042 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.77426631 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.772755366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.771355215 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.772642517 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.772708991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77205456 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.770571842 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770759472 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772515487 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.772375086 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.772453269 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.772259532 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.771934042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.771896192 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772019576 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774073362 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.782439489 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771687581 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.769159439 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.773339412 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771983253 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.771331201 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.771491427 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.782779973 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774788172 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.785404267 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.782142471 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.777319189 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.772315887 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.776386919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.783817279 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.772715053 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.774060194 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.772742413 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.774967065 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.773465562 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.778857464 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773250939 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.779096289 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.773710561 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.774705131 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781960171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.775219664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773853231 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773911561 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.779223461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.773660558 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.771438977 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.77370801 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.773195586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780362027 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.774954341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775048029 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775459954 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.773776838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.774500401 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778763794 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774387242 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.776568563 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.773286635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.775300389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775636543 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775127524 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.772920664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.775765095 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.776056042 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.776992133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.786795164 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.7712111 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777358431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.775221532 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.776068143 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775331109 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775437961 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.772517842 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.772545174 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.774724547 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775538266 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.775803215 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.777859166 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.77549412 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.776444067 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.77941032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775661709 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778654348 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.786939843 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.786095161 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.774750195 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.777551039 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.776558328 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.779656125 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776592688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.776285107 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778905719 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.778689525 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.777392993 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776569249 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.775821699 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778971819 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794614034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.776426155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778486739 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.777883302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7812879 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.77803145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.775553763 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.777049544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.77846139 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.780032552 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.786864212 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.776562079 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783789684 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777287408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.777865225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.781914101 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.778571729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.786983932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.779256106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776518332 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.776522782 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.782262917 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.796349628 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778883681 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788306143 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810656439 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.778320678 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.778798136 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.778108842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776883783 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.779130436 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.779731538 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.778889073 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.778638281 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778460842 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.777949333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.778076911 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784456628 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.780464753 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.779832251 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.778718143 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.778803515 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.781183936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.776942437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.77893069 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.779089717 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.778399783 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.778549049 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.780627183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.779585285 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793151501 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.791565563 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.778601955 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.781056244 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.777078555 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783000301 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.783164308 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79331845 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789223706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.780466618 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.779339957 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.779867881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779733951 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.776004558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.781188166 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.780015236 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780490697 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.778474878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793432334 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79099368 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.785506423 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.779942615 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780369851 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781513986 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782532809 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780640952 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781090967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.782111727 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.78295997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785589774 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.780415803 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.782855969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.784875085 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.791213282 seconds)
  done (took 1055.153349247 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780056626 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77924138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780087946 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780518619 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779584486 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77915362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779645084 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780126052 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779913094 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.779804675 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780166595 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780842604 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780982418 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780258272 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781840704 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779971831 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780410969 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780718145 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779768613 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780090421 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.779970666 seconds)
  done (took 39.091004308 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784029504 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.780949396 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782155627 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783791826 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780775449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.785581063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781209566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78432321 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783522831 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781643457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.785930156 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783618675 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.779939767 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.780460512 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780463777 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782635053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784477377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780793446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.783175841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7834007 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782478281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780641577 seconds)
  done (took 40.925672894 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.784311755 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.784002469 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.784034545 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.782471002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.786691456 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.782748609 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.785344019 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.783816129 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.785528927 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.787662398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.784757263 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.785115483 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.792124066 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.792358761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787660267 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.785969491 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.929944796 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.786587537 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.785066508 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.786481256 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.783679101 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.791208879 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.783757116 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.78353754 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.785945988 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78627643 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.78596392 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.785633598 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.78578273 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.785449042 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.791869069 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.784994156 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.785853096 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.789187256 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786973366 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.787021102 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.791392617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.78600176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.783609162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785517237 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.797116725 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.81213779 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.786877743 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.792383522 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.7866403 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.786678476 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.789510821 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.796530574 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.78273708 seconds)
  done (took 89.434609886 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.787383045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.785771705 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.784698666 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.786246528 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.786433608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.78786623 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.785423404 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78650459 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.78439258 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.784509108 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.787898416 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.78474512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.785588104 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.788194998 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.78657 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785570225 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.784412821 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.784293888 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785407448 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.78357164 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.784399014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.786459309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.788346493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.785056507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788044591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785714944 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7846901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.788862801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.786473114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.785624389 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.787967421 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.787583567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.786990488 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.785563314 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.784783093 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.787717668 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787458059 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.785277216 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789076287 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.787063247 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.788361362 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.787884045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.788606005 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.787923267 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.78728939 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.785208794 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785433502 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.784491562 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.785165189 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.787926873 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.788160421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.787054823 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.789287614 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.785001716 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78795012 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.788524697 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.785775476 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.787157915 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.790388916 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.787715377 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.785055095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.78996835 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.786834858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.789873039 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.789310738 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.788415826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.7863399 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79044262 seconds)
  done (took 123.215470695 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791468459 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.79105824 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789947947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790943047 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79255808 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.790778831 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791663435 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.790693504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.789463591 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789839085 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791506382 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.790289865 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.791068374 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792398855 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.790367533 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.7915101 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.789943346 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790753633 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790723215 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789207248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.790249321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79087811 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.790777008 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.789740756 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.791944695 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.789870908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792204939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79130217 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791121775 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.792005488 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790982463 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.790643439 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.790839909 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.791041343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.791031355 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.791615613 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79155747 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791830622 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.791656687 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.790897732 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79141555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791125637 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.791877898 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.790953242 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792313974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.791414417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.792702758 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.791975362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79164771 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.791314865 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.792122006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791304924 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793030388 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79156557 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.794436304 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.794417096 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794854512 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792222172 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794409389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.793330182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793643761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.792727165 seconds)
  done (took 112.791179259 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793227043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795596789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.791436953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.790413392 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793310181 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79164783 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794349882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.794160378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793663555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.793244529 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792168024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789004453 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791319734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792624787 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790732612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790814506 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790106439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79091309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794415006 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791458195 seconds)
  done (took 37.563634105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79075576 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793372365 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.79065907 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791225625 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.795203081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791859769 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.794242352 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794951377 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793481682 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794661132 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794428002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794212792 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793343025 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792790594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.794335676 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.79104104 seconds)
  done (took 30.409432871 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.793587054 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.794369505 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.793990876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.793892418 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.791225337 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.791844586 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.79437764 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.79137736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.793075963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.79488968 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.79572141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.794937216 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.79503604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.795032425 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.791785572 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.796159469 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.792165764 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.792600514 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79533952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.795378165 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.792374053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.793478265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.795471227 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.79458493 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.793580535 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.793818593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.792267617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.793749856 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.792624396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.796872656 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.793188767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.794269181 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.794244792 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.793962753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.797793964 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.792970969 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795919921 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.797572652 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.798170745 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.797310079 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.796899094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.795031179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.798143434 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.797415371 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.794709683 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.797527932 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.794281363 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.795441558 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796287612 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.794941919 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.79865412 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.799306822 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.79672682 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.798404291 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.797358414 seconds)
  done (took 100.443413183 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798937393 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797255332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.795307535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797439184 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.799377568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.794886733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.799372025 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.794915798 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796697699 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798127624 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796567094 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.798557423 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796191558 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798962008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797789988 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800368455 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795635306 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796113924 seconds)
  done (took 34.075875102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797379635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797497807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.798269728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797345896 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.795812212 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799182199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796618297 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.798970052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797472661 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795793283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795247578 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.799325523 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798189736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.798421797 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79729658 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796727629 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.798284049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799271025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.796869696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795669713 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.800495016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799039584 seconds)
  done (took 41.273238078 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.798532163 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.796882146 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.813624816 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.823061346 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.82005062 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.83632527 seconds)
  done (took 12.613227605 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798230553 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80041418 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797040266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802227246 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800923574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798887075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797898343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798983371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800758986 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800318693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797919875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800100314 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79982586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797506312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800764595 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800507626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797802025 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798627704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797794906 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801526809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797868253 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801282203 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799256097 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799418045 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799147663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800293766 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803687043 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79988382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799698677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803006342 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802842049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800498556 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803209211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801200039 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803171155 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804069778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800110631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803090914 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804108061 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800349237 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.802450231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802083152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802652635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79958487 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802736356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800306704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800289605 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799675928 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800525491 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802601693 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803995388 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800176568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802871764 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805037073 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805398954 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803944041 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802628703 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801173519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80352915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801813747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800531921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802443396 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800143496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79991009 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803290391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803697338 seconds)
  done (took 120.593874541 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801061668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799604015 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799267733 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801978393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79848741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800604792 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801154321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801438416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801418451 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802527059 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804366151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801006331 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802284895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80190214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802651991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799929569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801527234 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801218698 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8027036 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805434248 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802033207 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801512218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800495696 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800998848 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801681856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80611346 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800520796 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800521437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800666005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80136177 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801895578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801523132 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800610066 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800454891 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800318779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800749987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804805312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800269106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801945575 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805344355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802436935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805763477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803594623 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801355685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80272932 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800734947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802301562 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80128126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805183901 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803106151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803733784 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803811831 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80305753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804099703 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797233804 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797774315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796680287 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796368718 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798447619 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802000385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797697949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797968975 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801490741 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80034068 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80148296 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797281031 seconds)
  done (took 120.62408249 seconds)
done (took 2458.755440429 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.823450441 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.833919492 seconds)
  done (took 15.382371547 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.960012579 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.911470749 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.796223118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.793785413 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.794214229 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.790819164 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.806523647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.794614287 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.796423778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796212817 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.796432211 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.981908816 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.847685114 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794309184 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.796311243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.890995479 seconds)
  done (took 51.218488704 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.80084964 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.80211729 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.813198865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.803604624 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.801511835 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.819396563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833263697 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.801565673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.859804333 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.81099388 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.923787936 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.809751721 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.801003639 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.858203328 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.811017228 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.81583732 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.894662827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.875402755 seconds)
  done (took 34.659598765 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.881969462 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.806442169 seconds)
  done (took 10.421620891 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.815850816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.814363641 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.793486442 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.805639258 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.822443886 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.806063378 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.795947286 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.79697245 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.812383032 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.801597502 seconds)
  done (took 69.793440886 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.805817317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.800812671 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.800666183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.799599635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.791599966 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.794555481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.799075097 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.796460706 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.494016817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.833056366 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.80100179 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.801752165 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.79319361 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.797482719 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.791636856 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820505686 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.985585034 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.793511403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.792384443 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.801049844 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.798837878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.856980654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.810321578 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.801125647 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.826719622 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.494915433 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.801015905 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.801269235 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.93675184 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.796611432 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.795392725 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.798944102 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.798502828 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.173232372 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.073976811 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.794748088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.802186209 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.80668993 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.794768953 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.908902599 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.797411571 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.803111237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.696145343 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.053049548 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.909839164 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.838312438 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.170985491 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.798095644 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.799338 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.826797663 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.802162007 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.798242004 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810651876 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.307278976 seconds)
  done (took 128.707370635 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.793531117 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.052204172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948291632 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.790247744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078847101 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997652989 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790905383 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840673722 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.790469057 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.019964084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009471975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902493592 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792949527 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.79048215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783675135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.784020247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.953371112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870397186 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.787355092 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.786847477 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821105527 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038807614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925269044 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.789379305 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807847534 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000439097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.920813263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89872815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.260681768 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.784069653 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850810155 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.784531802 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.781796705 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779462063 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940012538 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.881517514 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867637348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.777813998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779096696 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.778384103 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.453406579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978822912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878612885 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.92562062 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.026261064 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985485098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567374912 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.781657986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.516630435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941718755 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.016274323 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.014688978 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.905113026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.778621469 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.288196282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.779295902 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776394285 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013038848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007740928 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.883500216 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7809167 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775623284 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773683985 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030224959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777674893 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869399106 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778652041 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.776392248 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.876637454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881558865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.005370127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994741851 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.810070715 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.095443567 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.255436091 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028366982 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.844516092 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013584381 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.775983071 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772903864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863043559 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.732493936 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976835508 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027652547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031855493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813260486 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.501607384 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.775158362 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.005471521 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001497965 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.074909087 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019768955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.931234383 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.082573689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77460325 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.772176328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.00958809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.912049755 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777550581 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134033188 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009911738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.341214166 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.806259691 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119738826 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.907500161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77795179 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.417360744 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773897745 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999234837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817436275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.775652297 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77210232 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992287147 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.847384735 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771611189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.423045162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.84062144 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.769652224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008069955 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.773251554 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037730435 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.771409631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011712593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.980925795 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802835429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.002071568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.011683428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778022013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018406366 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016312801 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.889509378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993339339 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.389398762 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771832154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061516307 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770268886 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.768993625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939510238 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.772879927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944211607 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.770537321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106242291 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791797215 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927774424 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773167361 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.029113694 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805934007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824889227 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.769910565 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.903361074 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771642644 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.695257687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.92509301 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777407526 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.770437255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.508169475 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.769338382 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929740404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006265466 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.795734003 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849411633 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.441673624 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770842511 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859627546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.794550434 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.124261042 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.772160346 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.987486926 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.773019747 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304222921 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.772113368 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.01493454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.958194739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.771776731 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.771239294 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.678670943 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.771845554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770311878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.933514958 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.847964568 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.770983385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977189809 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774108204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910641937 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.771318462 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.852340304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129208733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771047589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.770122889 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.770802825 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.771420297 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772712995 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037783714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.801491746 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.297106662 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.913371763 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044005135 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.09128144 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.026769382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817125912 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777320109 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018101226 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.774718534 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.836686983 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.772286386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.796643083 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007674886 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772336118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985759759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055170261 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.700791219 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823327396 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.771470291 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.7749078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.717042799 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.932197072 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864739259 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773458564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.771187676 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.899273041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904015932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987643833 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.773834571 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.107994111 seconds)
  done (took 883.385771281 seconds)
done (took 1195.29364213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.773908009 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775731343 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.75896832 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.76921313 seconds)
  done (took 28.787062415 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.781515448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.777756956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.77742354 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.777008764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.77788806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.778341139 seconds)
  done (took 12.372266084 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.820119161 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.772082209 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.769022715 seconds)
  done (took 21.065959115 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.845148603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.185371431 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.891144444 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.214490266 seconds)
  done (took 9.841639327 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.778490944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.776412542 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.779088559 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.780985015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.779389369 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.782206461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.780129714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.780369919 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.779557002 seconds)
  done (took 17.72403457 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.206152572 seconds)
done (took 95.702558883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.254333113 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.976638865 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.973180856 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.866959689 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.778410455 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.847671843 seconds)
    (7/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.84821609 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.894594764 seconds)
    (9/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.976026053 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.24666978 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.948861458 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.773659181 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.108147891 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.903851254 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.815130548 seconds)
    (16/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.175477957 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.800102338 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.890455413 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.092384181 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.723989053 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.812076335 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.824039052 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.674230846 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.914596569 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.696312258 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.783400271 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.870850515 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.966430435 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.903125042 seconds)
    (30/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.845155357 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.778551859 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.108477807 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.885041003 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.324157877 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.134453869 seconds)
    (36/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.93986005 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.681070697 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.998874066 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.762624525 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.119690722 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.275844703 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.919559342 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.897849714 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.866280598 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.789100285 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.126553656 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.751736438 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.869346596 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.952427747 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.170842646 seconds)
    (51/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.850503457 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.980714903 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.944621955 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.769245648 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.910349966 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.96665496 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.01941987 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.78744245 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.835476404 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778623434 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.755628576 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.117828508 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.064777942 seconds)
    (64/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.944245795 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.131451701 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.755840493 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.205559873 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.061911001 seconds)
    (69/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.26130248 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.948934211 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.050402497 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027305995 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.771005266 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.990741223 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.826206064 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.320323953 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.76972094 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.350560368 seconds)
    (79/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.340405034 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.863323195 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.061681085 seconds)
    (82/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.841869457 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.751719014 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.14816541 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.276762738 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.870106004 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.764213113 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.763443389 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 6.81959085 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.750867286 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.780943607 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.457877427 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.886728537 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.331095797 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.77319072 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.748733272 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.153031641 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.236790962 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.770827628 seconds)
    (100/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.832396766 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.794209632 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.92569858 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.868898748 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.770875386 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310186293 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.983374739 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.97400004 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.796182881 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.870048843 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.226911771 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.367090167 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.947024625 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.852982778 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.110938654 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.150531966 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.791489829 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.765314759 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.849913983 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.101064627 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.85729652 seconds)
    (121/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.978792715 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.974400203 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.991915594 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.93999166 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.133716117 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.601877972 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.753977243 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.461256742 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.775783079 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.539076073 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.042068459 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.958201221 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.798327975 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.07021655 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.088293607 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.756093187 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.221659978 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.790282427 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.752174762 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.852996216 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.020069205 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.79429454 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.870183329 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.768345951 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037304451 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.019161293 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.095902315 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.753332042 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.905127432 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.818613464 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111626825 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.739833307 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.142340425 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.105389818 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994207725 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.79523536 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.133744201 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.769324371 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.12419523 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.797839869 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.559138287 seconds)
    (162/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.721476841 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886064771 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.452282096 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.905709453 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.793346529 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.893911114 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.755895982 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850950748 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.072367591 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.751212199 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.774249074 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.771030403 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.934309806 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.853550087 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.769416623 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.849891237 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.848592218 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.943573376 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.791605602 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.833270775 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.056228753 seconds)
    (183/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.771542167 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.987333547 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.77130609 seconds)
    (186/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.860426519 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.893557309 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.052187709 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.856433028 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.798982416 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 6.775277018 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.914474695 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.071914961 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.077854057 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.965188725 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.802930739 seconds)
    (197/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.855297132 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.963039136 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.062358141 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.831845922 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.758983639 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.472041959 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.771668461 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.138302621 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.247761365 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.150176704 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.777002638 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.916780953 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.470195973 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093624545 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.489208991 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.86278991 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.888111164 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.993502128 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.810438889 seconds)
    (216/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728286231 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.460630168 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.806846715 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.614923227 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.924551358 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.013583225 seconds)
    (222/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.907878878 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.905863264 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.79837723 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.018301278 seconds)
    (226/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.966104013 seconds)
    (227/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.868130975 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.88205613 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.959360389 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.798374437 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.113931768 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.801669514 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.253683054 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.807127356 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.996359418 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909946342 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.853508101 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 5.576862524 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.925424535 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.765852512 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.676277592 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.360034278 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.919627263 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.791022765 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.853078883 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.415462728 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.486730163 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.509696735 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.165400479 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.119135322 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.051228344 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.797040028 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25248749 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.033079198 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.8064867 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.868747286 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251494312 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.87492169 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047103205 seconds)
    (260/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.957411785 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.583366384 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.001348211 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.802538704 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.847421292 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.81081412 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.781767793 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.766271346 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.231041097 seconds)
    (269/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.910011077 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.42098445 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.640969946 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.303386018 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98242709 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.8946555 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.867857677 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.937800281 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.846827082 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.88308249 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.26546325 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.814836679 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131920915 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.867989885 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.864926678 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.358000471 seconds)
    (285/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.920416494 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.866567864 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.927115594 seconds)
    (288/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.289390835 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.800786247 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.735381924 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.070634736 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.708684179 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535780516 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.415268241 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.973191856 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.821905006 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.717113199 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.253782202 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.16868699 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.886515562 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.094932171 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.08280591 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.815341982 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.35533017 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092677062 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.80403712 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.785441743 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.785914643 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.578981357 seconds)
  done (took 986.699197619 seconds)
done (took 988.480754176 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.819165908 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810098611 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.793326699 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.819425856 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.906277396 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.822214059 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.80412826 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.795340983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.841602617 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.847852576 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.792429246 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.821196094 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.796250817 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.794116913 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.79776686 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807924023 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.100548424 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.819814012 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.811036108 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.803991175 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.811044416 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.795486907 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.842642818 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.822700593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.797141121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.799546517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.797503265 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.815995686 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.908132453 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.79961853 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.797312181 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.808624661 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.099207204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.817276841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.792712328 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.81554826 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.810527862 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.804112749 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.799939497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.827981064 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.236745745 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.804122374 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.797832764 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.79634245 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.79644975 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.801546869 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.796202927 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.804148858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807733745 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810113162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.231386833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815921645 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.800538693 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.796780804 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.806961717 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.795511432 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.802360352 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811871044 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.81749639 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.812515161 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.090880059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.824205994 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.798174448 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.817595784 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.804629056 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.269118083 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.79538847 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.800439111 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.236202912 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.805414647 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.268367524 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.809873884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.799584551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.812053339 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.829428899 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.10284442 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.816629321 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.796888617 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.803635698 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.79721457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.80728521 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810140244 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.8034759 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.797546802 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811374267 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.82666104 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.807823044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.800858977 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.806114843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.81772313 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.806730136 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.810675071 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.802110635 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.793194121 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806867344 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.805052326 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.800579359 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.803166679 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.803236141 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.809197357 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.234247255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818867463 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.795161431 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.795559843 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.798193552 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.814217262 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.234651836 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803886364 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.821133025 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.846415025 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.801502387 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.091653112 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.825934498 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815773119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.807572108 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.803867987 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.794231059 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.092944929 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.258479933 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.819066105 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.803123731 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.799061181 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816685546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.8045565 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.798034476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.104548944 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.825509365 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.814326859 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.921445836 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.811533591 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.834217086 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.798739796 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.805039909 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.82998786 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818055514 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.832851319 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.805398114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816694932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.816249799 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.798315166 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.814762264 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.811600689 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.802965459 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.807950426 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.794626994 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.832162623 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.813114018 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814652846 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.823035243 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.921964222 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.798153546 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.095791279 seconds)
done (took 282.906900795 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.872307419 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.791386451 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.903492312 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.800136109 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.881858948 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.885642304 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.79689745 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.796878369 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.796515446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.170394337 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.796029099 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807237441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.793436849 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.796800854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.883880708 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.799157923 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.797430589 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.135427057 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.800870683 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.873110516 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.796613247 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.797512911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.800030353 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.174393206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.793428263 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.799377504 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.872724959 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.800589741 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.138219423 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.791310764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.796521662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.139087368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.892304422 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.818915098 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.811142028 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.807805169 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.882613896 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.804532433 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.883689347 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.882624976 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.901054648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.840724824 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.798625793 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.794917927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.804777554 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.801164763 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.798702806 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.829485698 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.794872977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.798973359 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.137155163 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.810395187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.800215222 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.800341988 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.799607623 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.83370529 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.798908004 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.802600701 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.893119006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.803597491 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.864503696 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.198788257 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.174114811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.802096398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.799112334 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.800178501 seconds)
  done (took 179.669206624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.868777846 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.87592917 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.867390998 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.804791785 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.853527319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.868240979 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.805331563 seconds)
  done (took 14.671738879 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.807960919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.804587906 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852120586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.853265128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.802698453 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.97950259 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.803139006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.815336053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.801403765 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.855741863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.804778654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803846758 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.812290317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.796199565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.850850905 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.814508369 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.918735312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.804753848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.80308068 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.955509457 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.802192622 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.809882845 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.857289325 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.815110442 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.803480441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.809613031 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.482614144 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.803790579 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803006732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.803971495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803739358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.847494817 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.806116648 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.797703982 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803324385 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967847023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.804796049 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.801570385 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.805574741 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.804840401 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.80724468 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804060322 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.805710511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.802273873 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.80472525 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.829240218 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.805750986 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.80530321 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.807657957 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.804716371 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.857925732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.804943619 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.802678647 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.803852821 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.860265759 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811985194 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.806344582 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.803574464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.806156121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802964536 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.959428255 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854372531 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.806881832 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.853332448 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.806646644 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.810228349 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.806532581 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.806120305 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900611418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.80588047 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855212451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.80464437 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.967139021 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.828849949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.806953985 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.808483303 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.810027379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806070882 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.80379024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.814012315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.803525663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.807982954 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.812824491 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.806218984 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.80463837 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962077142 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.941720466 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.803079408 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.820283892 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.81381478 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.806546792 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.860750868 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.807894298 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.804489444 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861598661 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.92335357 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.862041089 seconds)
  done (took 199.761884893 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.811970494 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.81433155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.809605406 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.823811175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.806881677 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.808103557 seconds)
  done (took 12.608252346 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.810720021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.808171412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.807543586 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.806986622 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.807135801 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.807645306 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.808147338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808284646 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.811811945 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.808554622 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.808770918 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.809300475 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811190798 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.809131289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.809842769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.809016408 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.808232388 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.806379038 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.808677588 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.80881733 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.960791284 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.808620881 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808387571 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.80903608 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.811769125 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.810177768 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817293937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810078238 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.809633262 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.817178705 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.811334793 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.810574031 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.810547654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.815580217 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.814134683 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.810968045 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813137878 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.810580862 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809972152 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.812075002 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.812756671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812582552 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.809564592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.810785166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.811929731 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.814871293 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.814942712 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821836221 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.810612721 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.811563174 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.811884238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.810868624 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.811450048 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813417245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.814187783 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813360488 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.81464875 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.812621235 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.810515661 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.812283763 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.811324146 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.812423111 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81141479 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.816463087 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.818545685 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.812814052 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.811967992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814176493 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810696057 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.811363451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.81225525 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.809407949 seconds)
  done (took 133.302237741 seconds)
done (took 541.752123959 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.921624057 seconds)
  done (took 8.658307585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.909527878 seconds)
  done (took 8.746266105 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.291991828 seconds)
  done (took 10.02956459 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.825779515 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.831850956 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.809471102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.810214125 seconds)
  done (took 29.024593623 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.941918824 seconds)
  done (took 8.681589274 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819429373 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803423487 seconds)
  done (took 15.397197146 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.84616825 seconds)
  done (took 8.587422948 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.910856618 seconds)
  done (took 8.655453544 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.825636381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.84596091 seconds)
  done (took 15.422746279 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.790668992 seconds)
  done (took 8.528507894 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.553214478 seconds)
  done (took 11.296864874 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.806956737 seconds)
  done (took 8.558071314 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.859307014 seconds)
  done (took 8.599010591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.933020952 seconds)
  done (took 9.670154441 seconds)
done (took 161.590888362 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.807767689 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.804324856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.802737867 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.805564959 seconds)
  done (took 28.958191568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.846665256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.846040766 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.848197689 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.858129271 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.849001103 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.846535656 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.837610594 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.837113306 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.857540495 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.849600781 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.849043742 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.847631445 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.848463799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.839694429 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.849421014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.850107996 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.85837847 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.846855242 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.840243494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.85076641 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.814011745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.857829862 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.851748452 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.814823602 seconds)
  done (took 46.034228411 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.014655324 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.885188495 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.969159367 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.866531594 seconds)
  done (took 9.474316911 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.86464364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.86741453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.880605581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.917004622 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.941376677 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.877102196 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.840557646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.835977257 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.821589673 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.86815047 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.944181219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.863321262 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.969978597 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.813978518 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.000331435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.814867502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.814562312 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.867520631 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.918797553 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.932821285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.816082012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.866382505 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.869673859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.86490962 seconds)
  done (took 46.812410623 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.813691058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.822744815 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.819731778 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.815650205 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.814813116 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.815060005 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.820953318 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.816271976 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.838642495 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.815840707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.814701972 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.815587818 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.81529727 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.814891132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.814459127 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.827870502 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.829217239 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.815134009 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.817306318 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.823768269 seconds)
  done (took 38.122049748 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.8093123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.662807831 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.161670698 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.065601099 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.808943086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.808027186 seconds)
  done (took 31.058488296 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.827264655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.81888181 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.815756876 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.87101218 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.950910632 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82214277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.817114315 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.825235838 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858708951 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877964285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.834029357 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.840499095 seconds)
  done (took 23.901618054 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.8100328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.809627988 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.811747387 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.826801722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.826219359 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.825405317 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.824127201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.810669434 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.827996539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.835116928 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.825577673 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.82802913 seconds)
  done (took 43.606536778 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901392461 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700764661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.850018816 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538761513 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283637797 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021939166 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335504995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15148554 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.81504476 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085539171 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969702473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915757259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067281359 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812006467 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832469906 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298969166 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110136088 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04735894 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839352383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645686786 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861620331 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304625601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.69749371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869484306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023280574 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.941263315 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.075000119 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.770547249 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952586486 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851552238 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823759267 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.813603131 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088886537 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199175339 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917555809 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824534447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.470270844 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.53598237 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.801616739 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.625060051 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.656597746 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.939676745 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822115142 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813574324 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748253168 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26131972 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184299267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.818111268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.52809326 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.814752926 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827555314 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902851727 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.817800222 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.631209671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768818412 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09238448 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.811930441 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821358658 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386736894 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978102114 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297310858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.786091157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.009534983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623721473 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214220568 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.96770078 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.818831743 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.817610424 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750287451 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.62678846 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866092654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96070861 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.83377383 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466676219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13113107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.963564245 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755868654 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107647644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.986808133 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.787617791 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045930313 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773999851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753062583 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.682703402 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.75312398 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088734164 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854467387 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.45640505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859744334 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155042746 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82591364 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834756531 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822955294 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044052947 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.38192773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819354868 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.69176658 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958987965 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836984498 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150868491 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751317503 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.819229533 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073953338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.028101258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004978353 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.338198002 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974627646 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816272257 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.894037377 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.699733115 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.862527523 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.095722853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876900906 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.977899392 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876646785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.775215968 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124523347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845269552 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.981415547 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.979397021 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942141216 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.150813773 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112558292 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88264432 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818051697 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.81844462 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.716226421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369789148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.084767245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.819843037 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273299898 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862360324 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.818258151 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75339921 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.40909109 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928842382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.786414272 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045209492 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.734277732 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127512462 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75576873 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965054011 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933324532 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.041102423 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48126093 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.902873588 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077885994 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258772949 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.03292748 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862801675 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839103201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937921361 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841502517 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.205102577 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107119429 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.822498884 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.824716592 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681144276 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.817029825 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824889013 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.825154227 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622221977 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104883798 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.847935556 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820324368 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712607327 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.835730043 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890098531 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828285743 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831873614 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.363122978 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.570337044 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.829731807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.440542701 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045190641 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830609135 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.639199582 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932900697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90454389 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105353347 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88616583 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.754306497 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.53220365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.516438872 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821944036 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757772871 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.821512644 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83125015 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832052477 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.202477694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103682318 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870239829 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.712873932 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.865325929 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832664111 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.826799202 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826729847 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364203055 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.984619895 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309307553 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864215254 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961591058 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.835669231 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757276151 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.826905235 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827160953 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822999315 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.790251648 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876870906 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.634721239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205828009 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081802865 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.516393026 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840699858 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.672614366 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.882079323 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.848319085 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716256447 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.724978298 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.963885322 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834419995 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.833242384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.646720717 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518423889 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391118073 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153565313 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135863356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278097646 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.272353415 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125311864 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160685738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058449454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354319599 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882253922 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171411673 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768082358 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910555814 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483617945 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182935366 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837608527 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054537044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222144584 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.630821117 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995961057 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036787443 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860267993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.705404799 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838146441 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.032250926 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969313038 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.63148859 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031716175 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166398981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573056556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922778846 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.824840536 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51310719 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914951316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.537406157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189579762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323957158 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.843791133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301794174 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.828909194 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27412246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187930221 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.11276624 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945110938 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760241904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836908852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.83723491 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.827420727 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.820667569 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.694067014 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.078457305 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839570056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063527534 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.195405882 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124538351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.731466758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.831297127 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82832261 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130411557 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.57578095 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995966936 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.226173248 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.343865836 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830252837 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.762059608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764157663 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.521799542 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836153197 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.804135421 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059570149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.015061436 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783478266 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298416199 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067070803 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082509922 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.843059604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106437726 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104833971 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567032722 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858357971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.930069763 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.570773046 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.939388383 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.096682825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062753079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629286716 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056984142 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.873928643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.641721154 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.828829903 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044093261 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098245234 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808939682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065007237 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.552342127 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.831429229 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272626036 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892413319 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.82207034 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982608985 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.025073966 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8400613 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916764957 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839657852 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.841189912 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842096181 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875213479 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835776688 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958271479 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.846572909 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919335645 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985701731 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354949169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.835057157 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112977129 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199333582 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16667416 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892579057 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.832541549 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830490519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76579084 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966484232 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27715453 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104368372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965493283 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.133228088 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85460273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591395124 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170790427 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068607716 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106423956 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.725766483 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831338825 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.86053636 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.098569024 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841681002 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.043025625 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066141488 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155264912 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304326287 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.030320853 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19537449 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10474719 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199020925 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830589968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420905012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.838705604 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641957169 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.877189333 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.815816334 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099917891 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842464957 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220007354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854862313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.032359053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.348048972 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733738939 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121940159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.830731383 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901088143 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114159386 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234002836 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147900289 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901862919 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848079669 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.537229018 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97103135 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.71247795 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.100449717 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833790234 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047162808 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.541167282 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.844420764 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114607186 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143372825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.832956144 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.742031621 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840988351 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.843255561 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057831317 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10323958 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090080945 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8409308 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841512529 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.652809858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111534051 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894129432 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770322238 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.83615454 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935155059 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08450509 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855368704 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.349537376 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.546695038 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136556842 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.755236915 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854142149 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300197529 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196225658 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158851908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.371701274 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062685364 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397706254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.762752125 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13581877 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.839859619 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291467258 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138199536 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.838956549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39918134 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8707891 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.107271581 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154610397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.91635186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62565631 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.806800888 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061273109 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430539666 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778682568 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836137022 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.896643957 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.836853203 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96568643 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846173014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742953988 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.730707258 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.579828065 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330670094 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.842776264 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.821509944 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.563043954 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416293762 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866669588 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979867525 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842632178 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.556686434 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.130168503 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090442523 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413724879 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.841545019 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.839048773 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838282242 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766379802 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03193817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.220425311 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135269218 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.251928366 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.871910668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840760819 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.052685873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048215542 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.755356483 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970942836 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277996557 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873933176 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.576977664 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522364885 seconds)
  done (took 1665.422504205 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872358573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.857912924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.922869791 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.902103549 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940956016 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942261637 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.946235829 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.86162621 seconds)
  done (took 57.01829998 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.842292517 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.036052178 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.851056419 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.840767948 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.847275298 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.842688582 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.010058417 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.85167882 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.846802599 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.851252943 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.840361778 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.838536698 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.173027614 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.86119579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.836414635 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.846414188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.848702598 seconds)
  done (took 73.881415903 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.840433321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.046930955 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.878914114 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.855560021 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.789731772 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.854400802 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.870534537 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.895584903 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.843908477 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.048476403 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.47474369 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896006825 seconds)
  done (took 90.067011895 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.851315099 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.845469083 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.845335867 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.845850948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845267426 seconds)
  done (took 11.008562612 seconds)
done (took 2167.129049578 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.088681306 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.067730217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085300032 seconds)
  done (took 5.925150255 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.993710572 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.043040558 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.162721559 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.168057719 seconds)
  done (took 10.148640428 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.155706006 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.219548513 seconds)
  done (took 6.153603734 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.252960893 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.861545115 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.23862588 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.84821896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.849149588 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.845800102 seconds)
  done (took 22.324853824 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.853490317 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.85163357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.85281841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.854646058 seconds)
  done (took 9.189341641 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.832941371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.521336001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.83217594 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.845517531 seconds)
  done (took 20.808141142 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.598865664 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.2829321 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.592708289 seconds)
  done (took 9.251068373 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.359434456 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.746867619 seconds)
  done (took 8.884308809 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.112656686 seconds)
  done (took 3.891336864 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.879741545 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.123171875 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.372347448 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.370988301 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.47225329 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.698643688 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.16056475 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.091543522 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.257570511 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.285795021 seconds)
  done (took 24.490566334 seconds)
done (took 136.279036517 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.227155334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.216180561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.048070469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.194926834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.068589136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.046913918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.060221527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.178647686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.69314547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.69032809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.237636161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.083041447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.201474656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.214028661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.217992372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.085335852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.071307344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.246486784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.892873237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.131444048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.066477186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.823993376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.079207756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.836292837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.073680851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.003256659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.396731726 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.089009559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.041822601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.412272269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.002307077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.28401016 seconds)
  done (took 170.692662368 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.731221773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.850547879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.849970053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.848609688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.069218992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.850327606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.850133221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.848793699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.014549755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.002583384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880679817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.11376035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.868913655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.849024482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862511766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850147374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.143622368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.821909044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871033503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.873010419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877944513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.985419002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.87450522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.032094377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.150514162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.874324248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852121422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.875585529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85767293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.861674652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862558885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.853696275 seconds)
  done (took 206.792478092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851271065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.854434401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853836362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.85233537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.853010779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.855259947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854491219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853486594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.519031478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.510396473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.859201341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.858117468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.855310545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85113167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860510686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.853920134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.858452596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.858534676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.85447248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.860000411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.863089053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.551801419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.859078572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.563629453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.857225753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.860616645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.851220759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860857561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864525981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.864752665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.863829465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.852822168 seconds)
  done (took 219.935766681 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.054762062 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.859334379 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.862024809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.791242796 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.859937522 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.860484338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.806340882 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.060215386 seconds)
  done (took 18.956360703 seconds)
done (took 618.164242022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.314033002 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.152922728 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.041594052 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.882403917 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.10586431 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.908909701 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881565848 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.942572003 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.60024563 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.943240729 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.514382558 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.894167508 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.606721004 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.898703103 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.000673375 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933849647 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.414927628 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.504575836 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054675254 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.926996328 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.058005987 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.830600302 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.954630667 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.6256199 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.621663234 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.86879201 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.050724415 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.421111335 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.88841089 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.039988926 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.617076199 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.246231158 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.88597693 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.874428028 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.933668379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.91068836 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.206913725 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.886550188 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006761619 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638176271 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.924935507 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.48978251 seconds)
  done (took 102.289111567 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.849732401 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.851641178 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.850279612 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.851343911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.852759717 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.853089253 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.850236016 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.850480483 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.850012847 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.851731677 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.848349407 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.849346729 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.851000771 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.849701379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.849596442 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.848291246 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852393596 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.852323509 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.849912774 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.847971449 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.852295267 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.852289208 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.863358843 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.853368923 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.851245203 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.851072591 seconds)
  done (took 49.9310867 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.863152359 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.015401979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.114154483 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.878687392 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.863259791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.868322498 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.880242853 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.868105251 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.864858353 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.865223875 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.958096102 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.868994391 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.879644821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115398554 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.874990797 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.86343497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.863977476 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.863573734 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.021805719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.877190077 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.881423721 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.870300548 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.883537563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87795364 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.866067881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864791972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.870162255 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342269328 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.872590509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.958613118 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.90691184 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883427663 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.310674357 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.124738561 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.915350745 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.870659681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.866490292 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.960054514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.871230531 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.866102631 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.881949486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.868129486 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.112552214 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.347050038 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.875213891 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.864796326 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.351442418 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.967299079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.904176042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.877352212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.115431807 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.879984588 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.868930755 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.86620056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.902124183 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.874619341 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.867549546 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.227371624 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.874483629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.885003049 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.868451086 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.86594357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029985845 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.871474023 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016930108 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.873299945 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.873808219 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.864314645 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.116271585 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.880157945 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.360934292 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.873390464 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.86336093 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.952609144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.017375374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.373019991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.869511645 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024315432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.324501402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.880465997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.870397189 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.327408577 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.883589843 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.863031923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.866777398 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.864781874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.863874396 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.903794236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.87920467 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.27990347 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.360229138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220555055 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.886601593 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.871095336 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.861993506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.211470003 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.869000046 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.861720269 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.108290658 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.362949763 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.873670369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.865388252 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.336760448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.875112503 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.884080595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.869081326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.118220674 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.873122786 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.903225571 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.864454938 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.871838346 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.864011094 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.880866626 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.87123106 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.8646758 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.325099506 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.968112825 seconds)
  done (took 231.462011401 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.857276915 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.866300446 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.856660375 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.857339026 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.857338902 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.861949201 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.856515332 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.856814411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.859960854 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.855929237 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.854323367 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.85755971 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.859062403 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.864430914 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.895841364 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.862980505 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.509371917 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.856579686 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.855881798 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.855668107 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.502231455 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.863542658 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.854577407 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.854455459 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.857707819 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.860140659 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.860557786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.333975394 seconds)
  done (took 167.633646412 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.869464121 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.091448888 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.883154255 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.912208018 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.87658642 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.8637922 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.892292241 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.891376883 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.870598815 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.866212458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.866554974 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.933225829 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.883667096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.021961427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.902061486 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.90234883 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.972132817 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.877996083 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.870949627 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864109937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.896333108 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.865493212 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.932368437 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995121547 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.888664517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.985843137 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.874275982 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.873789539 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.866084478 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985782526 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.886525491 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.931935958 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.899771429 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.888040533 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.993230319 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989209005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.979687592 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.902889704 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.874007911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.869471353 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.870820032 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.857159359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.990060646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.890749175 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.872239207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.977137126 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.891693767 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.874330649 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.882183293 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.868762001 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.886406551 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.888336465 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.940226871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004634509 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.907602719 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.897212592 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.899254567 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.148171809 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.88505059 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973020064 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.865632615 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996385819 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.894617787 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.863541613 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.874817064 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.880307101 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.901736387 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.904720624 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.979940997 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.881201166 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.977602385 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.909144129 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.875384084 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.873824892 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.875219804 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993810106 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.992019844 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.908980697 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.907564518 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.904579588 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.867605897 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.87373162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.863057156 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.892607274 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.877327453 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.992801112 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.994519612 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.880985535 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.875536879 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.876742211 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.878418484 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.898530251 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.000018288 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.906040633 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971753786 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.940442803 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.946313443 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.886853299 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.885676716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.877942494 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.937463056 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.888296691 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.887380337 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.1986796 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.946279476 seconds)
  done (took 202.998080981 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.341763671 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.931340949 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.931175513 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.184101937 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.302704737 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.726988442 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.924579487 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.925771614 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.947700571 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.118700277 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.998858518 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.945224134 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.910874448 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.899956193 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.925908007 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.944066344 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.936648193 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.253918904 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.043187004 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.03583083 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.906379612 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.222949714 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.249969188 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.339576788 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.962610536 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.269038637 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.599429106 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.178926366 seconds)
  done (took 61.763657677 seconds)
done (took 817.861347628 seconds)
SAVING RESULT...
DONE!
