cset: moving following pidspec: 28416
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353413037 seconds)
loading group "string"... done (took 0.554197415 seconds)
loading group "linalg"... done (took 7.047124441 seconds)
loading group "parallel"... done (took 0.159244962 seconds)
loading group "find"... done (took 1.115473164 seconds)
loading group "tuple"... done (took 1.75304303 seconds)
loading group "dates"... done (took 1.251080932 seconds)
loading group "micro"... done (took 0.222311842 seconds)
loading group "io"... done (took 0.91577904 seconds)
loading group "scalar"... done (took 36.302607771 seconds)
loading group "sparse"... done (took 11.414565608 seconds)
loading group "broadcast"... done (took 0.92385143 seconds)
loading group "union"... done (took 11.924180102 seconds)
loading group "simd"... done (took 4.30439796 seconds)
loading group "random"... done (took 8.42446741 seconds)
loading group "problem"... done (took 1.881310986 seconds)
loading group "array"... done (took 19.528791562 seconds)
loading group "misc"... done (took 1.878337871 seconds)
loading group "sort"... done (took 3.194895494 seconds)
loading group "collection"... done (took 16.651993353 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480564377 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122417877 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11360151 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117099806 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.132108363 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113766332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121977005 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082888815 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.863118699 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144040617 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118315512 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412015592 seconds)
done (took 5.179652567 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17043489 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082411714 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082437292 seconds)
  done (took 1.341049026 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064974916 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120639682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06601034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066492643 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066764615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065701361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065646625 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065607912 seconds)
  done (took 1.694060177 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072130682 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068595405 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068492168 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067877665 seconds)
  done (took 1.455894851 seconds)
done (took 5.912551074 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761628537 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201403709 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181924752 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402517297 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127830654 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153641746 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637856475 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333007018 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183285044 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081227235 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104101457 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316853954 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106700346 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637292861 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075487231 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089953547 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137027013 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.411905098 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06699036 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081673895 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08828606 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128073949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085976613 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074315083 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144408624 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067862168 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130109888 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079442768 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065991093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20766834 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172651965 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665571365 seconds)
  done (took 10.219299921 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095305787 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097238988 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068525796 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136437118 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095882201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069381361 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07049062 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066916358 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086615113 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127656192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088256955 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101201968 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065056845 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068479022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083859677 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204861002 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081086026 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080912639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069808401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075230214 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115892449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078234214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077471192 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077456398 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128617981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179937429 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097417973 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097109963 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067126308 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080432433 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11496788 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125066286 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065620437 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066422815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124000979 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094005569 seconds)
  done (took 4.637213385 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.921783648 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140100911 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090314467 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130708657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064607051 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106745893 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065444247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080672536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202552503 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.282843221 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568900823 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111332345 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100478299 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06729643 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067868475 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06673756 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339606185 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105732632 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102618726 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080613987 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069642133 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068644339 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37136147 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067661294 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063671724 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067785216 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057564884 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122090506 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067487687 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92656711 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125602464 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066704681 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100853112 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168635428 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087557943 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141918508 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.198625059 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064876224 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149674136 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070215205 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066127253 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083594777 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10627388 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112486496 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065534936 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066148977 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162493637 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064401418 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078159412 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.998550776 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152973533 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09516786 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064650577 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246577395 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085733757 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069376221 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090009079 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065329434 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179347416 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134040359 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063956074 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067215508 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066011104 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067771307 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069067504 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363711051 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065678856 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.867503771 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068364467 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075643892 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069423651 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069141638 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07283084 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072335552 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064796545 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085134358 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063702351 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065797457 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074836785 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065515229 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06554208 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066669503 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084359985 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360413273 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066176375 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068073537 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064700101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085594516 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097227195 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066472537 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065018225 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100062917 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.175068365 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065913435 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106377352 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067278099 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084035113 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068783915 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116093541 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066843702 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.107534446 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065967764 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096003236 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070531593 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098722989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081198565 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067946209 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400159483 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065375049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064870863 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06848455 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065947906 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067666067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065960886 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078906808 seconds)
  done (took 21.05912716 seconds)
done (took 38.015819535 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270717248 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075763486 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07560146 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075662631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075191344 seconds)
  done (took 1.83946157 seconds)
done (took 3.087207704 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118939078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098210798 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064357994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095471092 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06410161 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100025161 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099252726 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080829286 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098923766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064102917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096030708 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063761393 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064167978 seconds)
  done (took 2.374679862 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082214177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083125164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069530954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081789839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06381225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08200867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080526586 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088169528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080201593 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071939016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063421871 seconds)
  done (took 2.088110658 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081498967 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083453604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069083921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081113938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063188651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080552223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080524771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084787461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080770477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072731373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063667053 seconds)
  done (took 2.079667792 seconds)
done (took 7.777990648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076856092 seconds)
  done (took 1.304132961 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59167397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.092918988 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081692985 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11240735 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184534268 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119947864 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2814702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087084994 seconds)
  done (took 8.963870629 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1005473 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069064088 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07181928 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07211791 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071154121 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068562745 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071849482 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06962884 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070516763 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069402754 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068618953 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06863342 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069469099 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071467662 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067796983 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070941481 seconds)
  done (took 2.451707788 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091320331 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090918128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073041341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074224831 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071898909 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072185511 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074551137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073185239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070560304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071983026 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074929018 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07360929 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072072928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06493701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074141302 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07567023 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070750137 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074449516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074932721 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074914638 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074121556 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064157337 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071309036 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073883803 seconds)
  done (took 3.114842918 seconds)
done (took 17.069852049 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113295629 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071658731 seconds)
  done (took 1.422248845 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08108477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082680139 seconds)
  done (took 1.407004497 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082127335 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065241819 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090755732 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077824187 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066515856 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066040426 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0884254 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066087406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066134084 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066503062 seconds)
  done (took 1.983093476 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06870288 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078227298 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069900792 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081441788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074371947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063874198 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072626929 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06742042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078297879 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062897392 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070969219 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082092439 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071018814 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084131425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072603691 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068534824 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07083002 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067536855 seconds)
  done (took 2.555674663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065916678 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066645316 seconds)
  done (took 1.3847473 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066676878 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06439027 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067050834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067510026 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063463399 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062777554 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063341271 seconds)
  done (took 1.703727423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384014533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110147168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292950878 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070666075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08164686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249402604 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065252917 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070248749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070246684 seconds)
  done (took 2.686952056 seconds)
done (took 14.394518625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078629679 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084534989 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094138281 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364227046 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091726851 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065623424 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113684433 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189347406 seconds)
done (took 2.345300151 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213341679 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613658377 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.382192862 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194779083 seconds)
  done (took 2.44729055 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324455983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08648354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059084447 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066892002 seconds)
  done (took 1.798529527 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066014675 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068047475 seconds)
  done (took 1.393900744 seconds)
done (took 7.114634793 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066157457 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084091892 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066290189 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065048398 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064233161 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065543599 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063169368 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063317599 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065938526 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065633822 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068572495 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065570351 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065705668 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065728496 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063252946 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063156109 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065529715 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063545968 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063597557 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066132604 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063318154 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065757701 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063142733 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063155897 seconds)
  done (took 2.869790862 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083207771 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066082213 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071322371 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071132973 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070296316 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070689662 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071028991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066088545 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0713932 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068201042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069322161 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069883081 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067709736 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070133407 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067853829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070012924 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070817461 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066582673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067974162 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070086566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070912121 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066141699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069786742 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070826236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069325079 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069578578 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067955373 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066476 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071096507 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069565474 seconds)
  done (took 3.359123221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069642726 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062698909 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063815231 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070297478 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063324471 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06467558 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063091455 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063655437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064291784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063169326 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064448275 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06320771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063596716 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064648428 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064033915 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067072088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079017688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063618174 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063838739 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06392793 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066795076 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063485375 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063355004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063556625 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063219248 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063179647 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064325246 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063187894 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064040953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063016255 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066397049 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066684649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063485043 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069952914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066889014 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062882131 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067389759 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062933202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063475681 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062706771 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063136654 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06338828 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.176381114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070068982 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06322486 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064890881 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063038678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064627687 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063426039 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065715116 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063075616 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063172356 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065265651 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064110713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066782626 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062551932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063979392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062702151 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064115297 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063179493 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062437929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062544514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065347204 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06325611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077592355 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069547837 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063285038 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06494774 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063840397 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065190828 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064922979 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075823434 seconds)
  done (took 6.063013471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086964536 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087744285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065251416 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065394692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061710052 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063695295 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067267613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063675217 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06491606 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069946292 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063784749 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064742481 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137834 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076138056 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063863871 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065075386 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069824311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061818389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063569012 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067049244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063925224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067227566 seconds)
  done (took 2.772693776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154666416 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070440621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104837481 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072278028 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067606697 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073007981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069766948 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069736703 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070069423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067817006 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068348179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069737073 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067406576 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067521578 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068064583 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067733841 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069470335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067893585 seconds)
  done (took 2.641893056 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076620736 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065709352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085692295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065405798 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066139074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068087302 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070314331 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0739056 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068007882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065466775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074082805 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067891361 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068430216 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065694496 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068077198 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065909971 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068194883 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065591498 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073835886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070568929 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07024604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073722282 seconds)
  done (took 2.813781836 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079744155 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068707685 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081873287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067786688 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062076883 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06408334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069969211 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065718611 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070067509 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067638724 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065635059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064149224 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069112493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065822747 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069073316 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065386674 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067503577 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065857573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067166055 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061555471 seconds)
  done (took 2.639641033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086173311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067061088 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067435581 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075280469 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067116065 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067001971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075220174 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067179918 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066935318 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08703363 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066973971 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066902842 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074939559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072031725 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06704992 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074781369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074664092 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074972521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067212625 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06708003 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08728926 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067207707 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075316853 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067094937 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067102601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066899915 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067102218 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072212552 seconds)
  done (took 3.286841466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065842871 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065539712 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06357881 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063427857 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063230913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063535534 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063308359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063383412 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065580055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063292608 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065434981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066224913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065851992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065602451 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065571079 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065448935 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065638706 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06335397 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063400872 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063510536 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065337971 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065422352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065632145 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063296983 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063400874 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065533516 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063383061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063370907 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065315666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063607408 seconds)
  done (took 3.221899695 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075437739 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072658162 seconds)
  done (took 1.436035288 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063206034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080094103 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063069337 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069853301 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069676227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066506624 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073244541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069805418 seconds)
  done (took 1.839318945 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080291268 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076993724 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066932005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080600924 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076541915 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082931622 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131739328 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067041677 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072801092 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064634857 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079378825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065129236 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072278162 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066782378 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071548712 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072078428 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06350728 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071856186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06852975 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064571349 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066914105 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074541501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068094688 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061331057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067001477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087378041 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077029091 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065769991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068778083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073391159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071398295 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060187077 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065683838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066424462 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064052608 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07528047 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081542334 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069187958 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074879291 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067186627 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076904172 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061241557 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070970994 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072889564 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075954043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066351835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066684193 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061555916 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063593614 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068474324 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061138556 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066364278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060677092 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075158813 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069395673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076502745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064502844 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067587178 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06852731 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068989802 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071985816 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067745895 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068473989 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065630637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072333384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070074334 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07464078 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061075162 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060142217 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064007839 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075462907 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088043464 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072134396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066739172 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066711664 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063897901 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069861131 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066966763 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072167926 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072275135 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066232394 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072005193 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07331058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066306957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068234863 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074123465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064423778 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069001252 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063773566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081980992 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064494196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064218089 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063748793 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076134263 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069227846 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066248259 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064112938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072846656 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059928976 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065881016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06650526 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06659387 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075947898 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070529452 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070652119 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07399345 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072747341 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065867028 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068494105 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062608206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066955018 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065196719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072279423 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059387097 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068725415 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066299713 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066026799 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199630897 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065409312 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066771937 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074048219 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072311529 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0651214 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063583232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069637658 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066469499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069392845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074857868 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065160003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060950755 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062345134 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069758193 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06640403 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070296429 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071375581 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069665451 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060888 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065157326 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071515364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075173486 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066698296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067982586 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072468451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068295043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066060903 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072778642 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071286102 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065490299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072381626 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067713556 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061475458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069589341 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069232297 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064839899 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070022136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070273222 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068486467 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067158268 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065067612 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073986881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067410548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065134096 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065980089 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065173567 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077058073 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068482285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061853622 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063811378 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076664773 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064284576 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066097429 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064736906 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069016687 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066795374 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064193355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066749958 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068803274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076997276 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07000687 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067207677 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070906147 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077522256 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066226603 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068434296 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065548874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067014063 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067056279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074513261 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070904867 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070458534 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068356648 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062803181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071616178 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073390314 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065137606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064261233 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065072681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070390995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071943915 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070537892 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066899233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064466701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066879545 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069243541 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068829596 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065791287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065197795 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072638788 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064216364 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073074539 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067092631 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075893535 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069302475 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06121723 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0691967 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064262496 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072030098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061351774 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063861238 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065295772 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06708328 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065221411 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068278956 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060020916 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072693362 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072870426 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066026011 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065001745 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065392918 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072073982 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067083293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069203168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068787115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071860156 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075627932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064587901 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068676678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075649772 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065124619 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189033185 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072358565 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065416769 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065362117 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065490307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064535908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069858733 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074899361 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07304655 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060355974 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069249796 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065174857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06593775 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061900542 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071150345 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069638158 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067230563 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073557283 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067594026 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066776282 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070724973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066283826 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06767884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068394343 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069812242 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067741311 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068092492 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06571918 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069641984 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066227498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064423266 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068124281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06672174 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067384848 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072045877 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065924115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066951894 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06868572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0672463 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06738558 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066779205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065823641 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069325035 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067878975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067612067 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068908827 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061793774 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074072613 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066202059 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074332883 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066753035 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062601224 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073692896 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068473324 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072834737 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067207142 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067530318 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067648399 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066252313 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069461548 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073524902 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063964956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07732495 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074470027 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066945402 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069603615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066670965 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068625851 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065648419 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067395719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066932819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066332874 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066425959 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070870552 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06873669 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066189105 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067417114 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066651311 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066293184 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066668335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060482725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065119681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065242327 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066361692 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075384657 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066507558 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065802003 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065041594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067361276 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065180261 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063095415 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074325883 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075438323 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06662153 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073440486 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0652676 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067680481 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07651554 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060253243 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06484021 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064013697 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064109447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073452166 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066466608 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075384178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066238704 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065146953 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06331524 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066816779 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064454966 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060227989 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063338893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069435951 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064947623 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064458478 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065780273 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06785856 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066514434 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074876957 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064818833 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065913439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065302178 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062193149 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064390799 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065077307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20083045 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067992517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064581521 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063991385 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065865745 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067645474 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067553187 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066831642 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067958839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076969739 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066079056 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069251897 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069886576 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062180204 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069675744 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06701456 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066293945 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065803876 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070689999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069828247 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068273328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075787116 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066175559 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067645343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067911948 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064803967 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066348978 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066898954 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066566154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065646542 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067204551 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074603239 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063778473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069768363 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066643812 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066809864 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073214854 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067585397 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069329793 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073997368 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066508626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068293578 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073900857 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070450288 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070056247 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067688716 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067948485 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071939898 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065486263 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07301631 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067018617 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067285286 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068102748 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064363182 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06598705 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065946052 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06580534 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073084641 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066740026 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065588684 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065521944 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064314422 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067057799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06982643 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074068644 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069612643 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069416595 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061897457 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063385909 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067197072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064789702 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068191994 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068334826 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072274682 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068510445 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066698963 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064774005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074715628 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071471069 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069925707 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063999444 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069794355 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066900882 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068077353 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067400827 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066595066 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067368941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069813422 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067456486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065510957 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072890974 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070057133 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066951228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067567447 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067234656 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066297927 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061567103 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066968167 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068146046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071435983 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068264284 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06624734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077406428 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064863205 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067067458 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069665794 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066145172 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070592783 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061134313 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06756956 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066753926 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066655774 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061328397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065362867 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063973992 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067910264 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064930817 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061013842 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076229274 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074639378 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06854672 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064371826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064154532 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060452223 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060366923 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196927955 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068248958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06847676 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076663856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065544105 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065575624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061335531 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066664741 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069115482 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069153571 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06409286 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061952093 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065247137 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069334676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07236495 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06550581 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065991967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070386145 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068432902 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06432005 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069425053 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063857767 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070428593 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079111738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067024494 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067382204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073043028 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074226062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067688103 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062199127 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067085536 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068781391 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067227964 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067730865 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068463797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081094704 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069176971 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066097225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065973149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069576074 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065693999 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074572171 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067446553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067406553 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071243043 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069276532 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076017322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069296974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074070291 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06904969 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069433862 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065546767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066664369 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064722704 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065274403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067357748 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067735314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072229093 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074429362 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065814766 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077052798 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075943946 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068147579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063602188 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065598198 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066134332 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062311335 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067093207 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064240182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06466826 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064867362 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064969666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067091054 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071612799 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06730426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066544766 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066104071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060318994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06867977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067989525 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066745302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063066747 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06606334 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06671292 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070226872 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06931385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063623608 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068294427 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067916641 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066894621 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061701003 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072933298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065187225 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068014818 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065180191 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066529002 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067257089 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06972983 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0711496 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067193384 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068266751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069853177 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068259589 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063206164 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063553522 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071610009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064232299 seconds)
  done (took 42.512822686 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100242419 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063536573 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062017241 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061708821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073774096 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062812148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061845831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06286063 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063171386 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065137595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062143453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06196286 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070680908 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077273891 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073880885 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066512266 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061607768 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063185061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06172805 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062875894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071004337 seconds)
  done (took 2.782034298 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073804897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070149309 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073629697 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075994571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067555662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070437298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072593968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070388848 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075721479 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066641913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075930816 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070370819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066778212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066930387 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06698803 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070881979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075581937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067643661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070371373 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081742909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071122985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072512959 seconds)
  done (took 2.923962367 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066565302 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065048226 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067663549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061112073 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065305537 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06077257 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069237457 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063961786 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068844671 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06470815 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065349785 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065048591 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067180577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061432509 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065740424 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064092492 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108133405 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068713714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065797593 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066619464 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061573332 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067764448 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061520431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061560714 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064723207 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069095315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066070414 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063640137 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065249517 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065381369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06543669 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063300528 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06705938 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066221389 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064678418 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064520665 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065301888 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065310288 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061170995 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064339984 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06596232 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061583438 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06582238 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067080406 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063672516 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063453526 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066983953 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065140844 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060848761 seconds)
  done (took 4.578599531 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079384645 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108585296 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067243349 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088194602 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080290185 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075297617 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06882719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088804627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062991275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064324194 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081243104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080012841 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065777507 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070245345 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068922109 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065608878 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066650873 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064631605 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069737653 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065474924 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069884749 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071672512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079906073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078805751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069616395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064408416 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064634882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070054431 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078471442 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070109447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070391786 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071225916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080561827 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071199252 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064930397 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067932577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081471211 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06613703 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06792212 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063674305 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067665424 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069633966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072226027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081700101 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066134274 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070837851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06561995 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06315041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078388791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068086619 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073411037 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080023189 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069405129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065727506 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069754921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079919169 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065063149 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064070176 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068430216 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07759425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062983463 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069207499 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079113838 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066770375 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072213229 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079526867 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070784323 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069420851 seconds)
  done (took 6.378704496 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07500242 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073064928 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081298592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080846905 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07233445 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072279865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072251981 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072251217 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072063119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07738304 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072510157 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093009227 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067620555 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074853976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07258008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072498122 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073130785 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072290477 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071948343 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072416597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072850687 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080163149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072609684 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080469387 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098096515 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067707442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071980554 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072274254 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080401455 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072216884 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079611581 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072261258 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072149831 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080189302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079793725 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07231838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064720936 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071736288 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071959624 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072024246 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067391545 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07992631 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071753673 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067546226 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072042411 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07230224 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080226317 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079344962 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074757574 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077385645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072124523 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080520084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071308738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072130005 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080205676 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105422609 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079728983 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080026936 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072001804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079641476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079498514 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086332535 seconds)
  done (took 6.071083643 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08259872 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075665886 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07581728 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061230639 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064313921 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069464026 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064128817 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064091008 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074618721 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074682124 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076968038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070148329 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072788639 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076864559 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069972359 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073171089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069667877 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069622328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0741869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070502121 seconds)
  done (took 2.80986837 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074090784 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082602392 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067100892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07245845 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068512983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071712798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068151141 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068615821 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067205932 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06906959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076064714 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07594651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066841993 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072189867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075602651 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071592321 seconds)
  done (took 2.519501783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075634939 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072518759 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079312469 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066543603 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063787555 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062423971 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065989352 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061321209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062422588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077676958 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065860526 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068252111 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065537804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06477484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063010273 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068555113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062737951 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063330221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065753507 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078156472 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076382362 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064149791 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066471543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065609926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065742657 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070814816 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065047069 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063314877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063351585 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065929075 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066487266 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069291295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063031628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063797731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064346722 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063728082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065252415 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066578425 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068374683 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065348137 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063643446 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065412117 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065486665 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066660468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061997882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066053073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062474854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067434745 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063420272 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065936307 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065399798 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067674332 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065889842 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07231508 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068336558 seconds)
  done (took 5.037904358 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079467827 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068850349 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061237747 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064169316 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068679431 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06696984 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069298839 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067121754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067342431 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064044151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06763014 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068229693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067715255 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069012321 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067773381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069192036 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061386068 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067329786 seconds)
  done (took 2.600106616 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070566627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066003131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072600289 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065575004 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065784876 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067823116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061899031 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064461657 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064415613 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065711875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065368129 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06779318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06443692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067641988 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065503119 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065600112 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067700363 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064290802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066035973 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061947245 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068030797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064469725 seconds)
  done (took 2.831147039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071306069 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091229391 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138130991 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083253672 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080846449 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078504502 seconds)
  done (took 1.923111062 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090136878 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078564064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066420185 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087551468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073373765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067384924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067382742 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067305721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076434114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076362558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067289587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075960526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076279333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075650506 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073035872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07266074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067015954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067071551 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066203558 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083741095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067357484 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075813308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067588587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067390754 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075154152 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075692581 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075991543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06700151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075807394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073031535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067185849 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075846117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07596391 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068997014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075869295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067379909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084373926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072891654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075073597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068604485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073050715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075865516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072147997 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076069326 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067602069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072473343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067439463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067518087 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086150872 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07342424 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075544104 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073110764 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076360001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076098037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086142058 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07651002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075505667 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0734306 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078742285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075504024 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073708519 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075267261 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076053486 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073170734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075282925 seconds)
  done (took 6.245381523 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081683458 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086148627 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067709606 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076011148 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075873698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067425306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067356926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069129721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067708711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06766344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107872458 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067950506 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075578922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075778602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067844652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067539837 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06784233 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075586303 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06707707 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086397204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06766304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07589989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075808821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075221154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076580472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073451208 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06742677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067412382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06760995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067724702 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072948374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067765197 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075551868 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0671008 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075563576 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067487183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067170902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072291246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067884431 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073184544 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075709575 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083657776 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067560022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067030495 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076056495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067562212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067347771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0672824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06761857 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066597135 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075764907 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075765853 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075867632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075136004 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067629982 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067496667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067891538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067448165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067592568 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07330144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075416581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067349339 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085782858 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06727034 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067303497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075504437 seconds)
  done (took 6.160003725 seconds)
done (took 129.576023747 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18417545 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168201167 seconds)
  done (took 1.72322839 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068785894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097712948 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076939481 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128799368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066267879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100448125 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099254288 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077920803 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066141535 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066086226 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066432334 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068448171 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131042419 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066143382 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065950468 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069848005 seconds)
  done (took 2.699669045 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09647735 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157691225 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099157377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065218693 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097587349 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072641876 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064542835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074574068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07053378 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064976177 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073368158 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070530445 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064917038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070344096 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070844741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072714328 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064580798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072461483 seconds)
  done (took 2.809276393 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100547937 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090446209 seconds)
  done (took 1.581232208 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155558999 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10545359 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149986655 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345714591 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166932678 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229090578 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128693854 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127506751 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116699595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123263606 seconds)
  done (took 3.035546037 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098142274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15185268 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255507491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115055932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072328995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095007491 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1161309 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077557812 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081625952 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0803713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080528034 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076114629 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098608363 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073609528 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07340211 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076432284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102380379 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072270873 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074123939 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076681712 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098740428 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065537385 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07361821 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072505462 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077231272 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077394886 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065581234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065313375 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07661766 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073934984 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0768829 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093826511 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077754347 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107484726 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070631775 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108014551 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076658619 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074083805 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074060414 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074025348 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078795232 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078628877 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072027611 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076050424 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064825174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076111835 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06548993 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065673239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078117921 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067065824 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078212674 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076893983 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106894327 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066875533 seconds)
  done (took 5.99319289 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102318173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106140913 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071681228 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109137313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097448981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071226311 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101087286 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091307196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102939211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093027251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088977034 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070698474 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082230889 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08402361 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110142505 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103016914 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095611858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070735342 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102197249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102941236 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068880575 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094830766 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091447242 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101897282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067646727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070823251 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068273482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070587191 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077154653 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078553066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07005506 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102064614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084389454 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078307835 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067087188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067990192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068719593 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079025991 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09790262 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078726024 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077601637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067918955 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067796468 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069674709 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09120066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067606013 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079504922 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08035018 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078869678 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069540344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070391789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068147746 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069772181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080699827 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077791947 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080703976 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08031272 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068223503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068455283 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071480515 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080806729 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079024149 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080137364 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093092572 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079249127 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067801836 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080395031 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084997637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06835244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069953733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068600984 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070142434 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070036973 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078250571 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078272332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070308016 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069386784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068242148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079974357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078342549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068480809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077031057 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067076819 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068523272 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069959972 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069948279 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078274453 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079957144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070046217 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067747561 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06935455 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068134434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066520221 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076486044 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079269223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078379339 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078388041 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069107601 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078113057 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077613648 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068871837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078202475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196982914 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0715464 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070318479 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079545001 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079983916 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079800364 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070403268 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068663812 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078564919 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081768262 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068682672 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07876119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081196124 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079798144 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068956144 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08190029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06845192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08011988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069983193 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080325229 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069653133 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080060349 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06950441 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068391233 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069187633 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080382261 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070542948 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069096122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069505513 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070593569 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080012278 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083097749 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07137105 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081776062 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079256472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071431547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079895643 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069441951 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08059853 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070786898 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070509734 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067083988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082533438 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068821949 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068838387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069993673 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081096017 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068258577 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080158907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078672173 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068273331 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081219817 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080154743 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077022485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080568198 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070976775 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069410647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068479074 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069926086 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079558614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081101785 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071376755 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068884692 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077839752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07931507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067431167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078467411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078136407 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078745133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068825172 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070199023 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080651319 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080911683 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078696647 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078446086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078877815 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068412055 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077135062 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078381063 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068053771 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084938838 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068193599 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082386697 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07917365 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076753656 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078520702 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080470359 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080341879 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080022117 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082703802 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068380707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068227883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079684864 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067798431 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06913067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077493868 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069633806 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069841211 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083284926 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068227802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078877176 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067062475 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077623065 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066738926 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068957867 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214579773 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069205277 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070557834 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080067875 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070224189 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078716233 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081579869 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079198149 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068302752 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070257274 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081349212 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080377062 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068912285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067932097 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07066689 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079402214 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078712393 seconds)
  done (took 18.857490628 seconds)
done (took 38.0939198 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209025982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150622559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179738627 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119765106 seconds)
  done (took 2.144286762 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122568528 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100119158 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095115205 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071298389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101587066 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064635837 seconds)
  done (took 1.979174836 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311702111 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211247409 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182566274 seconds)
  done (took 2.124114731 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199559291 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187149503 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393804228 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252394096 seconds)
  done (took 2.563141684 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143696919 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089488348 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067079514 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082931828 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135030004 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161173658 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101345794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126366921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077457356 seconds)
  done (took 2.458791 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147036097 seconds)
done (took 12.838862353 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.20800986 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196030311 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090603162 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176299879 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087203704 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 0.126346193 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.165657503 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071159165 seconds)
    (9/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108613983 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174604332 seconds)
    (11/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073810039 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098082917 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.217333745 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07673784 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081705165 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.168409869 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073234987 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073161592 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193892245 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.193305758 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070034754 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15137575 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076592426 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073307156 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075009981 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136833344 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073335216 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07769698 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137204872 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097752623 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07924845 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.172533386 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075831987 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076499497 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091572792 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157085854 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135642402 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16943866 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089167252 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094750411 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142993448 seconds)
    (42/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105734898 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145100543 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068185687 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071434397 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097286231 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068263739 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106066949 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064657077 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10899395 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178821769 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067496451 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 0.148207329 seconds)
    (54/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062198576 seconds)
    (55/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200162909 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072034584 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090523828 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071900409 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071711275 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141153566 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142298301 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169011745 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052230525 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.17505607 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091501325 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184601448 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076453493 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066686785 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093631419 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141145932 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06732023 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061746396 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064407295 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072387026 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089882884 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073773434 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08181445 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177844347 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.1382668 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074999076 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066702607 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.065580627 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074089759 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.297395171 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.134238499 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095407591 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088040069 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090863583 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170297416 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061956697 seconds)
    (91/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070147196 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.175121431 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097885031 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069203196 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066941831 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099745401 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05094587 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113837253 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099148607 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067064279 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089750139 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193386749 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 0.126066188 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073166394 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051499367 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187981579 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091153041 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08062833 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.306311234 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064334421 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053131153 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065486899 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138460793 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065632039 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066187646 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07105555 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174025566 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051075123 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107712466 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107206073 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051641946 seconds)
    (122/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051476198 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095785043 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139047186 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119115544 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071527593 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076318771 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071981554 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.133854904 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073381403 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106774608 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071396765 seconds)
    (133/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097984102 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109946354 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06424795 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149265097 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194144256 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081762311 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070336096 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060371987 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064770361 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071054315 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089223845 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065387407 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067403184 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063930912 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052109267 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.172378408 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.133335723 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072203542 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079141616 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066013709 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072588167 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135523262 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073978286 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064760935 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072183059 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075322379 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051840376 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.145477402 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064600512 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050874359 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072934586 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071593796 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051574051 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051254463 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075189033 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149406854 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06967054 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075817266 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052024659 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066930388 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051617803 seconds)
    (174/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063126365 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110928133 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051119712 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050834253 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066888666 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06460496 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146880369 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050611018 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071834891 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125425401 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076474492 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064815722 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065895151 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080236224 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064546102 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071191168 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050910172 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051163144 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072185936 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105596968 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064956057 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068465838 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220443747 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074029464 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052071902 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186837647 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100247146 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05273948 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052638756 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072912891 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184662105 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052350481 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051513588 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087506117 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150263634 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194993753 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051163677 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066581549 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136743178 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065601418 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065112402 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063034957 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11050706 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07400183 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070226592 seconds)
    (219/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081083351 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074202242 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07206446 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067243039 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094820433 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051549571 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065860583 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066924139 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093796341 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070693087 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051220555 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086670203 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174285544 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052299663 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087210476 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064531682 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062011935 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150924583 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061459488 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077125396 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052683664 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135145231 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065413271 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072229561 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089153881 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051495236 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120747591 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065300125 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069096925 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126339204 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071607033 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053537637 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051673758 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087510502 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071520864 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050968174 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051253609 seconds)
    (256/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052305328 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086834174 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051149651 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066553334 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052550386 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064648292 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0624743 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088681773 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075912272 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065405108 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099322276 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072034992 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06509341 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051384489 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052980813 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066695856 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065072038 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072854863 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087331373 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070690051 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052549478 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053839579 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06585046 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066901842 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110922545 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067928963 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071099193 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051708439 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050767279 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118037128 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170977751 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061856846 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088390311 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085241831 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130581967 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064976206 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06520013 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072144258 seconds)
    (294/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087299052 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06397577 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063777754 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072870865 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173112155 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072836934 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0721667 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052634849 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07004832 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166644176 seconds)
    (304/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052132553 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07058145 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064915315 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071074605 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085299249 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07053753 seconds)
  done (took 30.447970132 seconds)
done (took 31.882705099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084496695 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092610889 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073958538 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091725032 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08057036 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076067828 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072092536 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077710842 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079327441 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080807449 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077882733 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054359435 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073445106 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073184683 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073729975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090835299 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077383898 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072267346 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073693014 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064361104 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072312379 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065243095 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066550966 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054295277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07678521 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071208684 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072154179 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073420811 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065241132 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065410286 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068283544 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072649314 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065208075 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077400039 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071363805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072324052 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07423062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075244959 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06691749 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065359354 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073617108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065457202 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072028829 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072804205 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071403581 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070194417 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072253515 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077482069 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090768051 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068197794 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073895558 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075079033 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075694416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071802302 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068738983 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072654798 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070109817 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090568848 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073110218 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067637291 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073263117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073612748 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070322212 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072295501 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072426663 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074414467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074705922 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070743871 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074162429 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070031024 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064661559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072097395 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067893545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065308032 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074946152 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076214066 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063804189 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070653614 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071608328 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070940424 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064346753 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067409138 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066747434 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070515077 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067003314 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054099961 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068867276 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071216147 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064089055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073267769 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070747458 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071590209 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06691503 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074688402 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064469643 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069971365 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065202171 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065411447 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067078887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068631461 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064903326 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067163957 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073509457 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066208667 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070859648 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078336741 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064730947 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071126421 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063698533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064317783 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079161682 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074100254 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064711878 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067020946 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063789884 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071402542 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064167438 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064751617 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064740711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065174843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070340271 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065313264 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066779641 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071607044 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077248075 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064409712 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067712807 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066584684 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064150471 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069291911 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064058388 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064136823 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20102012 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061803578 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068029884 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066048923 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072533741 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067745323 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073450942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066911095 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07390426 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069599668 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071208381 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070677053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064365931 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058792442 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067998242 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067639475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067707582 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065421337 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067009363 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065452874 seconds)
done (took 12.389967471 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066617327 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143019332 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098689669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094666612 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085717564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066173901 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075404212 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101292334 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067294091 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102176335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086518399 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084667057 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111644576 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064517265 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065565021 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068975058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066818868 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081148574 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100860074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086006745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115525197 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065093666 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094639667 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089985245 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086760985 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101135059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066575803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069777237 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069350401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090976342 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085680516 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06931499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066405693 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099996466 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092179247 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083003019 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066466698 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082038363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066121888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065597104 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067384179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097785801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079692035 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080293787 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069326645 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069002459 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066750243 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083008556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088449903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078133689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08611595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102126524 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068200096 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065360582 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064009595 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085165236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064947702 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067844837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065854912 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067687333 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065511025 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068707508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081150727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081753714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069410407 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079665789 seconds)
  done (took 6.787268963 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083360255 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088982229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083079013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083742707 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065715339 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066251448 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066314924 seconds)
  done (took 2.049277629 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066889105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08755262 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088559448 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088126558 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083498824 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087044571 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075391906 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066182002 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079919763 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067411251 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087140661 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101277934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06704754 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072547083 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090272054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065858496 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08977205 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06620144 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068990396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089422168 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068196914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081861611 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069520835 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066585142 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080036488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06657336 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111648266 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07034752 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0674782 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068921979 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064253547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106716164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080015544 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075306427 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066173038 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080852513 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080399975 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064581601 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082646864 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071193895 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079515851 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066545902 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067317142 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064084528 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070301695 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076324888 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06679658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06670032 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068385027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08587295 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066866784 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079215338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069089439 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068992252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06753474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070153853 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075619744 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066801709 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085319037 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067474828 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082471915 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082005243 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079654477 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082171698 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068461406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079280799 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079389543 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069225577 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068052758 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069433949 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081935979 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064933008 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067513063 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076556304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067834595 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088800908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089112426 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067913387 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07540964 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067093998 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066518232 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066637773 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089191843 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069006867 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066494753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070681191 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069681115 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064643722 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065312755 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069696225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064560786 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068018209 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069116042 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069332289 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069480422 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082611146 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068995335 seconds)
  done (took 8.74218811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069387726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068150018 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069180452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068038808 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068209631 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067990589 seconds)
  done (took 1.945844964 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093880259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069801461 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080929315 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072199972 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104078301 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086260345 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087908633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078684895 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083890489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078816363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08699655 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08801842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092593604 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072724391 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086537118 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071560174 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086820688 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075795475 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07797609 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073168622 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086545372 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072628265 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072958783 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081592364 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075665175 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072467914 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06724697 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078685771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078489459 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078834166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07259539 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075888711 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070268601 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078604181 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086890816 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070929458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072340745 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076794156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072488399 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075740064 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087843254 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072891619 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074535657 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077401815 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078863575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070152275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076909607 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075951195 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085963486 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0768875 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076931684 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071194209 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075418215 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076417674 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070045895 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077865764 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076347637 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086093982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072336024 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070226684 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068219176 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074746508 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077505248 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074967195 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078521483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076611648 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069904533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071947344 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072330093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071246998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076292233 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068413437 seconds)
  done (took 7.08985635 seconds)
done (took 28.116418063 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548146121 seconds)
  done (took 2.049828396 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59676568 seconds)
  done (took 2.121213839 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.606821512 seconds)
  done (took 8.127167504 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401281785 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483270125 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691133994 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132485615 seconds)
  done (took 3.276510037 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.669384314 seconds)
  done (took 2.201468927 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211341532 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196048465 seconds)
  done (took 1.951555714 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376897345 seconds)
  done (took 1.902311794 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108458052 seconds)
  done (took 2.633482354 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261857566 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163836561 seconds)
  done (took 1.954148556 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46166508 seconds)
  done (took 1.987885656 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.862191046 seconds)
  done (took 6.389728882 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20716464 seconds)
  done (took 1.781436049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240448279 seconds)
  done (took 1.771887104 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.69074833 seconds)
  done (took 3.22272756 seconds)
done (took 42.901938011 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079800482 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080446776 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080511321 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077613657 seconds)
  done (took 1.837572536 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076260058 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071635455 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076299295 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071574567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075593338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0721565 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074175642 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076088978 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071675419 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072250501 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071769429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072230477 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074420509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073528526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07034546 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074072831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075250984 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071831678 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074923975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071840613 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070616255 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074217844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074565095 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071551804 seconds)
  done (took 3.294918012 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077618795 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071862606 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073985634 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071258129 seconds)
  done (took 1.832232409 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077080419 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091466931 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088756504 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077308484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091407984 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085789139 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06868525 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068329776 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072487953 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076432936 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067904093 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095248193 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087061563 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076346166 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078281644 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065628865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067538334 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086121444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076696886 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07701891 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069699886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076376763 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067135527 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087375775 seconds)
  done (took 3.41151093 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076535798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10226605 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077591485 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087236244 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089594388 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064947116 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074103711 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088068768 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12221839 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064923954 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069233988 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065073985 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071701645 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064747578 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075524089 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103997293 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107935629 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067956834 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094609409 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065068681 seconds)
  done (took 3.175840554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072473687 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069506988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065423357 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067819909 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076921977 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072499313 seconds)
  done (took 1.970324048 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067284973 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066668703 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06723241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066585974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071418395 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066965006 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065438331 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067007704 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066341446 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066316724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06616129 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065306622 seconds)
  done (took 2.343792321 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421940666 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068412894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068286667 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065463681 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070498053 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065911672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079187434 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067332564 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089535744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06598795 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065948471 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067921882 seconds)
  done (took 2.739971235 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205149279 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076061838 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23638646 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136057523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110767912 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114694586 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103507845 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112295862 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14322759 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101410335 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1677154 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165283289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106489873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136182973 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088425867 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097190889 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155096759 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161260357 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103090484 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164832533 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143348114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12350393 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145982836 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100483752 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105856373 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120994571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070378043 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079399684 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169960102 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130929078 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145495787 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110335769 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093238171 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176000333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169706782 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141757197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133030199 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08302266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101357895 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132485143 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19811871 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087902065 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1632749 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245596256 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080936516 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134733982 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12104106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119818428 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107269285 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089599409 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145813355 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181807614 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13822646 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086812623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112266529 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115302118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115866755 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103385277 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181277495 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161065767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127039522 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070343823 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098345366 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152307044 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131229315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109222768 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125887335 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093118553 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132473816 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152981043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117304263 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142417734 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127451897 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087895036 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118685917 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138912457 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128315123 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169050604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12387331 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07211358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124066723 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102567322 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081050061 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140921137 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074896295 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173691853 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097673111 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10558441 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111870729 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108096985 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107885412 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161342765 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143277644 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244198711 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065500399 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103277405 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119013032 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147410262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086514882 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108099592 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115855502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077734144 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138329309 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074572271 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122407034 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074768822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124198606 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131332892 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074909789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121944688 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099793373 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099835493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131828394 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159478562 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088196927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081613058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165265847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121452003 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104373915 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142370387 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155144411 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097774108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101755607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148236246 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178656535 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088395483 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162559594 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106313209 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082883734 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08687802 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123209789 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111550582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121336602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081834696 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118018953 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167303402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074167777 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095008377 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132630538 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078039642 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080040362 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102515968 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099606649 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094065058 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099216553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103771737 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136656456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12290407 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104811676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269093734 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097289988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169611023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08844391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100673652 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103460559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069309119 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136379432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155462114 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078659485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163267387 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123337366 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104503039 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118639938 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082182006 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138725999 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078405629 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06992647 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143834959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110145083 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109971631 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150394843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103807364 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12675338 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118845967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133915335 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131617115 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128473859 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104394992 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087234782 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110821865 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125312427 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072625986 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090587713 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079599501 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103332705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09497047 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082309594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141608675 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124539717 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099904435 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111073096 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095898514 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146527304 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075729686 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128412409 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118336184 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093505541 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150656798 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151361774 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130439117 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098156377 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145263936 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06966365 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073142644 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088785387 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266870243 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082874298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082643519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116722799 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14531187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12925693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136930356 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111396531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120965269 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156190548 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068568048 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114070221 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146658819 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120047865 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103639499 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089360648 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098271876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141688167 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106663782 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180202888 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113091831 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125342054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152510946 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099188947 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079122884 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106848337 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135039451 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104054403 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143484548 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098969654 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087020968 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108855526 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073427362 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099602956 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126237933 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118885981 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13507962 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11389554 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132269698 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076446797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116878024 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119394228 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121840075 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063093946 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118815666 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160517244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092966325 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118409431 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152332912 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078373398 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123315855 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320092586 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146261815 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083991841 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108853734 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117925461 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127898338 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119026873 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139321109 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107245586 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134341382 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108802317 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085328119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08656072 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096245694 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10447721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094333992 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107635736 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113691593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093670699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131745723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102162179 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108449402 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116676048 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09473622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088748738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095923801 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172594022 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118622878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17081926 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098037541 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143614551 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162630385 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074221607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078463544 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077647355 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138718798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083648052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130302828 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097128886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104954946 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12365293 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141337943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094670977 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067963417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10755872 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13614574 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111378584 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097738109 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103283012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161351549 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09949804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078280192 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112723505 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103821507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102048048 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171743391 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203895076 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098699323 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075479094 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080905691 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127989646 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151705088 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08105589 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10187399 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118078312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109873794 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12692864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100713471 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098493952 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113435576 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149130083 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127756733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088983132 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11238818 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128867187 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155905692 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104648116 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094598902 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173787168 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150773667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159491755 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088324328 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12991915 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113150012 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107681669 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137969357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082834601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162619523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080948725 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136511225 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103828646 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089737818 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1295459 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09806478 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087399645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147298379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117506953 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08181827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077571133 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117163965 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119232867 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10541303 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074424015 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138280807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071982889 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130992447 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167356168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080357244 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103757253 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240423887 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079516209 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107982833 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103101918 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088795169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097471816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17219785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087391155 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149965531 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141064574 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113620881 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136575824 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099370653 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634082239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07782775 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151896004 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116011111 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172188334 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096957206 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117837795 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108474093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123362711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143641839 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104755074 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17451872 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131585095 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115642316 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079151633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101967922 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102820155 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087991943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104350043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113331703 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115588429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093294861 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115391429 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12276817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08105858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09476171 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155425681 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116101969 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144007056 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140095339 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084165623 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117244689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137747541 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079175793 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121358612 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151381991 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105776579 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097329686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080179467 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246336807 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170516742 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072771749 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162886527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120937732 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108846712 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112836715 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114667368 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131294677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107244749 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12095955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093840862 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110146194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111740211 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081012621 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076087208 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103538698 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111697806 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097355108 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098618629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097058289 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150235675 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070429253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094937887 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102477023 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144251763 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173379358 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087679502 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081823189 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118568248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112489165 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113072932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120323698 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078600748 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081719084 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081099058 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076739798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107737502 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111345421 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104259834 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110623352 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163505804 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082180263 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223551346 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094941404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103534618 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068997363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078191089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095153614 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097343496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10760911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100255766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168793135 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097086786 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08894464 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091716138 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072586917 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081827405 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126354001 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254633143 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118285826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096963143 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06232439 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981597 seconds)
  done (took 58.572824378 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104389967 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082683273 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096196184 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148966773 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122272675 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21168137 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156866495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199262737 seconds)
  done (took 2.768114631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067877759 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093802943 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100016699 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081139587 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06711194 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067779802 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223650478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079271386 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066108988 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087878606 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07832523 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068013114 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42052031 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065682479 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066978764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061665843 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068482125 seconds)
  done (took 3.402038029 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367189551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361303709 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370604845 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072734958 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.792181144 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088105849 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.070709074 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096008827 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07101155 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267554033 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706388191 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093154686 seconds)
  done (took 14.005502354 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074616759 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06976585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082990877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08255537 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071782696 seconds)
  done (took 2.025645672 seconds)
done (took 102.94946609 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079783666 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390567031 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053272895 seconds)
  done (took 2.117167315 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082207705 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084173903 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084026767 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082049922 seconds)
  done (took 1.990408616 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073995547 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075973136 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083661412 seconds)
  done (took 1.885195304 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222102591 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138223039 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085926735 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081008131 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076803928 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077704051 seconds)
  done (took 1.892213599 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071327779 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074707396 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071701909 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076689848 seconds)
  done (took 1.946401695 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076017903 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051669995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054834457 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055873921 seconds)
  done (took 1.891138551 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085915238 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07792861 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078279922 seconds)
  done (took 1.896233944 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106121965 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084784585 seconds)
  done (took 1.846398852 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081127399 seconds)
  done (took 1.735944396 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098760476 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11279316 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127381218 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108864298 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135906526 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108379722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085115641 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086339889 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07670019 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086652792 seconds)
  done (took 2.681482668 seconds)
done (took 22.052665113 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078121941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.454170881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361339161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090894355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675908583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355959465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967447845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091858227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112487507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067488044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083479843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647693276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958276468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.41043315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945468386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316102247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64816257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067971126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06722841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067562372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95332673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067574199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067906646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067844531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647351054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370484442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067634384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316365344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067524178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069136103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354653752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067575406 seconds)
  done (took 16.226749428 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070500778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117048991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073466651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083280561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070143725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069066003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070971581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068890665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118163305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067310261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084078905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067947847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072260966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068328417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086170614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067637961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068276244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068045774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067848182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068244671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085981946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067479597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068081923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067859636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0676412 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067835352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06750124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067820694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069413062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070190646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068540873 seconds)
  done (took 4.041602886 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114190372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124277671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074312213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102339777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112063814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069989857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14237599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092108744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126825546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070348526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084264702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067630211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100245542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068544599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086765478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067739035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068829472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068525998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068133454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068362661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086934243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067815688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06806534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068503535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067938746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081216769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0682793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068289318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068428539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07014231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071216248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068312314 seconds)
  done (took 4.301622124 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072088126 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074670797 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082315783 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083428536 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069250878 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071574055 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072618665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06921348 seconds)
  done (took 2.264084101 seconds)
done (took 28.494964867 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078544464 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068852553 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072122574 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079688671 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073119569 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0781278 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066846572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074079446 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071351739 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072419489 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074267176 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067473018 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070685499 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067044074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073529456 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06777999 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078534938 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071199734 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078950128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078664584 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069236317 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072622182 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073693448 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078466017 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078277296 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080250717 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076868583 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07199885 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068645131 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069822233 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07587795 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083277901 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068167513 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078409889 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066965246 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067398455 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071104735 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068305638 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078805903 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076117035 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069389167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076215259 seconds)
  done (took 4.727865257 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087034495 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090195945 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083995906 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061071653 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06569121 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063996439 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087936436 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059008662 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059067953 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086786528 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055543069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058750163 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062198558 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053625051 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058729491 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05665648 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061066764 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055539106 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058727742 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058863416 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057644127 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053654776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059412333 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064514278 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056165331 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061420849 seconds)
  done (took 3.351220939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074144401 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083644171 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088675507 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126434987 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10342051 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076479375 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077116676 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091725739 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084847614 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066658479 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070676474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092720292 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087635537 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073553173 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067251883 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081071112 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068233924 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073100976 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090358472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083599371 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083055622 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091886073 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080089229 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066855153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069060541 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070457674 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0809199 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07210348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075681892 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071297873 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070352477 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068994389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078495915 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071030402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068834876 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089975966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076667949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077024879 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067751198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070375938 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067928181 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088906764 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122223648 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066889633 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073893433 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074871696 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076169917 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066846312 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085127051 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077878563 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066459774 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069875938 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066569563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066903693 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08001432 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069260122 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070072558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076140095 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071160185 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084891837 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070967637 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082429401 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066796155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074689912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066373624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067932121 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065967032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092069722 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068629745 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107600519 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068236039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067937303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075533005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074348474 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072828069 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067475323 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081822311 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07718016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070217746 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075252711 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070767055 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069618611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086785613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06940837 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068420566 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068251411 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073103851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069656521 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068487864 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079469562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067434162 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07013055 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083370105 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066502756 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068325495 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073283825 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07189437 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067219083 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078535601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071976313 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06809009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076043513 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067142178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070204669 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077326791 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073236058 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066383579 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071788508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073390563 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067635465 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068488996 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069726046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068756311 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0748817 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073450294 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071864877 seconds)
  done (took 10.520452144 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160773309 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163827945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070045001 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143671969 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075732695 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078256796 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146613364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093972098 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067385733 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067884341 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068437976 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109393399 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105266371 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114752016 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078590029 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067446052 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082738527 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113268104 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147915834 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142337268 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083129146 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076434998 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069547028 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068897985 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070845806 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077969247 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084932701 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076137634 seconds)
  done (took 4.410328251 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080467361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096344276 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074259325 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088418087 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090545089 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068091372 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06982235 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069216587 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079925551 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078443409 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067405558 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072848011 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074140885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071165215 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068769922 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07488268 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074921669 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069325344 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070789808 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072736379 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076668271 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080447031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071150865 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066809625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073621563 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066695031 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064230182 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084385377 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067836511 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089455112 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065247902 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074354346 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080853515 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068210412 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067112447 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067932187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0673146 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067039457 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068785901 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066328133 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065955299 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057321708 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066471373 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078979255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073397921 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055991556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072282205 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072769671 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072322068 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065274196 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070269915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07001261 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070824917 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074855368 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072671339 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072566235 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068681976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064910562 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074617208 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067241401 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064073155 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065691953 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072200294 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065912067 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074903505 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071394416 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065330252 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06697111 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068666798 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072916299 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06673118 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069920258 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064874508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069245682 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071364458 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068877763 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067688301 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065669228 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066556492 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067416036 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055110289 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067514408 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053361479 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070060114 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065452603 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065374404 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067133816 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071874951 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079844762 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068471872 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073052297 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067722477 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066421626 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07021843 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059848056 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069829737 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082285906 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082305489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067041103 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065197506 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081400921 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071577196 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066455478 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055677066 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074602485 seconds)
  done (took 9.116388651 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093888995 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087803478 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070467237 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082841662 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091032644 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085962974 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075891881 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076418882 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068822255 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081610283 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073695436 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075768502 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067831654 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076140617 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092909194 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076269308 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06900301 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076308005 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071296568 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099652113 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082021167 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081407737 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.0744538 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067741836 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07514113 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07952374 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088779021 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079372378 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07828033 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075283074 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079335512 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088881466 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073722788 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07130114 seconds)
  done (took 4.398435571 seconds)
done (took 38.18647426 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.740297917 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.004097403 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743585565 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.157134716 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.83207573 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.920294214 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.798254213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.736202854 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.967754636 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777577021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.007315918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78384099 seconds)
done (took 65.145917216 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784022108 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878821539 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009349663 seconds)
  done (took 5.563554785 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039067225 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.269476208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.982660596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.734553194 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.740524336 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.031005809 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.540972636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261948982 seconds)
  done (took 30.237279706 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.974071591 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.937556723 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.417304291 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.46137503 seconds)
  done (took 15.517192713 seconds)
done (took 62.90174377 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.721469817 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.778153768 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.76424679 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.71601667 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.793144812 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.740264962 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.935111753 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.933774038 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.730553283 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.721993427 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.733539867 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.168332936 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.741385814 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.956797325 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.730123294 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.729769362 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.748241449 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.179528025 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.887211428 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742317563 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.748866307 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764647955 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.729344762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.737612942 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.754426411 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.731726988 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.157978626 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.736351747 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.350918452 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.729518561 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.757448675 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.173010828 seconds)
  done (took 203.498343353 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.730358489 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.573907501 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.615255409 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.770847296 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.060930128 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.924807565 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.860429494 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.107438974 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.729784017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.734475236 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.870341187 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.730881695 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.901784708 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678983152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.732768795 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.838606593 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.892138458 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.937736332 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.72773193 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.985404606 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.728623699 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.746930473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.684603525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.868290602 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769930104 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.728292059 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.896682893 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.758799298 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.922508977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.870785116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.772740597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739664763 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955869709 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.603024336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757009187 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.741405451 seconds)
  done (took 167.617952239 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.874267381 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.729107326 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.728801233 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72940261 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.741624664 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.728202402 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860392636 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862038529 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.185022305 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.175207416 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779923094 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577850208 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.727959797 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797308843 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.742579243 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.730977907 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744791492 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.756021262 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728342359 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728553837 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855432297 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740844818 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.95080523 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736881578 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728059282 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734908249 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.095931794 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728060171 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735672579 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.987792439 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.729869023 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729717409 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628179464 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.98729808 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819803715 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731220247 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735777832 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.731831905 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.949796784 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731681563 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730957971 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.733403533 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907778635 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.73027432 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.857063145 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730140565 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227327708 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.729854839 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731937071 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.597244235 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.407049402 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.733307685 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.729956873 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.732203264 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.730984656 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.73059643 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.729388101 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.738242191 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.552631245 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803355283 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.731205485 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.731740869 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.736501101 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737653388 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732310004 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.853771997 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.733757925 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.902076984 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.791597197 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.843867258 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853818013 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733762269 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800581124 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827850801 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.731517484 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.731718795 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.732289429 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.731046399 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73152752 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.732357997 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.813600405 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.730893706 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.848762397 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741408278 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732756104 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.782647774 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.800837122 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.732424123 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62019847 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.735331499 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.732001458 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.038069487 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799501815 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.733830627 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.732558085 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732552068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.851267446 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854918481 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.511670229 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.734450573 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.587571632 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.734820955 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.874542886 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.733892629 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919671343 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.735238458 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815183639 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738816495 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.734217541 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.733727349 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765773516 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.734014993 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.792623015 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.734436494 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.104231202 seconds)
  done (took 398.069350153 seconds)
done (took 772.793362264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.411705875 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371509514 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.488881249 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398645882 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.379642292 seconds)
  done (took 13.724091982 seconds)
done (took 15.397575501 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.819971812 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.824762295 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758044982 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.82392792 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753419236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.821862536 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.804056824 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.759632452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.790689543 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.760608213 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.792024007 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.758815977 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745411071 seconds)
  done (took 24.887176402 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96289128 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972160699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803744999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976983348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.781907099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.960717914 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896860955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88554786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.88501255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748558821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746895118 seconds)
  done (took 22.29689764 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969362828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976712054 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809061873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980944751 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783746037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989633394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898555724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88712851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889166992 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748244617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746186453 seconds)
  done (took 22.354502172 seconds)
done (took 71.212774573 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.741973078 seconds)
  done (took 3.415789625 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.764137722 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.900047934 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.749181203 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.74542531 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.741986909 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.742339362 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.746706368 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.743295036 seconds)
  done (took 15.808645659 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.74218159 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.738703204 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.74257095 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.74417819 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.742309439 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.740427686 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.742958326 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.740670755 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742633545 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.740180031 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.739675327 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.739748904 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.739998532 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.743522507 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.738729143 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.744523833 seconds)
  done (took 29.538339572 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.742584526 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.739664715 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739366708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.742453552 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.740996698 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.740485591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.741232265 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.740686692 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.740815436 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.742473421 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.742203216 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.739458013 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.740910257 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.740988598 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.741755638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.743341549 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.740556003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.7402237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.745397888 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.741664571 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.741825936 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.742575991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742264841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742069881 seconds)
  done (took 43.474476072 seconds)
done (took 93.911182183 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.443641933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.192679351 seconds)
  done (took 8.313195641 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.743427305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745557728 seconds)
  done (took 5.20626551 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.744938462 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.745131007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745378289 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.744759757 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.746235062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.745882017 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.744590987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.745797924 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.745067288 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745661294 seconds)
  done (took 19.13185281 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.745656754 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.744925429 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742016688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.746366575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.744497343 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.744306591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74575679 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.746209055 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.745270669 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.743040946 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.747537294 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.742665893 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.746301514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.743579378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746222479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.744250277 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.745298997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.743556856 seconds)
  done (took 33.087567587 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.746175726 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.746287846 seconds)
  done (took 5.171702894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.746014803 seconds)
    (2/7) benchmarking "second"...
    done (took 1.743975942 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743686049 seconds)
    (4/7) benchmarking "year"...
    done (took 1.744298162 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.743687787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.743441878 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.74583759 seconds)
  done (took 13.890084677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.74670462 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.89956939 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967503373 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426121502 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.74878342 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.749834399 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.667455918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.750333446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.753094131 seconds)
  done (took 19.388125444 seconds)
done (took 105.866040755 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.550803294 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.740477113 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.138971912 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.798998736 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.760898274 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.038847629 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.776347254 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.958487231 seconds)
done (took 42.444251533 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.821856602 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.274051604 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.510769352 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.421391529 seconds)
  done (took 12.888287383 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.72798431 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.277806655 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792392047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.425315239 seconds)
  done (took 19.928576285 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.115296074 seconds)
    (2/2) benchmarking "read"...
    done (took 2.112387845 seconds)
  done (took 5.916614034 seconds)
done (took 47.23797212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749398963 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.747848019 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.750457197 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750090635 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.746843081 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.749789073 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.746855025 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.747785858 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.750431286 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.749737617 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.75035785 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.749689998 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.749932924 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750800772 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748449203 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747429644 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751369178 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746781886 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.747372098 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747945979 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748090805 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749752409 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.748492315 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.748607935 seconds)
  done (took 43.657285212 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.750981835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.749924193 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750572837 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.750953701 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.748557045 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.751111131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.751377566 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.749944958 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.751909406 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.752131195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747998714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.749686959 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.753659223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.749793379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750542734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749976136 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.751170691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747903125 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753771994 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.748984363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.751759871 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749056589 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.749658938 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750750939 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.751216338 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749379832 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752412917 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749720367 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752236829 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.749619442 seconds)
  done (took 54.200893399 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.758354845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763565436 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754770788 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.75400069 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.753498841 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.752756513 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.752311608 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.752850566 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.75299204 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.752595012 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.752667688 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751735996 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.752601537 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.752964306 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.752582808 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.752663951 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.753579396 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.752265254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.75262192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.753717078 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.751843165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.753954573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752917012 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753420236 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.754276452 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.753945064 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.754528431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.753619022 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753371992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.753471743 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.754272782 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.754089375 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.754073925 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.754350765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.754425474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.754329087 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.758637999 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761464893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.755777423 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.755085248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.753938712 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.753726052 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755351216 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.754410882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.756493943 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.754986299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755592371 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.755867535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.754871332 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.755536505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.755695841 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.755868073 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.754441319 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.754165995 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.755844991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.756094055 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.754642245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.755043302 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.755555653 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.755046965 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.754969265 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.755128866 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.756842592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.755619195 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.756318958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.754336055 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.75505427 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.756056321 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.755326499 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755357973 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.755147318 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.756463473 seconds)
  done (took 128.025603478 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.756349383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.754405883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752681279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7534503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75197162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758098172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754002471 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755783294 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753579848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.756480811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756429574 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755765124 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753587924 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.757531199 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757802676 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.753282121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.757942099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755737684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.756707446 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757857236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758053786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.754420634 seconds)
  done (took 40.310348281 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758095079 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75710387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.754740356 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758974538 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754059318 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757957988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.757647932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756282702 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757557377 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754958706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755035793 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759207367 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754533678 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753991842 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755381291 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.753613987 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759739071 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754762354 seconds)
  done (took 33.304916471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756477311 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.754359561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.758314239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756383819 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.755044353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758981345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755423845 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.757905507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.758177547 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.758826844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.760030994 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758770038 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759308012 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755782762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75885187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756823144 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760068667 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75658393 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760059394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755957595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758588044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759976339 seconds)
  done (took 40.361841438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760108398 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760172129 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.756941682 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759027645 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.755618984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.760233622 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.76019659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.757562973 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.760202451 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.760726335 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757825991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76144831 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.758184868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758039898 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.758280131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759171351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.760611578 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757298443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762364496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758207515 seconds)
  done (took 36.874647305 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761259324 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761519581 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761606353 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761420338 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761892023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761539423 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761711307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760062748 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75967565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761108071 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761680879 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.762068802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761398167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762310938 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761080807 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761703503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762038951 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761288576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762334181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7616995 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761985855 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761245187 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762491815 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763025279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762951815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76150524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761794782 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761760489 seconds)
  done (took 51.020369789 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762497696 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762057757 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.759323191 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759838381 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761209963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.759213613 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.760623482 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.76103649 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76211166 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759751119 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.763809893 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.762167075 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762855033 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.762889858 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762111291 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763157299 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763316812 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.760515892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761678432 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761122065 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.763791274 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765481502 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.764831928 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761353436 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761275906 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.763642812 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762178254 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76252093 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763846726 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76102859 seconds)
  done (took 54.557688533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.782289746 seconds)
    (2/2) benchmarking "in"...
    done (took 1.783669599 seconds)
  done (took 5.262578312 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.761125007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764407012 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.764451191 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.761020638 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.762483657 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.764305761 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.764496222 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761302132 seconds)
  done (took 15.800747467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.766696089 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.765286358 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.764211054 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.764738956 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764873163 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.768876162 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774464128 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764821232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.769549174 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.767653644 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.773093828 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.775277691 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.773445893 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768514599 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766879745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768958367 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.765531996 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.76622079 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.76630008 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.765293312 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765006446 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769563182 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769605398 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.762617638 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768538153 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.780530785 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.775172204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.765488576 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768440412 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.775160164 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.769382778 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.764039793 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.766877955 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.766888424 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.76690022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.766074776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778328202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769162888 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.776360666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766203378 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765567026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.764136135 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.769931837 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.771795842 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770253589 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.76612925 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.767800654 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.763947367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.769519739 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.77202856 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.770805681 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768808552 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.764636424 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775490812 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770638579 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77539856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.767489218 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.771667282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.777007466 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.781823828 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.784777662 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.775604343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770837022 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.767870208 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779033629 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.793018272 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778245784 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.76550417 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.765229847 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.768878907 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779027308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785495928 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.779367332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.767849819 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769239321 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.768821407 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770905821 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769217567 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779297582 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773688014 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.770242421 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768699757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780769376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791565669 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.768901539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.768869274 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.769954611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.769072317 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.772455973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782083179 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.770453905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.769898826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.771275006 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.770850165 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.77544526 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.770164888 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77063986 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774184679 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.766843763 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.770877815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770304074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774980298 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.780962929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770974846 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770809814 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780400478 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.770128782 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771251397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.783427232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769598036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771478502 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.773174185 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.781043781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767502558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775931182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781210407 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.770435409 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.774391782 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.771079311 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.770626813 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783200188 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.796604773 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.771776327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.770698525 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.777857615 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.781389777 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770928874 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.775724947 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.770515257 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.769043538 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768708125 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.77599289 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.770953526 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775837935 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771311377 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775775403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.768608988 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.771145469 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.771932047 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.774716228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.776995738 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.774507786 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.777104211 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.77733607 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.772504832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.775665287 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.784748787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.773560554 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.777875754 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.776568773 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.769812811 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773413357 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.776304436 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.774577534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.776058512 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772336757 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.775207186 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.774087431 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772987136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.773284323 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773162263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.775431739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778406095 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.773308464 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.781522884 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.775923745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.770143963 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.772967377 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.773454145 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.774778831 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.773956363 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.77387138 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.777689661 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.78092896 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.772963376 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.773876489 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.780926106 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773133207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773252011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773986721 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.779268989 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.784967512 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.774640263 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.786257618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.773691452 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773514164 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.774149875 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.777047761 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.776101972 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773814929 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.779208015 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.781471917 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792173892 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786150842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.777159642 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.778383511 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777944565 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.778709262 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.783559098 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.775549854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.774788328 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774873774 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775979663 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774623992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.781184715 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.774746063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.777316963 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.775965939 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.775431697 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.775125796 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776337252 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.779387146 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77999548 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.772891954 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776441337 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777012406 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.777418159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.773024473 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.777181476 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777102808 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.776095812 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.776297988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.78843727 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.774086914 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778843786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779539129 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.779511476 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.777280747 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.777070711 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780924253 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.779445317 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786445412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.78266867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780221541 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.786190951 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.779351118 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777863528 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78131251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.778062817 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.773846209 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.781917008 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.784439548 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776973198 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778175617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.777463511 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779363807 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777070832 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.78878698 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.774721128 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.780676689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.778008401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.783298996 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.774427133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.781592292 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.78001066 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.782115848 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782269713 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778768669 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.77826335 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782831383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.779470567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.778558493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.778044105 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783586488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.785972859 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.788293185 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.782375058 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.78530807 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.781956419 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.782175682 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.781661283 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.779855528 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780652576 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796583983 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.786481506 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789928601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.782891337 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.779235747 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78812186 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.782439107 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.786612113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781019539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783491141 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.782633509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.780286133 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.776112214 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782723481 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.779713564 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783357059 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.782772914 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.783226 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.781151042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.781660066 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.780037938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.780266084 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.780426443 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.782286197 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.780137214 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.787286695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78442569 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782752591 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.781699894 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790396208 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783061846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.784790938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.783375308 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.78203439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782141773 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.784049643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.780729813 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.786037718 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.788096985 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.786301617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.794517714 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.784649596 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793833761 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.782601242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786734023 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.788582576 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.778899927 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.781296703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.784508349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.781964783 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792285614 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.78054506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.784332549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785359876 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781467117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.781717769 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.781114199 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.781711463 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783625669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.781737088 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794877064 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.784185344 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.788189077 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787016421 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779930133 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.782286257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.781931354 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.784153679 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79040128 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.781994419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785825093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.785044046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.785946969 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.781801296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.783194116 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.783243957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.78087358 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783002386 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793211718 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.78530203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787782449 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.783786874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.798025159 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78277321 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79427277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.78464858 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.786824118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.783617426 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.782986057 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.789863671 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.785831473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.787708671 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.783272843 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.786247187 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.787714298 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.784602662 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.790459133 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.787043933 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.78463282 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786382271 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795882992 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807079717 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.788005685 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788371541 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.781548455 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.788630614 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.787956814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.785320705 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.786643821 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.790008174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797947112 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792255011 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.788064227 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.785365506 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788915352 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784889804 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.78592617 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.784808468 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.78497647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.785644458 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789432034 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.78567309 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795187573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.785004742 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.788551358 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791135879 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.788541991 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.80094604 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.785568485 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.790237123 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784972327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786609366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.788551157 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.789481421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.785469123 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789014008 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785645506 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.789102234 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794961932 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.794628806 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.791907056 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.78815377 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.78699151 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.788726746 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.7911239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785705538 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.787220022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787031686 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.79044991 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.787254617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.791444617 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.787804084 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.78709663 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.790366092 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787402902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793066903 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.795631963 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790640287 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.785149472 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.787333413 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787880626 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.788608148 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.791411591 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.801134176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792993429 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.799918273 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.798857382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.791732411 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790182579 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79191138 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798474248 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.788960955 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79248632 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.788653728 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.794389332 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.79173598 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.79340627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789107313 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.799607618 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.790172263 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.79129972 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800807907 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.791825937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789589916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79228139 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.795319829 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.791059034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.78623132 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.789168234 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790500857 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800215436 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.794202829 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789735599 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.793331622 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.789384881 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.792839128 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793900904 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789279861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.792900197 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787518953 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.791293959 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789456653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789790009 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.787242245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791803868 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.79293578 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.795891732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.799711417 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.787556325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794617475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791860825 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.793584534 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791727755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790474795 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.787091266 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.787766054 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.792939373 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790897422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.793951023 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.796966926 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792879621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.792639812 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.792960174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790906669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795925305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.802296046 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.797863216 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.788448351 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.79289926 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.79401805 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.795734137 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791695078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.790687578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795163693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.795823168 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.791753441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79086125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.792011414 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.797711108 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812818896 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.792524656 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794907082 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.794871159 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801042301 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.79319319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.788855041 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.792811174 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.798835858 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.797277655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.799509232 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.793892427 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802535587 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79518972 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.796364455 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.796571021 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.799032988 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.803051972 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.797520836 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793069383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.793095778 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.799843792 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812163052 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793324823 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805516976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826035736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.796639884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.797567057 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.79486802 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795526692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.794382514 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.79951334 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.793082806 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.795057321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793881859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794179791 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.796453972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802716091 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.797846022 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794659277 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.793691865 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.79646569 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.799601014 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.791256387 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.794371302 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.793726206 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.793601745 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.794344546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.794603183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.798064117 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813408251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.807229779 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.794184909 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.795288556 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.791964881 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.802544702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.800022707 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807353205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.802373789 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79529943 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.7951166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.799829996 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793934336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.791804449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.797647466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.797145545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796941754 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.793711147 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.812130668 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802936303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.804085743 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.798888898 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795998322 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.796570484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799879324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795558447 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79554748 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.802436574 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799349228 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800063667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.796132165 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.795779475 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.801060816 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.80427807 seconds)
  done (took 1064.765792618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794210417 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794337291 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793904459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794821927 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794535315 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794471619 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793398726 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794033918 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794736572 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794677225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793720049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793503643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.794871145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794878162 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794844302 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795728637 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794283861 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794768714 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793834961 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794942934 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794122067 seconds)
  done (took 39.411152781 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.797115248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.793634451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793920845 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796934258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794989498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796963692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.794694187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796572282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796952364 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795018595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797791166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796902334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.795107779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.795216264 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795822484 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798559123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79890869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795264634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.79852324 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79518554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798593976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.796553501 seconds)
  done (took 41.249092795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.79830979 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.798504626 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800784575 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.796376008 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.798176141 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795656474 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.798046909 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.798554861 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.799116847 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.803560989 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799793485 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.802075481 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808234987 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.8031361 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.804954473 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.799739622 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.943279902 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.799532619 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.800342337 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.798467041 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.796522171 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.808773888 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.798236352 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.797231658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.801213225 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.799690917 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.800591251 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.799296188 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.799136458 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.80302302 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.803830832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.799656789 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.80168916 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.804238409 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.802327885 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.80388314 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.804658761 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801048799 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.797142454 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.799526671 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.811966148 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.820421139 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.801244457 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.810845558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.800198788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.800386484 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.80453286 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.807903016 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.798298258 seconds)
  done (took 90.155645391 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.800886733 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.800973084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.798558882 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800742962 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.801584141 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.800759297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.80037215 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.800538415 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.798489438 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.798266971 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.800986606 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.796284383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.796190125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.799734447 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.79872592 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.795840537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.7963687 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.796613168 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.795590483 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.796858818 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.797358781 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.799903218 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.800559523 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.79615776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.799383427 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797386194 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797420211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.799608138 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.797110985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.797464804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.799456754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80068008 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.799416201 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.797340002 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79744371 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.799761358 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.799405877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.798023146 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800190168 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.797260652 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.799736818 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799523295 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.801270237 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.800355014 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.798163922 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.799686278 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797973867 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.796875452 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.799804799 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.800194365 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.80137662 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.798769432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.799778381 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.799115795 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.800621478 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.801085372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.798201928 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.799052251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.801182238 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.800087418 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.799039227 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.801515054 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.798830726 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.800675132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.801183297 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.800408496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.799474825 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.801603843 seconds)
  done (took 124.076360802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800880311 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.803375597 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80248215 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802126196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80207667 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.801176524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802257998 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.803216105 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.802678472 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80324643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802474143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803148362 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803454284 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.804234534 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803845755 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802481161 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803035398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802630864 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803246605 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802801371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.803711092 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.80305443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.803863627 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804456895 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803159079 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803612561 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803849673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.80390405 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803716904 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804041241 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803970796 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.803457052 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.802624268 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803464142 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.804345263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.804255505 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804056443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804131539 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.804055937 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.804637156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804465106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803763496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805097183 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.80460627 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80601061 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804595227 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.803893474 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.804564721 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805874616 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804275509 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.804909767 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80478793 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804078237 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805967996 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.806388481 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.806105644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804999614 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804632831 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806052394 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.805298005 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805793473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.805170336 seconds)
  done (took 113.578293821 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805473591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805090006 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.803153807 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804244549 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806852803 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803801979 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806724425 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.805837077 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806516974 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.806633361 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806788713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804295731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802582675 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805801876 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.802093854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803726132 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803582165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802651306 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805396938 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803180286 seconds)
  done (took 37.832413945 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.803829657 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.805710922 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.803494191 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803588865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.805441737 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.803388478 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.807003556 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80613916 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803786615 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806899496 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80657921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807115629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803984715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804132107 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.808696547 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.804163729 seconds)
  done (took 30.622532806 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.804991851 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.805774243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.807154188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.806937328 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.804632332 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.805228974 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.806858539 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.804726577 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.805258716 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.807952389 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.807184379 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.808108588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.80820204 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.80726095 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.804510387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808072332 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.804147268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.806937173 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.807552288 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.807274917 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.805289084 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.804522877 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.808095175 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.8084682 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.806726233 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.806280508 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.805569103 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.80542363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.806574411 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808809068 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.806018402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.806261227 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.805843687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.806543189 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.808700967 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.806420502 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.808400062 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.808784253 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.808749233 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.809080205 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.80882911 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.806843383 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.809609713 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.80806796 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.806741783 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.809192595 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.806712492 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.806863045 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.807403204 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.807042376 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.80961513 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.809468257 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.810161613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.810142029 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.809026426 seconds)
  done (took 101.135844887 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810409591 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809842969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.80755272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.810001912 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.810314352 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.808681217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810362112 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807612383 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807519444 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810185706 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808875838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.809719092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808286715 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810162555 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809698009 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81068191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.807717169 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808991502 seconds)
  done (took 34.308778705 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808849605 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808763035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.811418289 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808724219 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.807520821 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811942052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807182822 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.811099719 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811084592 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808422724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808622886 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.812392873 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81132574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.811270523 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809943436 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808857685 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.812294541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810980987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.809668079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809286937 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.811644835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811649296 seconds)
  done (took 41.566513656 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.813208401 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.81343605 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.831372368 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.857277578 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.844455273 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.813282015 seconds)
  done (took 12.717195085 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810494523 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81257134 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8103067 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813615339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812499589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808888794 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810427755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810397001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812232363 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810826947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810100828 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812908584 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81222032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809899116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813080868 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81299387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811070787 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811626464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811174614 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813200071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810786874 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813015737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811567397 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811290469 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811426062 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812264546 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813889676 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812170159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811920928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814209709 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813365998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81135451 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814322247 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812611646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814577776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813762719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8125044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815035271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81323065 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811672396 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814480696 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814337675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814503214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811295077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814626785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810885358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811738773 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812210646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812164138 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815258769 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815926027 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812324836 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815434025 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814863405 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814610077 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815724785 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812626013 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812694233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814918168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813953552 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812928491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816410055 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813053089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813616458 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815072229 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813553096 seconds)
  done (took 121.391308544 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81353546 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813112948 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813757953 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814318705 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81390304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814079796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812523424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813233731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813796756 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813355402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816719319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813077883 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813389065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814216104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814583401 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814402776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814070503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813480174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81446131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816766617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814115203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814860177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814260952 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814026088 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814392655 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816469633 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814210768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814569343 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813291824 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814745729 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81491601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814414816 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815434877 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.815323439 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81515473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815064173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81481779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814469679 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815568595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817812783 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81450657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817954962 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815340624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815341997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815336782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81575514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816003687 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814752273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815767166 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814958066 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81611144 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815819303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815983933 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816238227 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815491576 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815819547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816439859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815384618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81541083 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819430306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816095439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815498397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819530225 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816559074 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81715905 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817015441 seconds)
  done (took 121.548618385 seconds)
done (took 2479.419720759 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.868537456 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894317467 seconds)
  done (took 15.512982117 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984658021 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934750848 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.820795695 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.848930126 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.821114937 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.842591725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.835708278 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.820282618 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.820482367 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.819908339 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.820605776 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.005922916 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.875231312 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.821190226 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821937058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.912775056 seconds)
  done (took 51.562252157 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.824064845 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.824294198 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.835692779 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.826047615 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.823550276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.836147024 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.857016173 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826614862 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.859462722 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.835946406 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.897644582 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834568872 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.823066249 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.875285245 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836707444 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840532213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.912885021 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.899946696 seconds)
  done (took 35.022446975 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.902506626 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.825110292 seconds)
  done (took 10.48830651 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.815707084 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854419463 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.847679456 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.842610343 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.823200434 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.850304101 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.847481341 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830243462 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839471516 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.831698448 seconds)
  done (took 70.13885393 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.831833115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.824890737 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.825677901 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823942924 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817761053 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.82230915 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.82471376 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.817348289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.508463063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.862720387 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.832190474 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.832722471 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.827286278 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.830054625 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.823678927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.850337619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.942964317 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.823416841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.823600733 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.832471139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.828662854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.918028466 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.841826448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.826547959 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857275128 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.512471472 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.837177178 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.833587091 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96352379 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.82414719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.827445641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.82899939 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.829705127 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.215748989 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.132054356 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.828472242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.837960681 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.836309848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.824453304 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.997328719 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.829370264 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.833969212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.82171736 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.108302487 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.91370819 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871331329 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19743868 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.833571697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.830450459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.859561888 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.832368794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.830504163 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.84393955 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.340792554 seconds)
  done (took 130.486149657 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824382097 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.409734977 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988260963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825935035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106348012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067292185 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825138177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87440042 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826263963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074381705 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00330864 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944764053 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825523357 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.826464066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822786164 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823762078 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978805134 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.895439155 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825666314 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.8234342 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861219499 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092178786 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.953287351 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.826358778 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.850141637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055121315 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.9533399 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.944371038 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.356949237 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.824228141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893628135 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827118274 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.82560571 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824747025 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991447739 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935986018 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923836013 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.827891366 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825316251 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.824847053 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.489339266 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049131549 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938367491 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96528116 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075802688 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055959437 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473863123 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.825601739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.464855842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02348569 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.035985534 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.081675452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956348028 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829562092 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.07702372 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8259337 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.826505396 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088956407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05500095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.941535034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828215076 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826121741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825676931 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141848426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.830798859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936906694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83042056 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826289549 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939489439 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945293497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.05764866 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072572862 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859061084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.731728098 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.33581893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111498502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.899989288 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091928148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829322234 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827846199 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921727337 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.577071739 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002457976 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145388466 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094488601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870357862 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43259235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.827500945 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.076086024 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.079080984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.058511668 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074056127 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996025729 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.135434047 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.827179702 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.827837271 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.031562759 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961203 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831568654 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190787855 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078297041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.56235871 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859456661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134320238 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968087243 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832552705 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45575208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828921232 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032255925 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.872054104 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829591894 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828705481 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07733031 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.704743754 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828556848 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.604991514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.896408227 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832130991 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096512018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833515723 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072602295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833858537 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141259696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.411619654 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873825609 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022092471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075321219 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.626868061 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100276374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.146905575 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955859801 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094362286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.655900268 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832438744 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115122799 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832308231 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.830598807 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000730871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.832050235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988049958 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833477142 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09080348 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858046913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003087442 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832755549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104619097 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876510194 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884173247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.835143522 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948982886 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83368045 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.984180375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016475115 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83509184 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830103143 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.399211456 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.832515969 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98082294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.132182969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85781837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904461513 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.363916577 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831102642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92735778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860074958 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.444795584 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.831533851 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.003504552 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.835002608 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830515504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.831294485 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.14304227 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057180152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.835744489 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832902039 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.625349012 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.538210325 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832075064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009135069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.080420746 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.47633664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055262984 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836523089 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967181574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836915 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.907428132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.18156657 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83243725 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.831548785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831785762 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.8339657 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831795552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060762016 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86244502 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.516505267 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972541334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079877308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.147217459 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.098345243 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884260653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838443062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101584859 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835088754 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901411214 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.835557069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858438639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084430263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838523235 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065157841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12543883 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.882916229 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886430864 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.836881661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833807213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.834621797 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98021315 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936264047 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837346675 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835371082 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95345183 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963535392 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024818109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.427253108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.010191352 seconds)
  done (took 895.529339802 seconds)
done (took 1210.492325205 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.835123381 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.837154258 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822099455 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835013334 seconds)
  done (took 29.100950736 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.840299571 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.839682868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.839530858 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.844588439 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.840779989 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.839368982 seconds)
  done (took 12.813360476 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.90266706 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835198166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835431073 seconds)
  done (took 21.343199763 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.908195674 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.247553454 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947520802 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.283205323 seconds)
  done (took 10.156536804 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.840147362 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.839731923 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.839880423 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.842433293 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.842454529 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.842342556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842674242 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.842604341 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.842958052 seconds)
  done (took 18.34706175 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.988900924 seconds)
done (took 97.521949683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.999715423 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.134865245 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.981526369 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.822439264 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967040877 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 5.592907489 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.001182976 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.001936792 seconds)
    (9/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.921915769 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013464347 seconds)
    (11/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.004220203 seconds)
    (12/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.600137568 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.272958429 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.877926842 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056365585 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84016107 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.86241137 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.859246607 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.187016904 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429814533 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.8529384 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.97171173 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.965958341 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.915757766 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.918769856 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074103803 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.721584589 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.838948933 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.080264112 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.501043014 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.959906877 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.044615684 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.927415888 seconds)
    (34/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.838258686 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.383291835 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.022521605 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.824736719 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.105992673 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.822643271 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.232043666 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.825243689 seconds)
    (42/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.987689909 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.834758158 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.903415533 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.937981447 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.837642203 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.513650379 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.751888877 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171906825 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142420463 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.839963207 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.903343035 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 4.79266385 seconds)
    (54/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.002157264 seconds)
    (55/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.817031538 seconds)
    (56/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.944340223 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.624272135 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.958166937 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.097512846 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839010129 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006796365 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.916131081 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.226862947 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.120992006 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.629888047 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.138890965 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.849055724 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.889094462 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.076684303 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.836629658 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900003637 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.933762753 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.817959776 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.260819552 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.204487113 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.886432903 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.771153753 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.844621771 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.273353426 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.620418022 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.960488884 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 6.939061105 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.941708109 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.886894923 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.083441258 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816526889 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.870704743 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.481907606 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.794375598 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.133331585 seconds)
    (91/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.957624116 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192596911 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.883085017 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410387855 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.836242864 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.111940237 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073412777 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.221492757 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.275333351 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.883766544 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874679526 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.294789904 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 5.749473552 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.856620671 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.422700886 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418277456 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.025021139 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.391704025 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.841398957 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.970020481 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.824288758 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.072431947 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.841408316 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.231495655 seconds)
    (115/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.060580819 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.074995625 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.024039899 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04703894 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.131884365 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.215124382 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.071830963 seconds)
    (122/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969786118 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.223216199 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.218793337 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.920460982 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.238280297 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.86356578 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088846752 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.292462156 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.863549611 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.767755935 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.097329453 seconds)
    (133/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170021476 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.212895563 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.243399603 seconds)
    (136/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.148563668 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.849701502 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.68201223 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06480251 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.349167866 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.1816937 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100832607 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.101336718 seconds)
    (144/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.841587527 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.027803512 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.954408678 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.408158387 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.009527865 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.10412882 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.972174226 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.515855486 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.095181476 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.954650194 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.842997742 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.080445561 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.153756417 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.86945789 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.850269411 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.794876109 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.361204441 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184077602 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.139596469 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86870859 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112525884 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.969814165 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.217535885 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.924250333 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.102038794 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.715012168 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.162055868 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976409934 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.193512645 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940150146 seconds)
    (174/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.357641418 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.913440165 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.141594241 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.007710779 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.928311535 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.137288424 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03182081 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.189507893 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.124220469 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.945100734 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.918175589 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.838960401 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.008640692 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.457039219 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.040425562 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.86972408 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.932110161 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.138741817 seconds)
    (192/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.87504978 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.03915344 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.145960714 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.86175913 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.231124291 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887889067 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.022989951 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.824736127 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.029609105 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.254861794 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703552191 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.927893234 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.843825266 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.721022059 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.919198285 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.741226772 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.869509513 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.823393216 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.533935306 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.844314733 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.850353763 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.511559126 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899614453 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.378886359 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.913628016 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.866533228 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.96827254 seconds)
    (219/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.774006828 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.472086511 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.05986564 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.943070591 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.863317271 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042670354 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.180754988 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.945312686 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.890628302 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.863914759 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.038235284 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.854108934 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.851504455 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.198640362 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.83818597 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896794258 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.128415465 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.464158351 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.013034939 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.850350633 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.086122616 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.828115133 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209340004 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.872883975 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.008373133 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.929285091 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.867450433 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.116137486 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.363328619 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.951417122 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.870468891 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.828032949 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.218256329 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.329408387 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.967147607 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.942604994 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.224994651 seconds)
    (256/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.450388233 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.761001324 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.048584578 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.950127832 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.828218097 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.441137352 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.831422756 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.573437834 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853107431 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.861138722 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.986450203 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.877399346 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.144584658 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.149306122 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.834768314 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.246162493 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.035778392 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.237515055 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102369373 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.873593736 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829914127 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.842425458 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.29059666 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.982235503 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947320461 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.846560952 seconds)
    (282/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 4.675307827 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.01428688 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.952029883 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.851705553 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.847337903 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.059381988 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.549270165 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876947439 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.94587514 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.252815044 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.224995235 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.931816456 seconds)
    (294/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.873411552 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.928618026 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.956272699 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.856748975 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848452314 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.854700281 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.013660705 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.82931973 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898250961 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.848003769 seconds)
    (304/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.362554698 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.942436799 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.442350889 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.95540933 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.752483509 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.881067991 seconds)
  done (took 1013.849538735 seconds)
done (took 1015.638066344 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.879660228 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874397239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.859185657 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.87838655 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.969592003 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.885773037 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.868118521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.860633983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.905879653 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.906373636 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.857553685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.884192236 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.859910143 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.855608682 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.855449642 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872244016 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.166206327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.882344667 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.874160097 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865497425 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.872323827 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.856584695 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.906329034 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885184768 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.85955636 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.859340178 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.862464235 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.878231913 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.971399967 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.861127311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.860862597 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.870104479 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.164822716 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.881768101 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.85074175 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87517314 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.866975389 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.864937922 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.858522355 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.88938629 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.29856322 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.860311209 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.856821287 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.855353651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.85711247 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.85701141 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.853969793 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.859326553 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867347595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869006727 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.290137939 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.870910972 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.852986607 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.850882613 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.859303602 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.846809407 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.848823771 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861103808 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.86649311 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863175155 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.146050894 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873897485 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.847405956 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.863113443 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.850958135 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.325892847 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84694138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.847403674 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.287510849 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.854641172 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.324470187 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.857901699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.843226798 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.856648257 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.874808447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.150971282 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.857076026 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83875761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.846017444 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.837850817 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.849515141 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849131918 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.841197524 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.83584232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849842588 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.864515967 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.846484015 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.835347457 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.843186416 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.854242508 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.842146088 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.845864095 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.834529147 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.827543056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.842084938 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.835062229 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.834963612 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.838308171 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.836245181 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.842697479 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.273572986 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854350339 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.830621778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.826276629 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.828768728 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844679472 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.274381999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836986569 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.848398861 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.872664168 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.828867558 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.122904112 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.855388841 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839111117 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.831545313 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.827066917 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.817677301 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.119044432 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.290402656 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.842907712 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.824248331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.820626505 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838912059 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.827503314 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.818145445 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.129204193 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846393534 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834826523 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.944423255 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828509822 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.850210534 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817562533 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.822340835 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847830122 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831466929 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842973913 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.816640341 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830478608 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.830497443 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.810753847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.823249311 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.82364082 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.812213484 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.815754033 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806475748 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.842430523 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819292453 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819450653 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.828683583 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.92967684 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.809789152 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.101200631 seconds)
done (took 289.283771449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.873455947 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.803453106 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906095107 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.80079575 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.891459045 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.889054104 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.798652096 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.797999814 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.796676531 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.181082822 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.797319627 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.796196481 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.799703909 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.794390054 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.880347327 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.796462384 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.794483415 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.141321126 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.796320985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.867802529 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.791344053 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.790389606 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.794116929 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.176952493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.791554029 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.792540171 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.86391181 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.79228919 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.139679274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.792565988 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.783534685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.14040292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.880180117 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.806719994 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.799369597 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.797999407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.878484035 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.79225122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.873661818 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.870817376 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.893510112 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.827448742 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.797363108 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.789121263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.792765288 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.789858195 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.78639599 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.818696182 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.790668544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.784970659 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.130887975 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.793570502 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.792028819 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.782833904 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.781140638 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.806464535 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.782239332 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.785110811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.874108489 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.785530786 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.848473367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.167623506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.164336906 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.782903492 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.779624337 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.779623897 seconds)
  done (took 179.187289051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.850283863 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.858269868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.853811055 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.784571069 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.834838281 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.857297628 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.786376276 seconds)
  done (took 14.534745395 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.789356011 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.78194587 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83397219 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.834308315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.780881808 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.938597386 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.780516365 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.794835779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.778161455 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.835687993 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.784344898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.779281919 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.787473173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.777196473 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.828890686 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.792373905 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.8948132 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.781726624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.779229732 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.939385699 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.776405819 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.78470977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.83506978 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.7920866 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780461922 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.783950213 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.360778172 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.77495665 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773417679 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.775962665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774192288 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.820544055 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.774335984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.773518636 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773510062 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895417669 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.776427965 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773212086 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.777660708 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.773281997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.776377913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.776518043 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.776918442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.773174344 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.777672214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.801107423 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.777179342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.777860992 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.776768456 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.778206421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.829401536 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.775895511 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774476599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.774676286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.834064032 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785731027 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.779230564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.774662303 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.777606801 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776005714 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936621312 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.826211606 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.776997995 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82867552 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778344206 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.778216206 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.777459275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.777764436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833923517 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.777232636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836492337 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.774102411 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.940030817 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.803989357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778159077 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.782949688 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.783045428 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778402241 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.773085767 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.786984711 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.775467633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.780575532 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.78520028 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.776331482 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.215680714 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892830833 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888517924 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.774803663 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.793558782 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.786185798 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.775114856 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.832699914 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.778979642 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.774647989 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831582021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894780333 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.836398203 seconds)
  done (took 197.352152576 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.78625504 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.787900296 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.781040074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.796290656 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.781386006 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.781350848 seconds)
  done (took 12.41941899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.785634166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.781290268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.778785082 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.779480085 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.780030391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.780984451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.779145895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782513908 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.784721314 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.77985104 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.78068933 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.782241731 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.78119053 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.779916038 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.779574137 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.780159543 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.780566558 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.776645826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.78067089 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782009302 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.934620266 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.779365461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778243927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.782568011 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.785849796 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.777398874 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.789595044 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.779699391 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.778596485 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.791346667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.78320306 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.780073902 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.781342369 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.788827547 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.785723156 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.7829498 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784939606 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.783557562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.777847574 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.782226794 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.782802249 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782003643 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.780895985 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.783377307 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.784629274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.788988808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.787253838 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.790032103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.781715268 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.783536634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.782010569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.780546705 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.783977035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.783408329 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.787519478 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789822579 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.788885013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.783085418 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.782715601 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.78573234 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.785510226 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.785335026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.787981576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.786752834 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.781191483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.785227203 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.78655702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.786565291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782405458 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.782356118 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.786163333 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.781795404 seconds)
  done (took 131.244362295 seconds)
done (took 536.484712952 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.053214367 seconds)
  done (took 8.760506099 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.879387906 seconds)
  done (took 8.740712426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403145055 seconds)
  done (took 10.160473093 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.846449376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.850738106 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.834596124 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.82964696 seconds)
  done (took 29.130898401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.86190263 seconds)
  done (took 8.619153814 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.843234944 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.822362721 seconds)
  done (took 15.461593487 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.868391319 seconds)
  done (took 8.628389213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.893204463 seconds)
  done (took 8.655440069 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.851642948 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.841012578 seconds)
  done (took 15.463841343 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.812018593 seconds)
  done (took 8.56960883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.476624883 seconds)
  done (took 11.246225995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.835317421 seconds)
  done (took 8.610459197 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.881800124 seconds)
  done (took 8.642352697 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.998670312 seconds)
  done (took 9.755446348 seconds)
done (took 162.154535268 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.831959699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.826416067 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.827802158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.826277641 seconds)
  done (took 29.069373499 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.863990543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.864328129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.864629161 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.87606033 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.866725158 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.861650596 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.855511968 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.854741969 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.879938776 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.865210187 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.864954667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.866129931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.863556303 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.857149291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861639951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.862045924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.870771792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.860371755 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852055595 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.868014776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.826957189 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.870235517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.86193546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.826168595 seconds)
  done (took 46.424576804 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.023116245 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898178209 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.981978408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.879421795 seconds)
  done (took 9.536380666 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.875776239 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.877774061 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.889905782 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927828667 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.954576389 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.894154763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.848086181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.847252401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.833332382 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.877403284 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.955061613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.893926192 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.960524581 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.822447534 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.009006816 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.826304923 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.823848208 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.875899407 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.928865052 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.942228398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.823661562 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.87598327 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.878517094 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.893246171 seconds)
  done (took 47.08895851 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.822524179 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.832121537 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.826343776 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.821110973 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.82119081 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.821890027 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.827185001 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.822515982 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.841906903 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.821500498 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.819811397 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.820815 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.82223069 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.82118508 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.820007655 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.833166058 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.836161523 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.823731333 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.825221027 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.827959423 seconds)
  done (took 38.258141356 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.815222279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.670166953 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.169415502 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.073568774 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.81602747 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817696236 seconds)
  done (took 31.111065639 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.836542802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.886303185 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.830078316 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.878738931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.958945016 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.829357348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.823939067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.893019671 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932935149 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895247861 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844633314 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.851280243 seconds)
  done (took 24.209661899 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.81923156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818387457 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.821915134 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.834787128 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.833974962 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830080251 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.830967856 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.81801537 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.835242179 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.843025939 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.83159149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.83629532 seconds)
  done (took 43.707236757 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906387396 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.866486781 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.831799311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507763218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195827332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028382755 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424923917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147799343 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.821622528 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093324419 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926590058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944395956 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097567412 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330278267 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872898365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345180289 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145625814 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053002198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871338787 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577061908 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918107379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022071951 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.658872719 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911867854 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062158833 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.983956462 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.111854945 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850202098 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987086831 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886426069 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858960986 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851732789 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119506346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222266833 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950817109 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85409253 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460806057 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.562836726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.827629465 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.69983193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.650714722 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.978944454 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854358799 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843079191 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778847379 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98267999 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216423917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848513106 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.554359516 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842720096 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853889775 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937671885 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.847529512 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.664516765 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759101615 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844430093 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.843403696 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851632399 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414742611 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.021182151 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022942768 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.817371022 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.940117178 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6269181 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237675523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996571293 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.847998649 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849209103 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778561381 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.653271561 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90261524 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173999287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.865504382 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496143618 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152453214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001114309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788243382 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114859736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373372355 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817133882 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073048474 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846411592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780331452 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.791970391 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778899427 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112051513 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8846266 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.61760428 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891869034 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173652354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855253908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864050674 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869031832 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069117257 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.727703535 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846775614 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.733186651 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990692522 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867341943 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17543176 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780406547 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.849598798 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10359769 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.058681599 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.914546902 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380035731 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012166076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39794016 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.897974818 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99464923 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894114911 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.117059311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909932256 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022084274 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904974394 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847382249 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150843678 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425506161 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.982255126 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.954805907 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977092771 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175846828 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877060306 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930345967 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856489088 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848589391 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.702066203 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404357889 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.849524545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.850770347 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913885118 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895567661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848634172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797264553 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.477755944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95682875 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.863479874 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073048635 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410696721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160467775 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78775828 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199763778 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939060156 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.071831208 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.505756755 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.935333062 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111072106 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929371581 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.946668897 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896996828 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869227907 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949007905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873099132 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.995205447 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143007837 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.854818648 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.85465834 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687050488 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886602349 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85122308 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.855316438 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.605043027 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125589554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877858473 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855115875 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.740399667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.865431905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915400275 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856063638 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861393498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390718917 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565854471 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.858540449 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.440437775 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075539256 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862749681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.648693938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969686973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.936408541 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123294836 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917011183 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.786590105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.564190939 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.546215045 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854488434 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78879065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.85424179 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86358494 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865204935 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.052352223 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1272318 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898900235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.593512439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.89891581 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863831301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.859174645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855712196 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363988641 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035908018 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037006138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898032788 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999614825 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.868302602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788231183 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.858094259 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859086806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854784805 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854360958 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887455311 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.60608242 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237493457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11443932 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.468960789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867873528 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.637403329 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.917256422 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.857220358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596105932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171505234 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.970989005 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868638466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.867566943 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.679283589 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.56773537 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427823279 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168059692 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163743059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297203778 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.062955202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886306253 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193887416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791383097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41617031 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916880828 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198799849 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801516081 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943110885 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513172912 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209222482 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871418802 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08638526 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246111756 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.668008995 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016421214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070629873 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893994425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.998741558 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817190892 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.380240361 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003279983 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.632577 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080526084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192208983 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619493556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997532722 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.859784169 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538906898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950547577 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569286232 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.032860848 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.037178354 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876367595 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348849331 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865998832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085076723 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20797182 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.02224225 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.980974301 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796058329 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8707437 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870186583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862230183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.857617336 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.741115795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.113398536 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871748455 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796111932 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.965520218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148688913 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.765455143 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.866064669 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86147153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158452425 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396014488 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032751818 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.950728782 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.377217651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868707866 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794807119 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795137415 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.554903414 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867459243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.836237303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069834703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.973903775 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779130306 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928258434 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108930699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118729252 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.876496149 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131336146 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142095504 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563732536 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885654114 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.961611313 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608246773 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.982148694 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861319348 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097962006 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617139875 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08749708 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.878794316 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.818397984 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.862091462 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076201929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86335045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.819916506 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107308087 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.584084845 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.86903756 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306980867 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940007746 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.823212087 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926473847 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.962426823 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875492967 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943285203 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876592153 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.8763921 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876035798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911140594 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838423447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00257013 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.879924654 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960381886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045900679 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.390157735 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.870612893 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140894975 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229329554 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193170807 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928393846 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866387941 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874818685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800583172 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013281569 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091801408 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139122527 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.99760479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.983290913 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891179051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6213384 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074701674 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107639673 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141852673 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.762099006 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356005934 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906946557 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.868061151 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877513281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.079947345 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079256671 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174275159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017711112 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930623804 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225931976 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142147236 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.867778864 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867606911 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457274584 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.872797375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.652815991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913999857 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85317232 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158787079 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87947925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246275005 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889039358 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.025952879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.642231817 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71070471 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161916501 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.860057174 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934944858 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141756829 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255769112 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187946376 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936623153 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881009929 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.980184324 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016262438 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.748399232 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869827043 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86987608 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918594112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.578413608 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879136327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145998177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185704256 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.866463114 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.750164633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892290918 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.881542224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095357911 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142235903 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127384749 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8803572 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876487419 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.685095844 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146659828 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934276354 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803856913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.872721725 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968461009 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11694934 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891253142 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.323772073 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.58229822 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143804482 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.877555823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894136617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.015372453 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236464465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199389242 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410954561 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080393393 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463015537 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427768315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1716559 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.876632033 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.01163674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174641521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874493459 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.937168549 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90925986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142293772 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188331868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.87903515 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779123857 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84559804 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216776225 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439128559 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811438569 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882744203 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.933246356 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873850569 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003276847 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887040128 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.757674591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014533014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.654800646 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157518091 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.878570293 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.861970464 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.668782103 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161301168 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91051561 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019307273 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875275658 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.550136861 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.226526308 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.131951398 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.943535613 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.881674082 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.87797349 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874712331 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864142998 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070730002 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076650272 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153397397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.971280892 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.913407861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879761508 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.093904011 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087533646 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.856960308 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030547864 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942845793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919039032 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.780803253 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378037633 seconds)
  done (took 1671.600390705 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900656044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.891766656 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.889353044 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911468054 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905157898 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908408256 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917904946 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958801154 seconds)
  done (took 57.092739129 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879817116 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.09701048 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889643923 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.880142301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.888496648 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.87966631 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.050321167 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.889503998 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.888277892 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.89003851 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.880706291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878625361 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.180383581 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903155771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879688774 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.861208557 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.887183702 seconds)
  done (took 74.518404075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.878122357 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.080299469 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.912818337 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.895618236 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.886858808 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.880650229 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.673492616 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.901969767 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.882789481 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.000789835 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.515236652 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.883359133 seconds)
  done (took 87.202626643 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.890934862 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.885852984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887596802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.887250262 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.887604198 seconds)
  done (took 11.253192115 seconds)
done (took 2172.860219467 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.243699415 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.107888647 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113134297 seconds)
  done (took 6.031165454 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.025504055 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.072791594 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.193736526 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.199158313 seconds)
  done (took 10.301122978 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.16533509 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.260954112 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.0800584 seconds)
  done (took 8.31190719 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.274190117 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.88758567 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.987683285 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.874400083 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.876456812 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.878328268 seconds)
  done (took 22.437535177 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.879338099 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.882455936 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.880286272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.882134517 seconds)
  done (took 9.332316238 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859550268 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.659505556 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.860077895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.875925696 seconds)
  done (took 21.061970471 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.627983635 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.638376131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.622401644 seconds)
  done (took 9.697475114 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.613967367 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820887451 seconds)
  done (took 9.241773097 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.141478557 seconds)
  done (took 3.949137446 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010453175 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.143350445 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.400705591 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.403338383 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495220562 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.76521162 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.190462374 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.126504254 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.282727731 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.329416736 seconds)
  done (took 24.956374596 seconds)
done (took 140.523057313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.256875225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.244467541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.080106703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.217364482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.103635725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.077704094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.098959156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.20035757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.724826367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.723594559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258804808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105518309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.048688876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.243336195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.049835986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.11985775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.098087757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269941562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.910747074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.109831456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.101491739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.853411594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.101055187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866463726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.102968111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.03035671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.445636175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.122497969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06310558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.449449914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.032570186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.260913878 seconds)
  done (took 171.181615961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.794993568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881795264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880276055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880947099 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.169453848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.882679811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.881249911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879972296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.031550316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.021798342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881489198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.155428447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884359027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.881531941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88429839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.881090569 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.15565757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.832016486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886118864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891047927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896888282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.095426785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902867591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.150199408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.216932537 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912535175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.883607488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91939658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888622342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905427329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908631315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.88203303 seconds)
  done (took 208.015135818 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88266751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882316603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887527483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882789459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.889631722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885048718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895387146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.883100062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.643197781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.669040674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.884262715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.886232017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886363496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883210935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89060401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887905787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.898387292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900254521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89474563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.898305709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.9043279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.6065792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883886293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.597580402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.884585141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.888581416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.884530033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.893001306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894050505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.895509194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897671771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.884182855 seconds)
  done (took 221.269392569 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.079134527 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.889546076 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890991192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822511203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.891472742 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.890622008 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.886116252 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080271209 seconds)
  done (took 19.73910636 seconds)
done (took 622.027470343 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.458778448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.227610962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.075179083 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.915919884 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.166950283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.955105742 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.911927374 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.980381219 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.647355117 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.985119791 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615700216 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.93322336 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.705809143 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.937413563 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044340685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.970104187 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.463946643 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.550886789 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.098896296 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003623103 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.090401618 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.920513325 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.991727575 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.680576273 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72972876 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.931358005 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.111550787 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.467513646 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924569239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079827553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.668807265 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310168062 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.929517875 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.912666944 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.962275887 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.946474537 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.278050061 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.927347418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.039183903 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.686235344 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984166887 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.524479944 seconds)
  done (took 104.561660211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.882069406 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.879739625 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.878269197 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.87901014 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.880222509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.87941378 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.878554666 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.87891849 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.88012082 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879290881 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.879211618 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880929711 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.879495367 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880292112 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.880046114 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.879293234 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.879725983 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.881286375 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.87980471 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.879618889 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.879730805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.879858736 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.879567678 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880511399 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881175068 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.880261486 seconds)
  done (took 50.708736422 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.893988231 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.038037499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.124864308 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.918146152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.896651032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.89961668 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.915688706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.900768549 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.899278933 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.899132187 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.989676869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.903137751 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.916656426 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.123797464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.91269235 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.896143598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.894331962 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.896834165 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.046159259 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913999449 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.918051889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.901162446 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.91821152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912011438 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.899347726 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898129791 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.901917555 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334569817 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907178016 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.991698928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987244579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.919661963 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.292887048 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.13361449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.963884257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.905432053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.898540621 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.995706201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.904707506 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.899264813 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.917048609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.903277247 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.124424977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.396555073 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.911942353 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.896773987 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.34807263 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006000988 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.940878866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910206644 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.124581586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.915565882 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.898142767 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.899463364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.934027964 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.909510091 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.897213083 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.208645442 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.911214616 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.9177177 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.905111619 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.898632942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053040195 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.907827078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042361853 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.907123836 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.906722804 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.900340556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.124926635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.9145446 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.392633377 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.912735494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.898093181 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990729491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.049124977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.372425425 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.914582301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056579309 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31072156 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.925565279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.908666467 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.326457241 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.930130989 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.909333272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.900173435 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.901274694 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.899861544 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.944147613 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91807268 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.343482665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.403627141 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.225755439 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.928271826 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.917182735 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.901793206 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.212611978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.90726531 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.899545845 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.119637368 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.410319032 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.915932193 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.909108265 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383816894 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.917062079 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.921562326 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.91128349 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.128209963 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.917055405 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.943272716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.90005418 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908291192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.904361397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92224733 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.909549437 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.899222672 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.378844073 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.014184834 seconds)
  done (took 235.232060242 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.896949883 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.90517027 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.896333989 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.89496081 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895355613 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.902860411 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.896597737 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.895085171 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.902448203 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.895736286 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.897040971 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.896529168 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.897890971 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.902075321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.940755808 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.903432157 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.509966944 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.895996079 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.895560633 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.897314127 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.548318216 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.903403493 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.897876649 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.898035606 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896560226 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.89563699 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.902246745 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.931919098 seconds)
  done (took 168.323030893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.902636841 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.018286741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.917547503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.930681939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.909675726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.899879195 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.928192843 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.92010835 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.909743417 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.901182307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.900224954 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.966815806 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.91436512 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.004665114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.937863043 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.934190101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.010135505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.911607134 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.901406222 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.900680879 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.934307566 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897087774 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.966379122 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031932922 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.920839431 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.020420951 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.908107711 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.903624493 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.905257793 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.021870958 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.918904519 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964403124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.932177688 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.922616944 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.028032331 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.022121739 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.012670078 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.933615777 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.909774736 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90157778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.902251441 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891880621 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.023154264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.923098105 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.907507561 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01195909 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.923141534 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.905566173 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912996427 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.902787397 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.919983413 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.925072907 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.97377035 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038810974 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.937367106 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.928608684 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.930977863 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.186066834 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.914819342 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00671602 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.896953686 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023664831 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.922947863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.891038402 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.903552612 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.910065696 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.9328921 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934888592 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.013666976 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.914404108 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008536866 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.941524219 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911592316 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903629414 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.907344679 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.023613334 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.026695283 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.940884377 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.945275467 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.939018462 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.901158395 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.908555482 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893886676 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.925577218 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.91036831 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.025217119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025366932 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.912477227 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.906153822 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.907164301 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.906851348 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.933452713 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031973677 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.942580189 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.00223416 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.976559291 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.98181355 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.920153113 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.918490522 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.909454444 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.971818999 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.920774921 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.917176729 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236532523 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.980155415 seconds)
  done (took 206.331138969 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.001967928 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.380771255 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.963685242 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.963730388 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.201975455 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.341623262 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.710271157 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.956069286 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.955874473 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.984553455 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.11453944 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.023843183 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.9704015 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.944945778 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.368452987 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.948312131 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955244434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.978791873 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.960602469 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.543331161 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.257934171 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.074916397 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.954981187 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.078247768 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.939703122 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.244360895 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.28001295 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.338082065 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.993776402 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.30123635 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.285165026 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.642654049 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.163817682 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.200470281 seconds)
  done (took 75.864390001 seconds)
done (took 842.835905086 seconds)
SAVING RESULT...
DONE!
