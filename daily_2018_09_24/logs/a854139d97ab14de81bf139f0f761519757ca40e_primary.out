cset: moving following pidspec: 31049
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341843884 seconds)
loading group "string"... done (took 0.485694015 seconds)
loading group "linalg"... done (took 7.840063158 seconds)
loading group "parallel"... done (took 0.176224244 seconds)
loading group "find"... done (took 1.20780159 seconds)
loading group "tuple"... done (took 2.169317257 seconds)
loading group "dates"... done (took 1.360834546 seconds)
loading group "micro"... done (took 0.250917946 seconds)
loading group "io"... done (took 0.679641864 seconds)
loading group "scalar"... done (took 42.691302282 seconds)
loading group "sparse"... done (took 13.364753089 seconds)
loading group "broadcast"... done (took 1.164218345 seconds)
loading group "union"... done (took 14.78744899 seconds)
loading group "simd"... done (took 5.130700604 seconds)
loading group "random"... done (took 10.22293743 seconds)
loading group "problem"... done (took 2.040854575 seconds)
loading group "array"... done (took 22.714082395 seconds)
loading group "misc"... done (took 1.478548766 seconds)
loading group "sort"... done (took 3.733496341 seconds)
loading group "collection"... done (took 19.832698408 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550655973 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150195883 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142066043 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.162610971 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.223068009 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161082331 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148392393 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.120652058 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004335587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.189406649 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.160277873 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.536871983 seconds)
done (took 5.287574651 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.23300076 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09763815 seconds)
    (2/2) benchmarking "String"...
    done (took 0.111554786 seconds)
  done (took 0.89345341 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080422905 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152387936 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098141345 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081262102 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.099348068 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.099685288 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083045738 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096275208 seconds)
  done (took 1.396246672 seconds)
done (took 3.295661829 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.752269193 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.299248157 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2123262 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513263729 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.185216181 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221299745 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68215814 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35255568 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.268043831 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104570365 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154639773 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.400277244 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141385359 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681154493 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094482522 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.131973238 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181042437 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457675527 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083540569 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113330026 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120063842 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145615086 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133857654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096168341 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190750794 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086267007 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.208400896 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112678821 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084090641 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.298492199 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205894845 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689381404 seconds)
  done (took 11.122642901 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119866516 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142133917 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101280519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142951151 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140696472 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103747211 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104135854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084016316 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128265377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183331457 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137572724 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146035095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082632242 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102355024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106926033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252264292 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126198106 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126065873 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088812898 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110112712 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14209964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101729813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114651075 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113179893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170652073 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211303596 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115373317 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130260719 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.10105384 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116915575 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147220668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148988692 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099056187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084520718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180217861 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12839678 seconds)
  done (took 5.337283249 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199917543 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126644178 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180275325 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170176159 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15108872 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167461904 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123645649 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25871468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.127209802 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182541279 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150893948 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114755096 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120991217 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103225596 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088710461 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102568725 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.647002766 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.171354669 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142477369 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122226636 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094359205 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106874363 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.130523703 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091094343 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.102131888 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103260257 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118019249 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.324519111 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.172944133 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102459075 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.197158779 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125257589 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08614929 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139918089 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215950385 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115659228 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140275189 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100775214 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08288345 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.187637202 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099160542 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090219152 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101748201 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12749903 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137664244 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126154715 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106366852 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101398936 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.215521976 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099412724 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102701116 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.015357164 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183931176 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09541154 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100152187 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344198311 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102440337 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101854038 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080069669 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.315535104 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140122731 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084482903 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100286393 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083356507 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097753845 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084600109 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39194733 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101737065 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.742429348 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085853448 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110288417 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085855308 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101363326 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108921895 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091606719 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119846263 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08326107 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103627082 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082737095 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101362238 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102558978 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096228359 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106498762 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083223041 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168945005 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083055662 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119337429 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130772825 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088137281 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099707753 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137238765 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102425974 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086827443 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14214735 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083820555 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11440488 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105097347 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14680762 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084547389 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194525125 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095491489 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128866471 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104219114 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118175637 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114561752 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102951611 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088208757 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099242199 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08039328 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168315707 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083652395 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100968792 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101987436 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098095398 seconds)
  done (took 23.349202573 seconds)
done (took 40.48994136 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.355100354 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108301403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109054006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108851484 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107687162 seconds)
  done (took 1.543152662 seconds)
done (took 2.277086223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296307339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183817808 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099659968 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.178072668 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097454491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.185261943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.169987621 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117233381 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.194346251 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097883285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.172953321 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079914791 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098615584 seconds)
  done (took 2.731797184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09944863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12048409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087037026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116595986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079820251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11647296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114404478 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104738259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114818003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08820757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097668606 seconds)
  done (took 1.871611873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097903357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11790446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085790686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114935299 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08061574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1150758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09671185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121589115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114952418 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089664464 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098684897 seconds)
  done (took 1.867011892 seconds)
done (took 7.196433155 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098765844 seconds)
  done (took 0.825273089 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.061040682 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.398465118 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121859909 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162193481 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342491694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193288951 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573701291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133265108 seconds)
  done (took 15.9418092 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.155509366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086289593 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.107761993 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087488028 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108246616 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105906779 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090312582 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107684814 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090546871 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104323815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103659109 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091181844 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104303446 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091135986 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10364343 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103772118 seconds)
  done (took 2.43720696 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125707119 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12481345 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111513301 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.115157713 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110686164 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091937993 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.11197165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110829919 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089824675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108937703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113149145 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094471332 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108351629 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100369131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094417051 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113325788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107445216 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093493268 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112779514 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11215723 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095105037 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099818495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109767039 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094907689 seconds)
  done (took 3.392995214 seconds)
done (took 23.328537206 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169588938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114016357 seconds)
  done (took 1.021666831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107604759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.124691743 seconds)
  done (took 0.972856548 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113111592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100699521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141934375 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121189505 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085473538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101330729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138330297 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101892908 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083034429 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.10048608 seconds)
  done (took 1.830978333 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090689428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.120592959 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112277969 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.107484423 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115054086 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105541484 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099956019 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10744255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.123439039 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085066692 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111345098 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121035528 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110984712 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105369494 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.117710179 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109819716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.095937132 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.109103082 seconds)
  done (took 2.691269073 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083204172 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105649465 seconds)
  done (took 0.933420755 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089762591 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102317377 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08809509 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105446397 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101566982 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084716743 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102944776 seconds)
  done (took 1.416989549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499907306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.14160564 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266624326 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089055299 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127068045 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31804826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103116149 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108770563 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089712194 seconds)
  done (took 2.545864212 seconds)
done (took 12.157668093 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097365522 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.123036874 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.121561889 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.504099106 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.126488079 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084014771 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.166666077 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.265782976 seconds)
done (took 2.238964382 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154807373 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336597505 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121151749 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069552739 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099382071 seconds)
  done (took 1.379273359 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083211898 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104050084 seconds)
  done (took 0.938254277 seconds)
done (took 3.225269995 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084898029 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137987342 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083825756 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100919313 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083401626 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.102222224 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100122307 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084154493 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101240821 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083632004 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.101747451 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083953761 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101276345 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081282044 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099947399 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084387143 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098449182 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08151336 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098732508 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082057398 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101604062 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081780305 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098519386 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08240016 seconds)
  done (took 3.026833777 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11437592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102640271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108208367 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091440442 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106179547 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107683642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089734498 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101629147 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090227443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103336589 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104395469 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088121527 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103679161 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105536243 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086814989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105940132 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090391102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101591676 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103870188 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088066636 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107390444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085077098 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104146223 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107902041 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088960779 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105314748 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.105142193 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08478403 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107827149 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088221369 seconds)
  done (took 3.734490145 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089396541 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099407366 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081844751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107115393 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081992006 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103784813 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081856254 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100151475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082501707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099790591 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083108629 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099581276 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.099089605 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083129475 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101526948 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08508563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113948271 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082876771 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099789372 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082256825 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102536125 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082023655 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.102815803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081804271 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099471288 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081352809 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099565903 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.098936474 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082564518 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100273833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08488068 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103081052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081535726 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106967216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084820364 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.098871743 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08570117 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098662628 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082724875 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.100107827 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082582314 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099757243 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082215374 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106000886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.102440719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084217526 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.101502751 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083729611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100929008 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085622549 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098954616 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082258659 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102289114 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083093638 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103610882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099217294 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083079812 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099197571 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082931446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.100220502 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081575833 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.099400666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084883705 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100416252 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09825845 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106499402 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082379124 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.101013111 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104454335 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084524721 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101675951 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096386003 seconds)
  done (took 7.483002303 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087983239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11105977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084262124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102158117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080759547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10029348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104582802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0834668 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10227967 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100464179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100144912 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101874541 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083869891 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104461332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083656503 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103051644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092086811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098587781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100801581 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086028763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101685217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086762948 seconds)
  done (took 2.863904876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220820159 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110081798 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147957612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129003173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102808178 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116534095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107811173 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092059234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107275847 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106968762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087697402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108326616 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092629419 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105453252 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106988785 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089981429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107816233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107884206 seconds)
  done (took 2.809406602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097371915 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103816505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126254306 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085574191 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10485023 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087784273 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109552278 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119002064 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087794251 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10395401 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114618292 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088611871 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105853861 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085439331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106462216 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085589992 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.106970882 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10395178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097152555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108806802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11000257 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095437547 seconds)
  done (took 2.995296213 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101215819 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105938105 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124140339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089024497 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102710018 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086286435 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109777499 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103316403 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094110531 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106388885 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0856716 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105081567 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110188338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085303364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.110237216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085530259 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105410481 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085411331 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106288235 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103371793 seconds)
  done (took 2.771987315 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124570035 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104819739 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105456216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111519232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105462669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105044462 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.221413837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105090092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105476148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113754962 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104781921 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107079158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112135152 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124970247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105944101 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128465542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110666429 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128758046 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10682998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088610126 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130856437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105346532 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12952245 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087399097 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105997669 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087093575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104743299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124603346 seconds)
  done (took 3.963103239 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085246051 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103410901 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08247896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101708672 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082014802 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101006514 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08312777 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100497063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085267031 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10015721 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085644144 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103052166 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08634111 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102699028 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085616128 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102926001 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088897071 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100660633 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083503664 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100936452 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085598094 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103210625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103456924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082472101 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101294295 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084312379 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101026173 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082904051 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104441061 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082458305 seconds)
  done (took 3.566924439 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096024184 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111676644 seconds)
  done (took 0.97928805 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083617876 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121505827 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082676261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107691164 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110501831 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086025709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114555798 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091950678 seconds)
  done (took 1.568306223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103414503 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.124061458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091803062 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122286403 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.119436764 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.102294457 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166473877 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.110648256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110815121 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083317039 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121722807 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085309724 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111175681 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085648925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110509191 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092809283 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10501644 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11994928 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093541961 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103527962 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08823386 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115802331 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10729828 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083073674 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105971351 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097391948 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113916103 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106673831 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089698558 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114052738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092360994 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098466494 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104997888 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091131019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.105982813 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099794282 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116610148 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107685378 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094790942 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110394596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112955562 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102663598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110911835 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09252842 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116005004 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091947809 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10963498 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.105854052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083910822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107393319 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08443123 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105094777 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081019891 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113478077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091439723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117774619 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10337304 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089240877 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108497304 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08930189 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111427773 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107238913 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088865826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104732679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094265621 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108946865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094049861 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10355565 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098399328 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087078573 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11460722 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110438792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113566018 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.111100724 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092210173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105441672 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089971789 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110884149 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113274046 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095315219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.109392838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107748235 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113581947 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104660654 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089772429 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118509715 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085091364 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107738759 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102569663 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102902862 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103345306 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087155701 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102458055 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114216925 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089944671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105423873 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084458136 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112326208 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08101776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110196604 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092652446 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105723135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114934749 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097938216 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116566319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113068427 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097841193 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105324778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090233918 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101965132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093343958 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109007889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112615029 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080026002 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108365194 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089948861 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110902895 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112388707 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085032236 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110000679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095221682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112917427 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08565708 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.102050921 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108580338 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091530722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114733715 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095386606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104581315 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.084884026 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.10386094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110032037 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090476403 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110607702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097601446 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108512036 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099375464 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088088785 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116235029 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095727353 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105060008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087209488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110121009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106031446 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086109717 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111380672 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089277141 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104949458 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091804052 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107755213 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.104399872 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096216094 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108284368 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085319763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109106323 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095764271 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108100611 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110983346 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085603713 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111730145 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092159512 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104246868 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105447319 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085824696 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115330676 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089805204 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10409562 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08445693 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119732903 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103720374 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090185118 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104484771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089505585 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110938724 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088229342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105484064 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089238874 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13784466 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117841476 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092819466 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113296244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115745192 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09187883 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106787497 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.091501508 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111641856 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111060099 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09473311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111451421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098012212 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108132901 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083650513 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112388778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11474471 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086437234 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106769421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086769286 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110094699 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113136979 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091033529 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111163695 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085579706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106280641 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116242898 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089658101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109605587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086635399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11135012 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085887379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119254577 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112436015 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096283762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109626856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085882308 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114621963 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104664656 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093738252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.103799201 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08497587 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104514838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094000738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106505672 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089488137 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100647016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114277154 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096092597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105905248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087147964 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110294163 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115279952 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088272146 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109603741 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091320419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112517389 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120859478 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08640582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109843621 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096936089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111294277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081849421 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112067933 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104997124 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086994248 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105816126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0861688 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109138208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102884792 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111727166 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101053674 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090644844 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105175289 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086112969 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104333495 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094913994 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110141029 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108833244 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097065712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112202723 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092796147 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110224454 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110736028 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.094610058 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112650914 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09065361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111635569 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090714891 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105729153 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108868023 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087122732 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.107749176 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089749351 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112223095 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087604536 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112535499 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090450682 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107170055 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110081451 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093135172 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10753809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088662909 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105730538 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091841607 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107793664 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106957962 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090444767 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.104685151 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095525791 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111568795 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095589441 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106495633 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084284678 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112885212 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11034153 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09818354 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111908823 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112960972 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089043608 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110529985 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09048602 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115948183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085167404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116668024 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113610457 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089205689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109296632 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08787891 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109035822 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087198486 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108018579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112830145 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088054951 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107160619 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093915478 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109314907 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088163702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108696293 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112895137 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08788325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109169736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082672088 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105883392 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087539392 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111571372 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095157109 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.113025569 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110072595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086589977 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112841516 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087693045 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103477947 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12263257 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104303696 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112044147 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096876908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106359217 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109427925 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098212896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100930896 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086551825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107729062 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085116496 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115177639 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112297654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105957072 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107605305 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087659645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104722245 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093480806 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105891962 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082912996 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107329014 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110761311 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091082256 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105373203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093182305 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110710049 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093355618 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114856102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106264098 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089411715 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.113199867 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084883687 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105641195 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087170868 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110034197 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09382401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10516226 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103997621 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.092332645 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109518036 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0892121 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10691755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090184969 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114666415 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088470264 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111073494 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116466192 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082578524 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110172983 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088600051 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111599324 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087294303 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112470628 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110580365 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094479431 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115324695 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09225738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108483385 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107744012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089130654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111323467 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091511571 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111973134 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08731637 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113377566 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116433294 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089317567 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109505416 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087651886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10819599 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092780166 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112670837 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109505915 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102688663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110420625 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09094324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11401628 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.112381218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091761487 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112588294 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089976231 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115042736 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087136604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115961458 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107543399 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094122327 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10955956 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085786526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107347794 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088411332 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106567132 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112425284 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093906178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107136501 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087610046 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108771787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090835487 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116463046 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115979115 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091325278 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111356341 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086316667 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104869701 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095165607 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105626007 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090154548 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111458709 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114076028 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091564805 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107804397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087649233 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115551833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114905808 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093685787 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105442274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093533654 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.114161327 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091185796 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110137078 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108434462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090865249 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113293447 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091545909 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107251848 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097722483 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11329069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114479979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090486099 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107997503 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088998479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106441137 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.094356787 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111107513 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115804192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091356431 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107802482 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098272407 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106923333 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088288933 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117778928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107341025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096336586 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106304889 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089871105 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114434918 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113589082 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087687361 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106994288 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086504584 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110062214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088166381 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107517944 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099447266 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116598358 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11136969 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089508171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107186409 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087463837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10740952 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087891668 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113641737 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110104519 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099212193 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106836467 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087534054 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.106751577 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0889738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112175839 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111854922 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086803043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10771465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087163053 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110928565 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096775978 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107813877 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092845357 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111907776 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111285541 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.090633264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118207444 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085880493 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112359669 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120833017 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094555994 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108627326 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094410638 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117451062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.093173588 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.108296714 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113670426 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091271682 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108330908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094466036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110907893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123602621 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092177117 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107853258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08844127 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111679453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088199411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115830898 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115288103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095089789 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113616771 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091020257 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123879059 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111676457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095570934 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110344914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092686731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108509036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088846042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107897127 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107140139 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090592421 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11399015 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095089084 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123895706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108201403 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10027723 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1172418 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094380891 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106142035 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087822386 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109284294 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106811643 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094402601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107335808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087787139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106992702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087822948 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109538164 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095136455 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110999879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115209953 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089603749 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102845091 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091670043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111885975 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089960772 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106093763 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093654648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.115662517 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115829437 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101288527 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110163856 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090809931 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110644937 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090238665 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108654861 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115316929 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089114798 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112139388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088179187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109655173 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094736276 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112988647 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120467482 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091374981 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110912023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102042524 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116825077 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106313366 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087011129 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115396571 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090885637 seconds)
  done (took 61.768707657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155930196 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094794698 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105140702 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085370425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124683408 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108944502 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084789356 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108353753 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08979248 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11188571 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084823762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105713037 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119935391 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133867191 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123133841 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093182414 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10526479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089065295 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104333691 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08953179 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120132532 seconds)
  done (took 3.061238049 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113072477 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123597931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12148456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125840992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095073444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122775892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121493329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123252886 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105962248 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11796009 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126234724 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123283326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097068227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117374971 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117471306 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099201368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126517453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116380823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124427599 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120727578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1000696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122075161 seconds)
  done (took 3.379247676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096524592 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112247172 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094067531 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104177373 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08949972 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104219806 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.097692454 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10644492 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114058529 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.088322289 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10793972 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.088028968 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11365902 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084936784 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.109360502 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086715702 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161381991 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114443923 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.113189025 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090420675 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.106584008 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091338607 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10751626 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.088098123 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.109040653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101833119 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11094524 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.109574568 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089361336 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.10777678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093414502 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106733499 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090486714 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110136504 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087633532 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108307316 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08918395 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113890834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.107811118 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.090524247 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110541115 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.088846073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114081071 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091126056 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.110693451 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087889299 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.111551634 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089783316 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.105704618 seconds)
  done (took 5.825836472 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122397184 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163877764 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091665606 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155946156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128886931 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123778525 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093895577 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132714055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109191623 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113754216 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108867715 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.129104542 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114182779 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119096856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097645057 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114310642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094696574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1101241 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118674741 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090178052 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119264892 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.117871259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.128879701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10565896 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118477655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.112906108 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090297092 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.118398464 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12504983 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099039501 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121155457 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120095821 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128649743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092445929 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110008302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.095543163 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130151375 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.114634898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116922759 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087831525 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116485047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098666626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118858489 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130870381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114463206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095547116 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114411523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086376839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12673341 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.117330177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.123757708 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106439615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118954111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113621288 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099485829 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129165808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1152396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09159266 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118502776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124282644 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087620752 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119865397 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126718936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115906646 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10308494 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127852131 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115706168 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097885539 seconds)
  done (took 8.737249597 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12230077 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.123107878 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132905974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133666772 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101018995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122595564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122053278 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123106485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101545236 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128613857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122750045 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170958785 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.096445923 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127323408 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122528585 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122625623 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102248865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122606972 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12171015 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101433024 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.123310985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133588692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122755119 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133436892 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131057893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096434918 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122292279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121866887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112737534 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122968568 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132707875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122485501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101865667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133186687 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133126825 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.123013685 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093170824 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122828631 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122004666 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122469016 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095931742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132443008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122949365 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096600732 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123316655 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121673935 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133488811 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133197717 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106771865 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128969351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122038194 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13415518 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101428672 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123084325 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133473599 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138204587 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133253737 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13314378 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102040956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133792801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133329331 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140005197 seconds)
  done (took 8.40837555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122983699 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12655868 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.133577373 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.108739821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089104615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119901606 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089307113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108985899 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.126085832 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105276198 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128654051 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11863103 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123694423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108038604 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119848081 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123377025 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120107376 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09897679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126457965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118987746 seconds)
  done (took 3.153064901 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099849772 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13281132 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091250333 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.121244506 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115859412 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098491266 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115908413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11497008 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092800327 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11448426 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124799278 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104311077 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112955303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119835153 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103772875 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11910555 seconds)
  done (took 2.620832865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104736361 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134078226 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131884969 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091264565 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111412062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109189563 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09554123 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107425367 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087827694 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.129671327 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112404482 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097050883 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.115170542 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089585765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109792558 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097635495 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10861148 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110836428 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.094332151 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.133368415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123089986 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090488486 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115866409 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093285647 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112275105 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11822039 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092063121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110606236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089113518 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.116733932 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111896315 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099510078 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109603579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089230497 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.111078987 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110019692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.094414098 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115291144 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097555744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115504778 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111188226 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091603345 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115171077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.092763573 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109263881 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094322073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109593939 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.119398257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089741499 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112178237 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09452409 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116495469 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113444195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103555297 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115989142 seconds)
  done (took 6.713679444 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106890024 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116792658 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087190622 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110694068 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094903323 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115331585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115955293 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094855282 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113847658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088937213 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114398135 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116967304 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093826479 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116000274 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093229491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116699188 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085769777 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113872462 seconds)
  done (took 2.740620409 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098692379 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112471227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100198764 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112750461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092402526 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115929803 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107775503 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090487914 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111022404 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091974247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11215281 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094215391 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111631268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093898019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113392463 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112499365 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093863583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111062017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091658563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10857692 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09437501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111876276 seconds)
  done (took 3.129606842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.129286705 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132529945 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.098776216 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.248475009 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.110532043 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.140713439 seconds)
  done (took 1.70630291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116313787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151131072 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115059581 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09584581 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127954581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118114386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097212819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118316603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129875096 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131251912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097744447 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130246168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130879215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130752231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104620487 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127382234 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117986444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09731535 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11458169 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139584697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118264829 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109553281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11886488 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11766093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0977501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130563352 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130408845 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131704345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119249061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109243889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125781455 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11862164 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130470769 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109688332 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117657082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130038067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097733059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140271801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125851598 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129563552 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116886645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10714477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130328778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1257929 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130375987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098022657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125423818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119274459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097778455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145054224 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126505008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129504911 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126261776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1307247 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108405275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145988456 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131969371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130550599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127005079 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131768754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130993945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105797225 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129911302 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132898547 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127479954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130685879 seconds)
  done (took 8.888881963 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132910475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116682158 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119684614 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131481533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10895661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119315989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117993324 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097762702 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119184338 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114988326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162469457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098033516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130860599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130259259 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119310458 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097084898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120625293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129929032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093176763 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168184249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098595223 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130831719 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130682769 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130534476 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132766697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106319254 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120047392 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119245353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097855785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119291279 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126308797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099077459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130830483 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11570585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130611305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098791794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119670048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125456686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09850069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126653229 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129739709 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139414721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119983415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098266789 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132394962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119974104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098041633 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116019768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119043868 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094234597 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131393496 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132762324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133273019 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130540594 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098404675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121115921 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119691546 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098527326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120346693 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126615377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131110754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097484887 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143817968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120216221 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119769863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131485919 seconds)
  done (took 8.759730547 seconds)
done (took 165.407597509 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108838513 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1483108 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.1054247 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178494195 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109200569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123545941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140328601 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.103262304 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115575869 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092411363 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115890438 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.115730812 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158553177 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108518953 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092235153 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115934812 seconds)
  done (took 2.779124016 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211444109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284557538 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109615731 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11466189 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119557497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093256881 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112450474 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101046595 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11529444 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092379838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114495488 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092430995 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.114186553 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092618346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116755268 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.113432216 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092927802 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.113873054 seconds)
  done (took 3.063466044 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120824186 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155907615 seconds)
  done (took 1.130936945 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128725317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19291526 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3133827 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165207846 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.150180527 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11518232 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164927416 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.141154955 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.217719067 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133738949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132856941 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126443283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.129174201 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124737795 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123655625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104573612 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152671248 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122845622 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102244986 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126320562 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147920564 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092332845 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125125652 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121650058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.200372618 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.107046233 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114236668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090817389 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126852957 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.123120169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099441558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135545891 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130035606 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176131655 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.132604211 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171642627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128884644 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119923114 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.102213615 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.12017216 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128716799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106019457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135444608 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12720148 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094766748 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127984626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091271844 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115650898 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121986804 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105819427 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122997407 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120786793 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169599217 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127669582 seconds)
  done (took 8.085722903 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.845382056 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164409121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120889233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.925037487 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147955585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133793942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.813888498 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142063632 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249431474 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.823859038 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139990407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105982827 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247915711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272691813 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.993038157 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324003801 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.699320512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108959518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148275769 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164152178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125358226 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144079285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115467958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.462412514 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102149558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120045802 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10174557 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128069035 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173111093 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.120168707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100500432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.215337364 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2632126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213153357 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121524886 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097199743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118155371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182455662 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28584317 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228523324 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185152728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09301866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1180401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127006715 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117566392 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115595032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176976686 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.209809628 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.185963006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121509613 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106228281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127931898 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127110003 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178026459 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.129098527 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338972149 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.332191623 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097499686 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127401004 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133421531 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258094843 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133366818 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241733376 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143883331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205427874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119000592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819749296 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182794618 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118810118 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102596386 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126683473 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123259808 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104523945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177759485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.418292359 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131505874 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121542731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095174726 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242695704 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096696901 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119798167 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174153774 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124030165 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126244136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109919334 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130911616 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.182573103 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265579008 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107850674 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127058453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123343679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108349428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12281928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224780956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236934258 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.197728327 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225717384 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123239507 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176793499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180009162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129743173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185444555 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12703372 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132516118 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106333792 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232230758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156437037 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.133083166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122807565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.102514301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158223247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12285291 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125591662 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185006934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495000318 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180798043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093440047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123764605 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126739131 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174708221 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124396039 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259974953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128762674 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182555383 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127191479 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114859645 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10538091 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198933162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107893549 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127599758 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1293468 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103005773 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270157518 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211387999 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131973001 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255733133 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193188114 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126173075 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186685638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126397238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181248119 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126750875 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105961554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124535188 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812193712 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106448267 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126286914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122581508 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198475528 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096878441 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132560771 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.118361348 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094574357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819631794 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099835179 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.13105992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.134108143 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103507832 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126142145 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124221221 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100075165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198649973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248547354 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106771435 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126823759 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.118277888 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174221993 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099593347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121109429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11905056 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099242684 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127815437 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099030763 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134648873 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18339127 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198936369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.239321411 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546478221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120531364 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096469722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246562778 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121112627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306495422 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126793602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220305903 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200405629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107562542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330461443 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201095594 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198374615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100020296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.211982735 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094364325 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126038005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178120865 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119966503 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102239116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19796881 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110558077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131718447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.976824831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113152935 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240106726 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093289843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.207022869 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101916239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129518184 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314393358 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119442318 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11400529 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.199888798 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100732985 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119786019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.8664544 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121643691 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129170593 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10483227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239547938 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.177184056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12765333 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126940344 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105426741 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.200797359 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224310133 seconds)
  done (took 46.415491647 seconds)
done (took 62.331170768 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304390719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232928434 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270282892 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173569192 seconds)
  done (took 1.94255321 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.189348427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159254791 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132312723 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114958736 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162681164 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092174532 seconds)
  done (took 1.738696442 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.391144413 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293480109 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.258211891 seconds)
  done (took 1.832373506 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263613735 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.286129044 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.342484693 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.443407854 seconds)
  done (took 2.324249559 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.249976213 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.151854964 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135756214 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.133546719 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.234028128 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.278344955 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.168868275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.224552167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125834794 seconds)
  done (took 2.638019953 seconds)
done (took 11.366265744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.268053029 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.167640066 seconds)
    (3/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127205918 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105208472 seconds)
    (5/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.203170139 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.263548156 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.244648208 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.274479207 seconds)
    (9/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096978658 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.270151965 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.182813933 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09969024 seconds)
    (13/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.096308198 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.127465621 seconds)
    (15/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127108401 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124279656 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.137952924 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.134027119 seconds)
    (19/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112216353 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123413405 seconds)
    (21/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124522191 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 0.186772646 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132680661 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.242953055 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182274687 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15657377 seconds)
    (27/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.158751337 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204558081 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.208993249 seconds)
    (30/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102328438 seconds)
    (31/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194466117 seconds)
    (32/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.229537541 seconds)
    (33/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07764287 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146461965 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076011579 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.243776859 seconds)
    (37/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121047841 seconds)
    (38/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103383917 seconds)
    (39/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.248594748 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110724123 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103703857 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.161266375 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.179686467 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117620586 seconds)
    (45/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161283757 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.247423268 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.193095083 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.236021063 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.133574975 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.101450138 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096975252 seconds)
    (52/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.17008371 seconds)
    (53/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169844841 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141976433 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120931232 seconds)
    (56/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.18714516 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.13557952 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103887023 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119237081 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116802065 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096820611 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193279858 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.149668923 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106847929 seconds)
    (65/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.190388288 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.098228399 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.147026874 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.148806987 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.130120029 seconds)
    (70/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.131388552 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117975153 seconds)
    (72/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.140047013 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12384473 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169285217 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.242614937 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118284151 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.139539548 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.180910541 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.159865983 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.094001317 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212095396 seconds)
    (82/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.155027591 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09848686 seconds)
    (84/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149947852 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074004935 seconds)
    (86/286) benchmarking ("sort", Float32, true)...
    done (took 0.251932288 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100688118 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176658912 seconds)
    (89/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.168257357 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100295024 seconds)
    (91/286) benchmarking ("sort", BigInt, true)...
    done (took 0.281969654 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.107752249 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118550246 seconds)
    (94/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101739858 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100817587 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076439239 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101668157 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.100454116 seconds)
    (99/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.18681403 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101837887 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.182050842 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076065815 seconds)
    (103/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082587345 seconds)
    (104/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098219454 seconds)
    (105/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102932101 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.128270034 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10255392 seconds)
    (108/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205117945 seconds)
    (109/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.17934655 seconds)
    (110/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.13253111 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123113809 seconds)
    (112/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194396004 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.11102163 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074790459 seconds)
    (115/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074790519 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.128567508 seconds)
    (117/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085099887 seconds)
    (118/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18362738 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102332207 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.132499072 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196165004 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098981299 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.19921044 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12998743 seconds)
    (125/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184593139 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102850583 seconds)
    (127/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106886174 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095555976 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.124972437 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101806844 seconds)
    (131/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.156164755 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.134223889 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094942138 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135314838 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.196523073 seconds)
    (136/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.140793652 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.127120594 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.124768002 seconds)
    (139/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.108781312 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101450792 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124197362 seconds)
    (142/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.083477968 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117729728 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.127050356 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118622465 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125316743 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075195559 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077376405 seconds)
    (149/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.126508368 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210263814 seconds)
    (151/286) benchmarking ("sort", BigInt, false)...
    done (took 0.239563044 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096259767 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 0.251223264 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.150582248 seconds)
    (155/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.073127319 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130244351 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077710147 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171621037 seconds)
    (159/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118434472 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.122616981 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114915368 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.121490156 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125635136 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.184257702 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.0752624 seconds)
    (166/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167332717 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100920159 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.097942327 seconds)
    (169/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101147814 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118144708 seconds)
    (171/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.175791724 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.197513875 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119296194 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107771105 seconds)
    (175/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135645719 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074312756 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.098409289 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077558897 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100437691 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.099231272 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.363583918 seconds)
    (182/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069993902 seconds)
    (183/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100796809 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.130209595 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123994321 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109829384 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121959046 seconds)
    (188/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.074084579 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.144712373 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077020718 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120161051 seconds)
    (192/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.124455082 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.240673937 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117262101 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076618622 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128140992 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096393311 seconds)
    (198/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.100028883 seconds)
    (199/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108272455 seconds)
    (200/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.100383737 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.107236034 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187309816 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.2558609 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100050288 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120327866 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128688921 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102840687 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073386957 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102625119 seconds)
    (210/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175410254 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.105640595 seconds)
    (212/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.120919511 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101674638 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119233294 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.103165632 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11911871 seconds)
    (217/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074908068 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11721056 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094779702 seconds)
    (220/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.098138954 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097459082 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.098717634 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105530109 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118619893 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093693605 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116598079 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095406165 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147696792 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137961348 seconds)
    (230/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094518416 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.1192151 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075486729 seconds)
    (233/286) benchmarking ("sort", Float32, false)...
    done (took 0.189215514 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103197389 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168528713 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074188689 seconds)
    (237/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.099574797 seconds)
    (238/286) benchmarking ("sort", Int8, true)...
    done (took 0.239771445 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097383487 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124495193 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084807205 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.098517404 seconds)
    (243/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.084197589 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117922878 seconds)
    (245/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094231924 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074206899 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124508796 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0996405 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124984919 seconds)
    (250/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095778399 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129249933 seconds)
    (252/286) benchmarking ("sort", Int8, false)...
    done (took 0.206611304 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14698452 seconds)
    (254/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.075386733 seconds)
    (255/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120615082 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090915213 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095659303 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070226392 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112359144 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.124052128 seconds)
    (261/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169055081 seconds)
    (262/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091128838 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121156848 seconds)
    (264/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.078038727 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111400985 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088704168 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111005952 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070102933 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12065292 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113267625 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119137148 seconds)
    (272/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077923297 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099213532 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095854287 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100218271 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074558475 seconds)
    (277/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101344242 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.098856216 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.193335343 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095613338 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.126956469 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094759644 seconds)
    (283/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.098540275 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074284025 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093611916 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.099746377 seconds)
  done (took 38.887521299 seconds)
done (took 39.789175638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.109126698 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163072905 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105508303 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.149683458 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.133263142 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100015058 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127336415 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.132005517 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.108780437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.134277248 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106238125 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101822978 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106385704 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130232404 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.129647191 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127530485 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132604356 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.10147781 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.128096839 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117992477 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.103810165 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118082263 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.097261551 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.100540428 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106840211 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.1262719 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.10128054 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.128831479 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094423359 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.119102875 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100342709 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.126946598 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093475418 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.134646704 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.125395453 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.103750964 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130369388 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105254359 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121350615 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094602678 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.127803448 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093897995 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.127016928 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.127330197 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101764443 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124702634 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104771282 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132508737 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.154088451 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10072382 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.127158646 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105453915 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128077923 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100967699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12358463 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128228307 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10026376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153118127 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103401829 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126126494 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.10266619 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.128428173 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.100266376 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.130032106 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128732012 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106907308 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.131226879 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100977296 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130975657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.124755959 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09515388 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128306382 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.098950135 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.119257453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.105753767 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.130218353 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094623015 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.125186329 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.1020326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125422725 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094267479 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124121146 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096362025 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126679404 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122692315 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07688623 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.099189388 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.125860488 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094788958 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128849046 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.126248919 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.102279583 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122318907 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107715296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119261198 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.1009053 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118611492 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095291604 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.122063525 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.099570587 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.120337865 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098202375 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12896458 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.097196887 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.127453119 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133396254 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.096053176 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.12492381 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094503827 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.119640967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.111918615 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131075432 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094213005 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126334912 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.118228683 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.103907995 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119267508 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.096148747 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119699682 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095330355 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126235357 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095225464 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123936279 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.10228413 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134490478 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095213355 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.124397993 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098611812 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.119937454 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.100491742 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120489471 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094791372 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.123261601 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084883026 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123642967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094482605 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.129237366 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123941589 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.104401637 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121842943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105879447 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124803419 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101851977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.125803084 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094537295 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106849848 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102066913 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123366694 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097231942 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.12031341 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097463884 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119118371 seconds)
done (took 18.350888554 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095220969 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.197009441 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.167098149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1568108 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116513674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12179142 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.131944487 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154737596 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.098190282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.154264649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145926396 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116728892 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161665885 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093845646 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.122045996 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09906675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.123271489 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137877976 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135300453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143947536 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.177600293 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120197893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157998747 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118418932 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.130555891 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13974602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.096647853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124438464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099781931 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146107253 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11721242 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125117588 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095284017 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14492698 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.138760107 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.105062372 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.12098951 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.103327493 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121752544 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0952075 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.153123902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145286676 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.127476881 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.102771538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124429854 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.099102287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122210293 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105348589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132401837 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125892838 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11193625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.168019644 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124975543 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.13267305 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.095268019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.131696939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10595272 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123873826 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096629184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124946003 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094991184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125554097 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.137296168 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153698082 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100218262 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131897256 seconds)
  done (took 9.296549116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131340316 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151687552 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140850915 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115863646 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121096831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096517394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121659435 seconds)
  done (took 1.837203472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095883929 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149274727 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123942817 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149287098 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.147128421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12411087 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128451497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096737059 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144270334 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124494026 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122682617 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165432985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098165233 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.13218849 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151530035 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096788166 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.15040365 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096652876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126585618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150614729 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100922348 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142228627 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.099229857 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.123440306 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143149433 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097556676 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172383466 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102731892 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12179871 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126957106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095267928 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163699754 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141480348 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.106452169 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12349682 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117052543 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141174903 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096158853 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140248672 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129003556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.115657831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123964881 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099231423 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121097077 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102274737 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136792017 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.101783796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124358803 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099871816 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149580274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.124229663 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115991966 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123630311 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101888842 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.125511532 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101475449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134246631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098054038 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148994576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121651796 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118611714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144306958 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142352203 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117683381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125661883 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116355258 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142190352 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100114635 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125532752 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100396215 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144631228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120928121 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.100332447 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13803394 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099738676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.154124423 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.152784881 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100270977 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.136954451 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098241911 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122643205 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096628416 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147241344 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128041163 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098650971 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12580414 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094649452 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117916918 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092412215 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119937424 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089842437 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117874778 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096706071 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117027328 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093837729 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136514523 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123217739 seconds)
  done (took 12.789922897 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098465394 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.124239393 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101016683 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122199549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09479742 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122841277 seconds)
  done (took 1.63071798 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127131593 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126491204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13786081 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101564734 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162462669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13795039 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11733418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132027399 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13742805 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105242934 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136304542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.116202261 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149325247 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130191794 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.116711017 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130605118 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14308661 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109706078 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136170735 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127401541 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114695318 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124333709 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099248886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138333063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124169001 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100476819 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128017787 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130563774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104938225 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126479451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124943894 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09771231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128768273 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103012866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141001689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.131179212 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104697803 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129070169 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133682818 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100355299 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143273511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106445784 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137416011 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127070566 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101170922 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125338961 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121924749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102750868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135393944 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123891569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097426822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12289308 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095621742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12210689 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124472993 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101908883 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121852427 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11129279 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127235898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12735527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096138181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122733156 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126194535 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096892812 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135400816 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096903749 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125909936 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123924453 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099326611 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123028433 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09630519 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121091528 seconds)
  done (took 9.6788662 seconds)
done (took 36.187512568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69797542 seconds)
  done (took 1.663021232 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841415765 seconds)
  done (took 1.810913801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.042730224 seconds)
  done (took 18.042421362 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51663518 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602222158 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999107472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173700093 seconds)
  done (took 3.260772966 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952258692 seconds)
  done (took 1.945420307 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295572732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239228275 seconds)
  done (took 1.508104754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781851667 seconds)
  done (took 1.766876854 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.460379796 seconds)
  done (took 2.438793552 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338601698 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189320941 seconds)
  done (took 1.52304254 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.570567917 seconds)
  done (took 1.552641579 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.126705783 seconds)
  done (took 11.116808674 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277507316 seconds)
  done (took 1.277086853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312361205 seconds)
  done (took 1.300668576 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.52700535 seconds)
  done (took 4.516600101 seconds)
done (took 54.702207945 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108312967 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130124792 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10476168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126432671 seconds)
  done (took 1.451373624 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113902764 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131533618 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.113439536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.131330913 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.141169707 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.105529139 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132761764 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109486915 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12590951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126799048 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099253604 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122466244 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101832013 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125416654 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095018847 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126429429 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127638681 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100759702 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131482411 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09799177 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121525393 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126398735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102671305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122227868 seconds)
  done (took 3.824563004 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109431533 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.129274893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106513639 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.128983233 seconds)
  done (took 1.465378867 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109275395 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141695763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112267513 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128681661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134190393 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108516689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119818657 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095307828 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12195248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103215117 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117845333 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142953282 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10928482 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128189248 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103684411 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116413714 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118745539 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110030034 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128029496 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104417841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120679479 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102220433 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118675599 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137199475 seconds)
  done (took 3.828984462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179118687 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130658407 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142144636 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098361024 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163440709 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143488097 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0905631 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143326307 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090200018 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133690667 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121144785 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135971947 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131094734 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.09068146 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116643487 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115313466 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104946816 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130198825 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093661551 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130146101 seconds)
  done (took 3.480033827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105764799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124531151 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094973099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125064084 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105776738 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128475596 seconds)
  done (took 1.683099285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104808 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122142462 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096314606 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118639465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097219156 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115503189 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091509166 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118737721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093751922 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115856817 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093623553 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116398922 seconds)
  done (took 2.282114245 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.521916726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.13028531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12272622 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090826251 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131053102 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098619456 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14198742 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.102536975 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.155155108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096664472 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.126878018 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.127797795 seconds)
  done (took 2.845295334 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246914964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133416078 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293868145 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367789103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190367407 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18180854 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.317164754 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169684787 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.219523677 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170321519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214580364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217087172 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139219726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248277423 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126067816 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158215036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2372461 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268981434 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165180606 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260986427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183056446 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176528105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186850883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159331789 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146988592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179105831 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.130746221 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11561462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228687552 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193953316 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20517068 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177334056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169314315 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249422292 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277937139 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209876127 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295093304 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137365452 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174955643 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183296781 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279615848 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126818965 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256468437 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176583174 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115723701 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252721892 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173343122 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199179284 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160004308 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154440398 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216203203 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239861007 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.21410815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151100828 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323001038 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1615577 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172232239 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228048334 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225722362 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236691026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20108026 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126119051 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195994117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198271134 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192318625 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163567772 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.219195041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153584576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182861325 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201173234 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186840428 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184394395 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216655005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143336848 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174163996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176581684 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174876577 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269735089 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192298191 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124667505 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173179322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153422274 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108401899 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198450382 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128412216 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224735565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150836814 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16802022 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216153583 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162328611 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165404974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219475322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182913863 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150537993 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08668553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158953656 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159885577 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178380113 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143175183 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162079632 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154235423 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106895461 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173553431 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127208083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19221707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120750025 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173659552 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190088258 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131271543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172808088 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164301013 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134110103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219978106 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202881436 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145021401 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109584148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241717606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185689856 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145957443 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181357653 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210787843 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151835267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156390585 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234975711 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223107916 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149861916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208866659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153166565 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139413376 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135924163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189774373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161334893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166132421 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136057072 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189271827 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205380779 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129091468 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141886937 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207067726 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137117043 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135111559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124258473 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150760959 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141432191 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146751978 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14933796 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182369699 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185885503 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161157364 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171505224 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151386542 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249127236 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144196954 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128111669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152038976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124309572 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20513287 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207285157 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136935066 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236681691 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173758257 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204391588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171543966 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138172328 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182063448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13550513 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096294094 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230354426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173680588 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17420582 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208177048 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237885332 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.198750554 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.198119977 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180946748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189690633 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178516884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168599042 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153292524 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175280996 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172420654 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134625008 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123602336 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.145444637 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163780816 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155371687 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117341169 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23882286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183427995 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226602626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171589227 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133740021 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21837001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.11207486 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1831193 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.210787218 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125272336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.234032993 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208780304 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225500836 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120200366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242741745 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103172175 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13587471 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.149820545 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17767234 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140213776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111999232 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200119981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193024179 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187311645 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183919261 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244121341 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18809648 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202982311 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133281796 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152189726 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191327588 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218318708 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165268634 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148852853 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162319261 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192617546 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163830398 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256538107 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178889502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186817095 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213186495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163535161 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141867781 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161935959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184692832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168545946 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184779107 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157291993 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121607075 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168077401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143200558 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174639209 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193994874 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177128933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22391376 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161608635 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206010319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140304007 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178924137 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174887112 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175393898 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.087509719 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180541948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233081596 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123847958 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170848239 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222086642 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11500218 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326869224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240229454 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197969054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148533563 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171979171 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175439558 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177040751 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178563137 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191038138 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172772633 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201614716 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171245408 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148050859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148578108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127475331 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157568753 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137196311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150980266 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185017118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143828683 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195207551 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160095762 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172887457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187500473 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162206852 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.128476813 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164750071 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262140791 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20100787 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207169751 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16348465 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189718651 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249114609 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109585327 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144508417 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144682021 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193473419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119961888 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241227719 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202759092 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245589051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198367751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184457623 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152829748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132157215 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142344195 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20608921 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2105278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150295148 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153269576 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20548962 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141582446 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13665541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172272793 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29191868 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14843082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193966707 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081715486 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286913381 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128193763 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139930433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165659757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191674259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14262255 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156714546 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170817598 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160575812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17165437 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153221903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222191546 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219440361 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241289841 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197319679 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145565873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14143194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207183143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190970787 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164858757 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140667888 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190326217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201169595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197261792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147307947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176274191 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173544727 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163824661 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22471131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112825847 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239451511 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110490994 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229127529 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159390815 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145166352 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181969032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192253354 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145043737 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184818137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216410469 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11087158 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13684735 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166131413 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185246514 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155103903 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131485609 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184533902 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128111189 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202435491 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273764334 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137392247 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158104132 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121823803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139246625 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16077868 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165477998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142281029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14355481 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22555568 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138207879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190686824 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239390847 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175943338 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172025378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148965987 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.718843705 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114494699 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237172786 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124169218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214556824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125508089 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17818734 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164417351 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172873948 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233219741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163031997 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237371484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200583139 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.211650062 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107308249 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165374203 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151813923 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150287819 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158075298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173057918 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163123583 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151030113 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183674837 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161146056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137087648 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116097772 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233011724 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150994417 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189200091 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186755851 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142250923 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177370175 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198093601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13829851 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186584958 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217946333 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117187185 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153981587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139102708 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156147851 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275290442 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099971288 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21625174 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194535099 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164663599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173521411 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151527136 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199917299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162566385 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222397547 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147853783 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160210145 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133059007 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141773178 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134772881 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161632444 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171444787 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154864568 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167333298 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143894573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222775527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098828458 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152181179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295250501 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181441176 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248878274 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138732304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111492627 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16469194 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151552081 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181635904 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183451158 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138936777 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139189608 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139033758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135257937 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145991838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160989997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19885178 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1666069 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208651036 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141471486 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283190188 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143680569 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158537389 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091432388 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136606464 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155168129 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120893195 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153976864 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225406969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272763544 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124547355 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137881024 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156312905 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128757618 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112078343 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167474378 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165917272 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185292485 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146462325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110983871 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163964266 seconds)
  done (took 85.977507032 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181634607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139456142 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15254908 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206846836 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183762728 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296287904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214390256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261015257 seconds)
  done (took 2.725272099 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100711368 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154460453 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.166765854 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13689259 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094390766 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122284384 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.361378993 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.145616244 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094646046 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.151635291 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175556196 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096903645 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.644939229 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.129105153 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.125748437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.158359934 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119179544 seconds)
  done (took 4.060076475 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.248377758 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480644932 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.010694356 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.213495404 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161282824 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121272922 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692450992 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117129977 seconds)
  done (took 12.136556547 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134962096 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158214514 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146997642 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.177532646 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162945812 seconds)
  done (took 1.879747 seconds)
done (took 128.623997603 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10730376 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.136260923 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100669176 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132514756 seconds)
  done (took 1.557465418 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107089856 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079611129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109199348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076858333 seconds)
  done (took 1.462664847 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196018884 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.178050138 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40676688 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.081174376 seconds)
  done (took 1.613082445 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.125177821 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141794656 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107264685 seconds)
  done (took 1.475790287 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.11629477 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136879151 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104450423 seconds)
  done (took 1.457642842 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117313535 seconds)
  done (took 1.218342023 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.121441884 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.151435009 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120626084 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.148696315 seconds)
  done (took 1.643502284 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.108161334 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139354981 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.119966561 seconds)
  done (took 1.466009554 seconds)
done (took 13.362402438 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11701525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438425159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.427321027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114279565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735983053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390750805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.077679044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15648053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179315477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102984728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149284209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681141899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028499747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.386659768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981383947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.474209366 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708189441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094769181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121461809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095837513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.056866428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099119412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12987181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097621462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704995226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429033499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097915228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474215762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09415024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132634928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412473527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097302212 seconds)
  done (took 17.374118028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108606504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191973194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141552228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09771694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129794479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096758337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127358954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095998448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186630622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13099271 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146136893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095309738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128491676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097581166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144239725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100956219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127068706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124700622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095545444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123432713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113554533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12427662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09725336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12354422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099248203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138871458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124956419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095367863 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124033736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104272571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133412262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101072889 seconds)
  done (took 4.975866824 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155465189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204352302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143688342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139047809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186733544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.133292709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.208558952 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15605325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190359669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100018746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14634746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101515081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167507227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1358651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.126135394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.132326235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.104898876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129118008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123570493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097063241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142707861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100984966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131439582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097392942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127349743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143004877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097570424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122715922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097493373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134886071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103483264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12600719 seconds)
  done (took 5.416054156 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106386787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134685945 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111994944 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141333991 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102668104 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127887822 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101122303 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127190315 seconds)
  done (took 2.060436282 seconds)
done (took 30.930009092 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120970299 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13736258 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.116774589 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.145793179 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.113617688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.147452437 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101395951 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.143722015 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.142067692 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104202665 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142415416 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097207914 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125229213 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094027089 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13717266 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101828563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137450384 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.136868064 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109617969 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143423939 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100541323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.142291499 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111890149 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147191533 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147607932 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.118271856 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.148476099 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.11018795 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.134863233 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10506248 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13715397 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115921877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134248978 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.149617601 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.109676069 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.137040499 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.105509074 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.136144409 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117454205 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.144346691 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10913983 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.145965688 seconds)
  done (took 6.402848107 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.121757364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.154901947 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118372873 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.091271039 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119581142 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084620121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142479231 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088775679 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118843081 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113069076 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.112953893 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.083815864 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.086836494 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.110080684 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079109894 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.080395785 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111485677 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077176616 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077699436 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.109703648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083710973 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105163912 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08219997 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082218987 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107769783 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083648067 seconds)
  done (took 3.744229807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109241384 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.149048698 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118089785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179829156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158802401 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.104397107 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140518129 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146383348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112370632 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126222109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099774698 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155621137 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114721904 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132280276 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129417838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111851747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138359049 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098669177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.140295758 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121101148 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142662177 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.136027823 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114328657 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135416884 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095391921 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129840277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106986698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144758968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138462153 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109524285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13654844 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106659143 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134047124 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115051113 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.137812944 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135161066 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124107605 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14687475 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.11229007 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131917568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106286055 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.130905861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149154012 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138108718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132004089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.109955572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.13525051 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140192038 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099573631 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146574645 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105345227 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128405974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098464808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12993056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100269542 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147743276 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.105354096 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.136526017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14142935 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.109128362 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145478303 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105130438 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145472 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103726687 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.137296452 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099926869 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127591097 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096254141 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147406079 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136115294 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136735045 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.126953705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127434234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106359752 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135094383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102259874 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125092958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111167634 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13860511 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10707035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136159176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126250004 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099976975 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143400013 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097296035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125874971 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096556105 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132446115 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100010228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126969477 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139875966 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097370806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127810628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108184131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128366762 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095949595 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131021841 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100379409 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123615429 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13770697 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100579999 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127636705 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105913637 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125486152 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100528308 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134649825 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130818707 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09563481 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12977795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102313232 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125330331 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099411496 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128318226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.10182184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138892909 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104194021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130619298 seconds)
  done (took 15.552092997 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245144066 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222800775 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202136707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302601171 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138966475 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.121263565 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.224021276 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.166909238 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12998703 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1638114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174135747 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189068867 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.151994811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194676426 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.180697298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125604262 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145860282 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141049839 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.255065675 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.271818342 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14921689 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.105495587 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164895137 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.164131464 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139861216 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.150689425 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111593011 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138232005 seconds)
  done (took 5.999076193 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120590701 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161881327 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101419051 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148177623 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153901962 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095650012 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130259 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128658088 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110100453 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13989632 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096588686 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131950847 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134926113 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105647955 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125600428 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10504241 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135488763 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099871321 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129472381 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101831408 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135465342 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137156732 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105117368 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.126590195 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105539873 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124387592 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090198616 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146894743 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125410661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118072614 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124248907 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107669775 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138653302 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128525786 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096223929 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127626775 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099014201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126935979 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098269974 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12530068 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095623705 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109365576 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095385136 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140731319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104953012 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113116872 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104869862 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132030327 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100044566 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123647245 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130283458 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099212456 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128636773 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104078313 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12783933 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097118854 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129255515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087781064 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131548272 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098076213 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11574645 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0951631 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130151064 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091388722 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134040742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101251536 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12486393 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099748428 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130557437 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103945352 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127497722 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103248543 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123734384 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129168007 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099011173 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13058846 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100300478 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12466007 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095979368 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.1262021 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078099749 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125328001 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076426491 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131509078 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095596892 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126205427 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097932599 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131068592 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112959881 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12644512 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135418809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096167145 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123647829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0992978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114732907 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099646396 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142559605 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116161123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126198852 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123457388 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110961322 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127995246 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095288734 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107383364 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105268337 seconds)
  done (took 13.347424294 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142264229 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.166270351 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.135113269 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114703466 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166609852 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.170023139 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10396303 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137264116 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101005028 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.149822095 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.104409415 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143318785 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.104394581 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147378654 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167360362 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113483465 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.136036005 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114697394 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131967904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.176209997 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.124087132 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.155577784 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.151310283 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.103057596 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140552537 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.122273482 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171051055 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.144216322 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112051384 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.152493911 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.115097233 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.169983072 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.152785129 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.108949373 seconds)
  done (took 5.797561582 seconds)
done (took 51.950913693 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.238728257 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.443160931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20177422 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.04627336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.271799996 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.235377713 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217895443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207985664 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.22747836 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209149496 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445881858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.755021721 seconds)
done (took 58.629810032 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.28129422 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367655992 seconds)
    (2/2) benchmarking "String"...
    done (took 1.489845942 seconds)
  done (took 3.98363533 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.756664322 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.145926657 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460755695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20598647 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202625231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492708752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.908949477 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.589229508 seconds)
  done (took 28.131162734 seconds)
done (took 42.276396017 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216391108 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.26874619 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.244227795 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185934722 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.335837773 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228027341 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.525153224 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.207750024 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.223156499 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183821013 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231048126 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.20282992 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215629917 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.478524257 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204527734 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204755113 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270662607 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.698914905 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.607154318 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219748927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.235449993 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25542424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.237915422 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207730934 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.268127017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202827684 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.220819256 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.210259732 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.754462986 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206918231 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215631534 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.677012145 seconds)
  done (took 190.770087171 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208583624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.353071314 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.425514774 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.230526568 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.884779644 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403246903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353567042 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.941099622 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223200714 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206254152 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.529718249 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207026675 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.588076954 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177501794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.241243152 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273534154 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.416584924 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.570241345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240610884 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.369649842 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220488693 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.537495069 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.474972287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454877919 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21628466 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.233128456 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.237215127 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.253304592 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393695453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.355073503 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.259145445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.24085562 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831157216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063734976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22054656 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.236501043 seconds)
  done (took 151.199871856 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211082078 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211118612 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212362121 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243524508 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211183311 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.79206689 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775948572 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.715451345 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.500100649 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.586439304 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465826096 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209668689 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212347416 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304968639 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221237811 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209070618 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226485643 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255699822 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212190995 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211535606 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776403477 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220857833 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208786461 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389915989 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.225532353 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245582257 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603072125 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.449612003 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210828811 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246181772 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543983795 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260944116 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208532998 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568567693 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.623182904 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326587314 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211929054 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246891951 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212429699 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497273412 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212544713 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214295096 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214368278 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218974594 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873869601 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209866428 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792710738 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21543591 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187542844 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214070687 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215147988 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.403164733 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.902856561 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231569143 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212366162 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217963336 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214381271 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215595584 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24934829 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.320071855 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310190418 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229447239 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216145689 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24539727 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213434357 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213906553 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372417823 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208822909 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.239223182 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287541159 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320913763 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796218836 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215588968 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315429583 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33330299 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211822986 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215248149 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21477083 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21693396 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325182545 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213543522 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.622884128 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388479285 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228038179 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.623147789 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31480175 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214694422 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.637370433 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216996221 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218158171 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978621238 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310903107 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210012989 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21341576 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214661616 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.629654001 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777221955 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.467107278 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217636267 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.441372772 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216441487 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647175548 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.791018423 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903228349 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217707814 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329898523 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390424632 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227790614 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214727077 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.612679129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218457872 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276408486 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217277706 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616030173 seconds)
  done (took 366.657822069 seconds)
done (took 709.754681103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822185045 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.812546284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.929175712 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.804540631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.766501056 seconds)
  done (took 10.270498828 seconds)
done (took 11.406162176 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410919317 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408416309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279912836 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412094362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249101585 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426855501 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385814618 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237342854 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322695674 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300833956 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319413598 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272111746 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252512235 seconds)
  done (took 18.413631231 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536976415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531747867 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279339002 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549417077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254637568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549203022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430201419 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428658204 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436768651 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24961729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233194295 seconds)
  done (took 16.617412853 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.57191332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525549599 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282656367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533108586 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257443938 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557084216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429891249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43661839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430583417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24666933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230631787 seconds)
  done (took 16.639732444 seconds)
done (took 52.808364679 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.227440343 seconds)
  done (took 2.363344791 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263263547 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423840948 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241103469 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230562178 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224810603 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228125781 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230145739 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225904786 seconds)
  done (took 11.20560767 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225752351 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223515456 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.223263496 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.223087317 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226058752 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.225363597 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227066969 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.226760439 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.224883271 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.222168823 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222045346 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225187376 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220564423 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225533213 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220991575 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.224299999 seconds)
  done (took 20.723221902 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.225167716 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22123297 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.224897418 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.222267356 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222539949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223124574 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224349038 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223899727 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223050835 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221813742 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223366958 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223350659 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.224107033 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.222023951 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221420544 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222240509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218278158 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221554666 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226297308 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221855746 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219955712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222514184 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222234289 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221776891 seconds)
  done (took 30.480076383 seconds)
done (took 65.909619339 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.841218869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.873093687 seconds)
  done (took 6.84697338 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281300414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283509313 seconds)
  done (took 3.701341798 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225300215 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22296865 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226342836 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.226574269 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225703881 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226469121 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22405219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225394409 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224740981 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224568586 seconds)
  done (took 13.388727523 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226033325 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226701688 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224948214 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225759111 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225408204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223075497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227643608 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226721075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225568022 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22324909 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226388183 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223980229 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223830265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224390119 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228525897 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223495904 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224628969 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.226111619 seconds)
  done (took 23.191404662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228030633 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246986223 seconds)
  done (took 3.610747285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.353562504 seconds)
    (2/7) benchmarking "second"...
    done (took 1.26698738 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333614005 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323075077 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265632048 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243303661 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266314643 seconds)
  done (took 10.18853849 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229029657 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410350976 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.517992901 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.82893516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228465807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230006005 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.029367757 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230939636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233659556 seconds)
  done (took 14.073608023 seconds)
done (took 76.137772578 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.246214671 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230992252 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.520023493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236212462 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.235033635 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.518070178 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.2402611 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347202762 seconds)
done (took 37.713238637 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232740318 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213158178 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.979323238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219317476 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271429714 seconds)
  done (took 18.823585201 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.254814882 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55947306 seconds)
  done (took 4.952551139 seconds)
done (took 31.150097509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229379784 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230159927 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229404931 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227232624 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230023169 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.22738718 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225592213 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228635402 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22988446 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229719796 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22935742 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.229828705 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228292171 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226497906 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22626493 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229641392 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22618219 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225120525 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227644602 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225228594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230714454 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.2266287 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227164196 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227693923 seconds)
  done (took 30.612272451 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23032753 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229328644 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230080615 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.233904764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226344932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232854342 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230058886 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229674335 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230410493 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231894002 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228194627 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227009731 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232961917 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229271161 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2311234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228800113 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232006279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229315312 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231948424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229055461 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231554787 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229037787 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229752738 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231247087 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229295633 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230982703 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23108526 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2297462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231181331 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229086491 seconds)
  done (took 38.047281585 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23666004 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240591242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.235183744 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230228986 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233636578 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.23249117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233103005 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.233219825 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232852737 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230001628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.232899268 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232946859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231307523 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230716598 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231612693 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23279448 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232950909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.236114392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234595326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230816079 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23519538 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232745309 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232289719 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232799211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232002045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234330538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231420142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233456299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.236651471 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231268143 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233302529 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233985197 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233245802 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232652083 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235216948 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22941352 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238181766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241354354 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231893997 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234953469 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233321578 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233410067 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.23317222 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235577106 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229807048 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231955138 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234272353 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232956117 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231752255 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234077621 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233562912 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233836921 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232440749 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232493211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233454949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231468087 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234716266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233339944 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232658816 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230681428 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231076336 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231457663 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234889635 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.232097945 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229992246 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230615756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.2315317 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230497112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229818747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231577624 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229705406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226940752 seconds)
  done (took 89.91523591 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228766846 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23064381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231733898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228334438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225545352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229521089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227289861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22883972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223779682 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232268237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229374145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22434742 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226631313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233403451 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233022255 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229855258 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229476758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228398734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231510835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232755037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231545876 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228842571 seconds)
  done (took 28.192015898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229748719 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232656982 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226129449 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232152746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227791291 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237252692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234923789 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234385644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231498608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231691983 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229745358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230296828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231997553 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227299515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228187069 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231084538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231227929 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233201741 seconds)
  done (took 23.300263864 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228271878 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230064774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232308367 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231091167 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232078757 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231135692 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22842293 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229975049 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23158549 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234117659 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233449256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229482838 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230463685 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233612418 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230740936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232033579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232635377 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230451757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233317179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230015778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231968519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233170283 seconds)
  done (took 28.234970168 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234494724 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236380509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227433792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232454119 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228347866 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233741277 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231934696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232131791 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233520529 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232170802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226560418 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232282134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232280428 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233004851 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231851454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230277047 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230256714 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233387957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230672021 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228106319 seconds)
  done (took 25.774004791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236132958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23644649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237136977 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235293128 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235012088 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233817092 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233674418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236661489 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235466489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237210184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235344681 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236116562 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23870201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234689371 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234932107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236524475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23872236 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237422848 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236321343 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235812988 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23318539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234187357 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233564052 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236060531 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237067703 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238711049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236940457 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238572352 seconds)
  done (took 35.757880566 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23983438 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236718941 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234585483 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232773186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233576413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23167488 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235419723 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236541976 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23879587 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236598544 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237624989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236635567 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237855667 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237141223 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236593277 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237065652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236120652 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237485806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235241016 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234969703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238918276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238579306 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238744325 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233599178 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23260782 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237647015 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236366005 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237459577 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238524157 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238957018 seconds)
  done (took 38.244566666 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257567903 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259511991 seconds)
  done (took 3.671769972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23507788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235847307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238808447 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235508455 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236438289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237791915 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239337101 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235560033 seconds)
  done (took 11.045388192 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237720112 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240117928 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239239816 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241011188 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239218513 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239200835 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24381792 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259673019 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241388699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240050997 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247133018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246822062 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241603977 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241164207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237035219 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243847343 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240619087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239869321 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240569959 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239347043 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240446603 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243591914 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243314614 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238621317 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245660179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251867773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264284785 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240457832 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241672459 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243859689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.242275207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.239482713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242039222 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242017425 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24115172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242736925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249349907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263886106 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246966336 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261403589 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244457147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240438653 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.24256032 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241352405 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243249987 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243658609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242073209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242606487 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242902896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.247825615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248339189 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243806116 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240144089 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248591106 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246929418 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25147257 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260278696 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.247537672 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.254694104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252054351 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278301087 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269027061 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247126109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246485804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258186632 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269806295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24959783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260969651 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245612576 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252480922 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277819265 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269692583 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245580952 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245574989 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247201475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248628228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247492077 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252421321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265824071 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247739294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246322296 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254082277 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267475874 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24467909 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248086407 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246337614 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247699917 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247606058 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258547452 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265489283 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.245345586 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248029818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.246335012 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247018322 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244631997 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246875099 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2473259 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246403451 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248180606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246833323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251174366 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25569877 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246795275 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249395026 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255596125 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270610797 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250852083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253046218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249742983 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249026683 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247967705 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253104279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244041577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25243748 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255026796 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247103607 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249851165 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248982292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248618975 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255050768 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.273903232 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25021501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247307641 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252847245 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260662733 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247733099 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249736606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.248189111 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244986233 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246250163 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25171387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.249101407 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250189796 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248980995 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252554701 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249043789 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251484213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24974631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249418829 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252185749 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248685268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250023177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253670995 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249485536 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251542396 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255185192 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271449714 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251939345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.251473379 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.246461397 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252443372 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.250196188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251287969 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248953288 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250823175 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249851106 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252035702 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250974801 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252668244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252611774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251314746 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257309542 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250246922 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256787298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250123838 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250228347 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248438134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252442962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254148439 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253151819 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251951348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25471862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261588711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253420172 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251075944 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252057405 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253041239 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252916901 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251591832 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256486831 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262108751 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25056118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259158147 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271543909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250059863 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253571444 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254436645 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253003224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255825849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258691852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259708027 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266654844 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272645908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256548201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259255765 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255550385 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258022116 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260044292 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254976966 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255810772 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253107233 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254210592 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253751402 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258577198 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251606712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254630958 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254233696 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254385816 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256427386 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257190484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.256877206 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255335494 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253679123 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256443997 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255035219 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254493828 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251845064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253390023 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257600504 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253697219 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.254500056 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26177601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254655342 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25741697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257505814 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256508194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256524991 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252777562 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255655546 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255688026 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264228168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277447164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257202825 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261902798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27583295 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255778031 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258771171 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.254994212 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254386971 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259285106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264527121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257894222 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25962016 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257026585 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259498388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259166107 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260797489 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273064961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259352265 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259002427 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259366066 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256076366 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258982891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260420498 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257386914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263079335 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258618264 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258068988 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2603356 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259505166 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258027399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257979697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263535563 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265830091 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260252933 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258660722 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261475088 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259517883 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263086319 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25996866 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258268098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262926425 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271066244 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285390727 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266115427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279850869 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.258599396 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266895493 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27859574 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262282191 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260078286 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260297895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259317547 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259626743 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259942002 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261993106 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258562023 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26291565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26045944 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263932487 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260883986 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258181226 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262876475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26063505 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262489324 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259590533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261198552 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261628949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263598836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259202538 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261742403 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269056433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281972274 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261780231 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264608928 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258604822 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259841797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261500957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264178328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26524625 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265438192 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266812748 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271051575 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.263118905 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269581007 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262236517 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265961873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268563879 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258640855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264683933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261840848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.26137488 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271690245 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282263191 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26513622 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267639765 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263598276 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263843454 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262511073 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260643312 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262310145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263979298 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270865237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286120951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266748126 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263033243 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260541783 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263055239 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262269263 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262414237 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264141671 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262416716 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264494272 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265561439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263476383 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263781215 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263940278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26068913 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260913367 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265480889 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274881374 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282509959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267616167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264790952 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273196479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286961978 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275049039 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28417884 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26337207 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264422716 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266935769 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266098226 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266018271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260928117 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267047828 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266389729 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270113074 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266493481 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26984808 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266474413 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266619943 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265502203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274838642 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288924627 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268420413 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268735027 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262752845 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.269712307 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271398606 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265326778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264744548 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269011168 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275551422 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271728885 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267881321 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269840433 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269761496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264484302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266176076 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.271191212 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267165443 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268626278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27052363 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265407029 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271365567 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268940497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268584453 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269848687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265579441 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275303531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287708231 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268132092 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271378433 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.270918241 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26899306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267027615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266006197 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269019516 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270761828 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266868894 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275821159 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273539438 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268917709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266990184 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265962639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268142373 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268993898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268679235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266926523 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269821945 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272615224 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271268249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268522353 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268365694 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.269918599 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270730778 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269740085 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271945133 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276404544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270969617 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267366829 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270241504 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267872187 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271905988 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269816261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279108675 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290150199 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280854192 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276283463 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271895839 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266747044 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271227792 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278495613 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271165932 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27470032 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269158126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270751197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274188603 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271576348 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2678479 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27581017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292516175 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272206267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280989439 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294102094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274496757 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271094913 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274196003 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274647567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269778353 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272848592 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271844848 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279949269 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294681693 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272114474 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274356942 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272260122 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272025956 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275136185 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269597603 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272562634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273712704 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273888922 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274606249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268792329 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27285503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271783985 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272118068 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273592655 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278499781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270369065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276340345 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276504334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274236863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273900173 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276669054 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.2705016 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273381943 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273431684 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274871528 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274274497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275912962 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275540059 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27767513 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276209173 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272799472 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277397676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286162285 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.2830971 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272903386 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276139667 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277148438 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277524998 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272661324 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278544634 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273085359 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276724439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272424282 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277288997 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272524034 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280204661 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289574404 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299118097 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27688129 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276780157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277878124 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278555668 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273338702 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275435091 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278733266 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28012358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280377854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276270886 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284980211 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296117235 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.278346152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280269509 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278853388 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281759355 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278582804 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277186217 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278848329 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284404917 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.291175568 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298534296 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288158496 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30841253 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297939674 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27750271 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277022001 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276743403 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276480954 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279212492 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277798482 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.277845595 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279296778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.278456013 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281146644 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283780378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279946406 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281422696 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279901237 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276806737 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275780033 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276269249 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278693546 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277569205 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280126071 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280540989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278554877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279619026 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289071514 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304359756 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280925264 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2804276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275573312 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283820492 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282553661 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290780216 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28865859 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27900217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.2834432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283354559 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282994735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279060327 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278592014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279255181 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27842175 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280032399 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295872876 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305114427 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284083826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283408843 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280806152 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283404175 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281533954 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281145359 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282197867 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282735412 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280134366 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285486436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281833298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284724019 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284699942 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288161222 seconds)
  done (took 754.433924036 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27751345 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277542769 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277541283 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280458127 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278699978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281822908 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28329441 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280420269 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280829721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281348574 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283781918 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28026391 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280886242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281921037 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281613452 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281496944 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282527325 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2838942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280132451 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279355424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284734299 seconds)
  done (took 28.088911462 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285919927 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283920933 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283351728 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286508469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284934556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288168175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282919564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284956047 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287078459 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282519784 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284269147 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28887127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283940825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.284644731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282467986 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285099408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286000313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281507099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281935032 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281906717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287118432 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284324592 seconds)
  done (took 29.451877613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284980562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28661342 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287978887 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.285612479 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287117449 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.285188678 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286768255 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.285103246 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290451909 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28675061 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285662742 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28979053 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.294343248 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288083873 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28679199 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28785693 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430377063 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290128847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288780427 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286622734 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.283777457 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289171423 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.303333856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282554221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290402209 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286748337 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28860011 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.290644374 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288116506 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.288135174 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292059078 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287680459 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288208426 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287731609 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.286155994 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289140109 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.294278686 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290359862 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.282629154 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289024373 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298282218 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.30732646 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289685071 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296601855 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305869592 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288901437 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291230789 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293868832 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287302672 seconds)
  done (took 64.527514934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290337693 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286374885 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286546798 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288805662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.29016896 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.291905704 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290659829 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291308394 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288537888 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291394317 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288001848 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.291916336 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288556831 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287680351 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290012768 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289719671 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290115695 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289769448 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288450774 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287961318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288856982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.29360402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289239492 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289978205 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292955918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2881463 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290961242 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290968889 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289728541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289924493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291355106 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291219748 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.2922326 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290275098 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289735446 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291683046 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293199861 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.290700878 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29303021 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287744485 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292404275 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294137933 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290290338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291754243 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29028727 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290681825 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293391954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289553614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.292531075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29533701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293427906 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290718087 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294325807 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289515847 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290360716 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293131954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290123056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290817034 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295303573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292105572 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292735117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293896908 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291461359 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.295804054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296248729 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289006777 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290264002 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295966805 seconds)
  done (took 88.987428728 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295017134 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.292143076 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291369352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294887847 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291214611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294582688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294931295 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.2939024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294047124 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294138435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292879975 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294100063 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293096115 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293444546 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295537329 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295921736 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297555921 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294879846 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295871614 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294003573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29562424 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293913158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292241044 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294625828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295327616 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295208494 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296523001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296248089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295944268 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295983743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293961552 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294128502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29655556 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300295905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.294311663 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296352102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296574369 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295585782 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294830036 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296271242 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295404623 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295090331 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293416852 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29545031 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296241177 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29661133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296608032 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2961204 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296810464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299393959 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297715562 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298736081 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295584607 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296874898 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297131899 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.297335648 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29580629 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295307072 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297577131 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298422781 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297546992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.297924682 seconds)
  done (took 81.523160503 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293974837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295612641 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295873962 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294683302 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298922958 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29641503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296071387 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298716242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297692367 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300054313 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299713778 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297726304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297431498 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299907625 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.298471986 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300763838 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298937396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297312384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301335343 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297870457 seconds)
  done (took 27.160625404 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295628689 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296247951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296675669 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294932724 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301183666 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297909959 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295278588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300163931 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296977862 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299496478 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300883382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299579217 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300214969 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296906453 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299350761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297888247 seconds)
  done (took 21.972674255 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299327337 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300578647 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.299415493 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300742707 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.2976376 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.298212648 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301406311 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.299133966 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298886791 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301995989 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301377338 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300724849 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.300837856 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.300754977 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300026493 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.300309339 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297056432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299328359 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.301917277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.301539366 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.298252846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.301597462 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301995538 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301796035 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.299139897 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299661945 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29828747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301944547 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300319236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302770515 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.301500599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29936237 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301001934 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29987667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.302037158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29921225 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299271246 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303687373 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303111819 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.302100708 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300863642 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.302437731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.30244724 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30329428 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299747249 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30491314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301372725 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300672492 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302296086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302501849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.302700424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.303999744 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302840504 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303461794 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305516239 seconds)
  done (took 72.763641331 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304066361 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304483947 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300198154 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304368738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304213264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301295196 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304964389 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302415499 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301091519 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303507351 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29754133 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303787871 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30321216 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30590632 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300605985 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303182673 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301492323 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301641943 seconds)
  done (took 24.653584088 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30341585 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302328138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306317079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301273849 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.305178105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306053814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300130315 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302357496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30519076 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302334254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302539329 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307046219 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306092876 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.3059531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302168855 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304202346 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308091793 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306259711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301954259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300909689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306775643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304144779 seconds)
  done (took 29.899655254 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302300752 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.304460598 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.302852284 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.319965252 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320969758 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.327426998 seconds)
  done (took 9.088419687 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313033718 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305484736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30241875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309720199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304604185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300928342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303677912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301759088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31104788 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30655237 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303031762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306816925 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310864207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305315192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308117953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308058517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307164235 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30547394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30610408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30623273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306208496 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30771915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304953975 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306683633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30558656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309211159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308644399 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305779807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306761849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30721426 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308583206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306425842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308739345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305040819 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305924126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304056883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307629626 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306713337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308741318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304918882 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308859689 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30726224 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310093776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307268338 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307740912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306343693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304967472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305634142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3047663 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31001528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308550541 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309460731 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308129676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310095332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308576626 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310309062 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30868877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308232444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308615588 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306598577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306383429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309831079 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307488422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307733755 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308144291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30994949 seconds)
  done (took 87.508772557 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307339932 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30849293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311369147 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309949904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307737834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307733245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31088926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308310801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307748846 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308633633 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309312748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309564914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310272487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306765665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308020203 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309008397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30737321 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30929515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306411161 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311530518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307801989 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311841996 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312019371 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311717556 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307798013 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314731402 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312180642 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309825315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308510082 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311085734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307974006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310023002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310037288 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312695903 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310104701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308395808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310130474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309003102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310571823 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314458391 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311813601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3130717 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310291319 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309055434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310924644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308822369 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311432036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311593985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313574963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31337076 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311421494 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313487002 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310854998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307122408 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313161234 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310202421 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309002891 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308626738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31015852 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314844987 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314204482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308507493 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312839662 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310418206 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311082236 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31153896 seconds)
  done (took 87.692942872 seconds)
done (took 1761.689851271 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47523944 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42906175 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309608743 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315215447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307113813 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320532765 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.318641892 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30589791 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310289189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31343298 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310396915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498563808 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.310013226 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308903841 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315962541 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406456465 seconds)
  done (took 42.771787991 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344432973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3210661 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435817561 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337883446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343164322 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500223443 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372807828 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.314122932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.496062989 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362252118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.892065114 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.338241319 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318155223 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.443817713 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332200153 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501609102 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.576467926 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.900766093 seconds)
  done (took 30.350601225 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785678022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.340658497 seconds)
  done (took 9.343941777 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338713748 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314975998 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317955987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319449985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.319720065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.306482114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317648866 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.314293777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.050181045 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446343562 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320853065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.332030742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341602751 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321823281 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319452684 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359287934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468344855 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317576147 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31366505 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322950949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319463951 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436813183 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362954223 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317941819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444965109 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.039043787 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323958566 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326660118 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.466636021 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319625681 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321390373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318858647 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323059422 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.254599712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.860318478 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.314576455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344826995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332402145 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.320621549 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489279929 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323906003 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326150224 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.315895473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.832743276 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458447505 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440498562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.562495769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336937917 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322314382 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387734208 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322696065 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326030589 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.371244675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138675121 seconds)
  done (took 111.399859413 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.343916704 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.703128638 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484877354 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331452497 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050277109 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067254403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320129796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612300442 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.394199465 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316033141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614578023 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836960922 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335496165 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.31481656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782359033 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.412797633 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314536149 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.20643103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332068629 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313921149 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807773143 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310534647 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324463361 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.478879905 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350322578 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774297587 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.727202571 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.878687415 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336000946 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.311292316 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7965311 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342374798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337618745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315491453 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588728377 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678338816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662947771 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326674915 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.315387573 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315353875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.329754964 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777353254 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675673663 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326999835 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.314102177 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775894319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.3291763 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.321144563 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32250086 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526809695 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.985366918 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311805902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.710975633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.313680479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.600637789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.361976217 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352537241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804216275 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329474848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.45371616 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375259654 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319504772 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312172712 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322881926 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315205964 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664714206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666434091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321088484 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669284758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798271457 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3386509 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848114502 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.213024003 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336463399 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.428223465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319736397 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.015868811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819686518 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333094836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.313202779 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667257721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33586166 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595154039 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329952716 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315577533 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820764994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.321047012 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.347278105 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.328687146 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314332135 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.102239637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326909389 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.601267512 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.380430677 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320671431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.321898378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.357054503 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315869808 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3145745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.32543249 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850380335 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.341134136 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.450124828 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.338769695 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330591828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317523127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324122661 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321994992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547180417 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.78507745 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.343203574 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324007466 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.315775463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.323994215 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.488352393 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32510858 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.643803133 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339885684 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320352791 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318192027 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.086425202 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362187335 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316231742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324347733 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211688134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.523966989 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338023094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.335400528 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324074812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33922867 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.563178982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336155239 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.397760329 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325705268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033588807 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365176703 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.346244635 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.649996518 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33148219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.196619452 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.336638567 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321470874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614489874 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587900581 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.577667463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32527678 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.320565457 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.031070051 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.370650356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460312171 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341108597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316668656 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524853479 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797293928 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325628978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.922885495 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.323048382 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543094097 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326580262 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63718237 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825790808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341551852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325081349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04692805 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.053446107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.152295459 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.327755475 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.599106842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.269337202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796240255 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.32597795 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327892978 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.905055429 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326349722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322613489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.327332536 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.326908409 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.622821331 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498747827 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.979990455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33094835 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782613316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.380213386 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3220206 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324166491 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323415545 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.674551085 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357615438 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.326805747 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.333049008 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.328033311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326609243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804269707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.248164739 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.323383131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4785316 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965655001 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.34424288 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33034448 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.954032603 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.552442075 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878928487 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342401605 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.640912557 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.338973798 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366769353 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106666785 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413344098 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.80241905 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340423799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.323811725 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943182837 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.346820137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697319842 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.322892712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331152492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875102785 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.345738591 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.328249835 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.577745568 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342893523 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580081792 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.331785396 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.334012613 seconds)
  done (took 1110.180653406 seconds)
done (took 1305.263072943 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.329747794 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329879814 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31249267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330786131 seconds)
  done (took 26.537959472 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.348558912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.336939375 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338819823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33571665 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.340814824 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337302013 seconds)
  done (took 9.274888413 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.360034323 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325037627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331608377 seconds)
  done (took 19.254966103 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553232684 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.625215949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.672142449 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.533457573 seconds)
  done (took 10.623040355 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336936495 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339645074 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.340503296 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341084884 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.353429405 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353046202 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.341412678 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342631458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.352241186 seconds)
  done (took 13.339755378 seconds)
done (took 80.268228561 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.709038504 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412404228 seconds)
    (3/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440074735 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333411834 seconds)
    (5/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.314663954 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.749227073 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.32088312 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.894092801 seconds)
    (9/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394453502 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.907380773 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.717822262 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.579634262 seconds)
    (13/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.550115012 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.369489172 seconds)
    (15/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455336916 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.342956992 seconds)
    (17/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.143943766 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.369049941 seconds)
    (19/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442286948 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358587336 seconds)
    (21/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050882377 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 5.616981971 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.637424213 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.306969798 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.300492427 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.558234 seconds)
    (27/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.957856435 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.315947498 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.308212511 seconds)
    (30/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371913722 seconds)
    (31/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.715964177 seconds)
    (32/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.305738633 seconds)
    (33/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.308463965 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.223783723 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306933662 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.334996507 seconds)
    (37/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390292215 seconds)
    (38/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35878386 seconds)
    (39/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.314482839 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.804284179 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428987202 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.991627209 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345900129 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.92708064 seconds)
    (45/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.308999715 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.306902032 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.374803518 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.85999323 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454735745 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.445678303 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.952402622 seconds)
    (52/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.320336307 seconds)
    (53/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.30710562 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.601502482 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.261333196 seconds)
    (56/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.306261879 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.381929859 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.757486567 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.344488622 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.294619236 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387237847 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.354010926 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.346481937 seconds)
    (64/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339538188 seconds)
    (65/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.719916211 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.144660097 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3872185 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.343012081 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.716686141 seconds)
    (70/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350144305 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.340009802 seconds)
    (72/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.710691897 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362208915 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.152406113 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.190367998 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.761641851 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.531392454 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.10798153 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.815468058 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.579142982 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.311555438 seconds)
    (82/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.54244646 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.212953581 seconds)
    (84/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.154887181 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567949556 seconds)
    (86/286) benchmarking ("sort", Float32, true)...
    done (took 6.345686628 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.309009971 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.356466011 seconds)
    (89/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.640593454 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.843196359 seconds)
    (91/286) benchmarking ("sort", BigInt, true)...
    done (took 6.329550544 seconds)
    (92/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.460738422 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.00524964 seconds)
    (94/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.778005354 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.312531102 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312415315 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.361686173 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.317790523 seconds)
    (99/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.591150262 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.38179882 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.550807338 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.788178064 seconds)
    (103/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.651341253 seconds)
    (104/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.318136782 seconds)
    (105/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349667569 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.441148978 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.551968047 seconds)
    (108/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374933148 seconds)
    (109/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.313995654 seconds)
    (110/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.396903767 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.042438565 seconds)
    (112/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313747812 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.465205292 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.338276633 seconds)
    (115/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.368533068 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450529917 seconds)
    (117/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361981003 seconds)
    (118/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.405176805 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386775638 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.349514474 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.322334534 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363902504 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.86155968 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.380750225 seconds)
    (125/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.602784021 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.605332316 seconds)
    (127/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.816762591 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351756405 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.118048131 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589852732 seconds)
    (131/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.966627856 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.701582428 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.338969009 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.073849555 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.450940097 seconds)
    (136/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.70904322 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438998179 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.346243843 seconds)
    (139/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.190638524 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.43002428 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.118691202 seconds)
    (142/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.649179017 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.280238326 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.566691537 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119428855 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361683861 seconds)
    (147/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.31918584 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313984601 seconds)
    (149/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.400379563 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.316519553 seconds)
    (151/286) benchmarking ("sort", BigInt, false)...
    done (took 6.344226344 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.402798468 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 6.339752201 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.964244447 seconds)
    (155/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.989315949 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367926328 seconds)
    (157/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.32358012 seconds)
    (158/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.880379714 seconds)
    (159/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.358555497 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.389832629 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.871516325 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.205639281 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.38868081 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.580803553 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.315520747 seconds)
    (166/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.316340068 seconds)
    (167/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.606089203 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.214187728 seconds)
    (169/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362796376 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821399914 seconds)
    (171/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.438974407 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.350590732 seconds)
    (173/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182989935 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.360795496 seconds)
    (175/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.773293494 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.974307934 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.839471114 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.314892379 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372840342 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.186886316 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355249643 seconds)
    (182/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.781198045 seconds)
    (183/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.419678619 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.388276186 seconds)
    (185/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362235692 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.883907922 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.408774341 seconds)
    (188/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.973967369 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.829929118 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.363148347 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.424125406 seconds)
    (192/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.216968116 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 5.416827044 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.411557582 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.579832748 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.385042372 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.472049642 seconds)
    (198/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.349082497 seconds)
    (199/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445511255 seconds)
    (200/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.325259425 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.412232038 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326735983 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.348246487 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.092574809 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.290075351 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.980283504 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.544645605 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.878074653 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.343955615 seconds)
    (210/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.326516661 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405729173 seconds)
    (212/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429438898 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369642108 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34801333 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.523569033 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56570501 seconds)
    (217/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.33578259 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380209292 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.704883433 seconds)
    (220/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.539602111 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.525965524 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.326238377 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.414190871 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.698516553 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.139859571 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178269485 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.342229225 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.900460647 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.901868706 seconds)
    (230/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.798710402 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.345719055 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.331177854 seconds)
    (233/286) benchmarking ("sort", Float32, false)...
    done (took 5.369544623 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368137386 seconds)
    (235/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.463501879 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.329576464 seconds)
    (237/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.861782775 seconds)
    (238/286) benchmarking ("sort", Int8, true)...
    done (took 6.341059739 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.459092984 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56968765 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.234996012 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.549267818 seconds)
    (243/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.138209498 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.746472297 seconds)
    (245/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.454849225 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.326458632 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.393618105 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433841206 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375796732 seconds)
    (250/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447580085 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.732789161 seconds)
    (252/286) benchmarking ("sort", Int8, false)...
    done (took 4.412912329 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.432330638 seconds)
    (254/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.339508182 seconds)
    (255/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431033695 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.374524032 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.448177257 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.349378046 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.070075651 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.530877332 seconds)
    (261/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.367570495 seconds)
    (262/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.428445753 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.436180774 seconds)
    (264/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.716613786 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426939857 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.992255127 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459064721 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.939367003 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.162969682 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.963301563 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.392319804 seconds)
    (272/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.721000974 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.32462713 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.375008515 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.142389364 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.620950931 seconds)
    (277/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.464631418 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.221823612 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.46023137 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.351645452 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.403791056 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.434940801 seconds)
    (283/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.246140573 seconds)
    (284/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.137391992 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.252300636 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.321524005 seconds)
  done (took 944.060509896 seconds)
done (took 945.302973008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384553648 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387754258 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363094325 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384993295 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478922916 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.385460485 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.373425122 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.366569424 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412358224 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412637107 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.367578127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.387431839 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372430787 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368694586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.364206927 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385049981 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.499089767 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369210311 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387853092 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371666879 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.387399014 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368901192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.413148785 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.384803304 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.369327957 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366053772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373013715 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.392888909 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.480958434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.375271487 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.3657464 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.379689879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.497357148 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363482513 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362865794 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.388815709 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.381231457 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374139692 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368140694 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404826242 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.877516061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.378945194 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372796619 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366008929 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367182276 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371339824 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.37166702 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37038302 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386434209 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387468335 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.864343145 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.393440788 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.374253351 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.366211683 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376415358 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372001379 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369521611 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391354073 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392254372 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389316593 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.490089022 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.374514594 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370051991 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.389675698 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.38136307 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.902454847 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.368989867 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372537311 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.875493109 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.380189708 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.896757672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.389777489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.364154011 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387112426 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40500433 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.497373972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360524361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.365523742 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382009801 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371532349 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376896663 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390086124 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.373813769 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37118006 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388796142 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389581462 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.381370213 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.376233775 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379324353 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.395848792 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.381846267 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388956857 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371744692 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.366281678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376735144 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.374484184 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37856973 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.379037981 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373919272 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.381429527 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.880370536 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403781492 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.366855236 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.366241967 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368454805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.391232683 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.879251177 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384600325 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.39219789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.416107523 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371152985 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.491823785 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.37743147 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394823634 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.377783261 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373178599 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363966367 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.490302022 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.865778423 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396649612 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369378269 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374068884 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395062602 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.373129954 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368536225 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.466744117 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.362724651 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394121095 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498097835 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.382533198 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.409686626 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.376752034 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.374594804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393300949 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395647926 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409109216 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.374215165 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396952029 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.396946422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.368117333 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388744296 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.385095778 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370782974 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.381704517 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366245861 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394655203 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393595627 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392921428 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.394633217 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.502920146 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367964001 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.453767637 seconds)
done (took 232.366798637 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427899157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.363630806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.454484009 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36922351 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.472546061 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471164092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366888033 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366560692 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366840539 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747471051 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.363344061 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365866916 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.368191276 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.368177058 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451395415 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367287029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.367592637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.738419633 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368750169 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440798716 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.365080478 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.368737584 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370397823 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.772791983 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367631893 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362846699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.439980964 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368318924 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717463738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.366639263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.368836537 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715441862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46097589 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.387863408 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379098453 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377314601 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.47522306 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.389457772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454360985 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.453807177 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455299746 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.410420396 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.365377144 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.364975322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371750101 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372924975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366556638 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398745201 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367912508 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366520038 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712427783 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381849295 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369551093 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.371300666 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370674881 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401973667 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3680723 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373036303 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462247719 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372365417 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433916362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.783602187 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.749167687 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371411428 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.371384884 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371980069 seconds)
  done (took 150.93787596 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435663971 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444901064 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490903384 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389957274 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.42418476 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491148005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.387542015 seconds)
  done (took 11.330660207 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378213988 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374318401 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423161501 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42320276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372082977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.552926443 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373303955 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.385902336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.373267625 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424833602 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377574692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373386802 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380444685 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.37437769 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.424645648 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.387563074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488628374 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.376007008 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373930727 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533376954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369065593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383062458 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.428018337 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386430734 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375113888 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37789748 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.202134882 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378746322 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371127783 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374739641 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372796327 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.454113774 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373306874 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373683899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370136236 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.492146792 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.37387876 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374379779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375559438 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.371210604 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375208167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.376749703 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375207096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375240078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375499417 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398020879 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.375425748 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377454349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378505259 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377372334 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.426304444 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377413317 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377998048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37441035 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429642771 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382854426 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.378178511 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375923675 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379771462 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374695588 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.532800913 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422959357 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375811988 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425918173 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378519496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378699976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379131287 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377429115 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43148211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376534172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425966187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374057273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55781482 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.401430397 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379391687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.381949682 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382167816 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378030833 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371802201 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.383540381 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377230641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378230086 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38319954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378925965 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375360015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.550293878 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486725837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.378303776 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.393098046 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388957763 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37637664 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431374067 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.381285857 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378064757 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432408347 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49368627 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431939185 seconds)
  done (took 157.815013899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384276745 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.387480534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384099941 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.404386978 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.395756991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.380100467 seconds)
  done (took 9.60981672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383811633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378828714 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379816282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.380491489 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380701826 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381019504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378678406 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380943354 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388091985 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.381882783 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380802927 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38731566 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382681929 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383921724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382235996 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.381882141 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.383017327 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377155326 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382192592 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381486141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.479711786 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.381341427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383452328 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.384602059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.390663624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381543106 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391217349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380437121 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383505245 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389210723 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400105825 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38524884 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.383825804 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.391228955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.388483631 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385574079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389343976 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.388781965 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379014916 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38642973 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390765787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383655682 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.385470869 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387461376 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38644608 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.391316982 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.393567053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.393503844 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.379764385 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.385344847 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386177803 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384976978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383220129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38613565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384873784 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400368195 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392352865 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384709098 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382885361 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386977483 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385634501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38595635 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385388837 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388848581 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39231835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387136487 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.384142687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390864788 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382344215 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384837448 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.390322258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.384141306 seconds)
  done (took 102.130826837 seconds)
done (took 433.089036357 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.430657625 seconds)
  done (took 7.70715753 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.512490661 seconds)
  done (took 7.793424573 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.982195437 seconds)
  done (took 23.268104714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.386116624 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.484334299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.410846289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.387883508 seconds)
  done (took 26.949461479 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.827727499 seconds)
  done (took 8.109272965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377682135 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.380191112 seconds)
  done (took 14.037701867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.484411129 seconds)
  done (took 7.76276233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.490132304 seconds)
  done (took 7.777088772 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.386058077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.39702674 seconds)
  done (took 14.078323601 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357965355 seconds)
  done (took 7.633705939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.805191399 seconds)
  done (took 12.083587049 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.393778257 seconds)
  done (took 7.674231291 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.434511186 seconds)
  done (took 7.715383368 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.792937016 seconds)
  done (took 10.073495267 seconds)
done (took 163.944705626 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.382686874 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.381734612 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.379635393 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376850957 seconds)
  done (took 26.79967654 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419765359 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420851505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.421999295 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.43106742 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42319695 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42152726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415493605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413851028 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431790182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423093331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426438818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.424986201 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421332256 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412623954 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421172269 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421072556 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.432857063 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.423502638 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413691252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.424377536 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387753526 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43545381 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.425366448 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.388575773 seconds)
  done (took 35.363107719 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.909550455 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457995436 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541872309 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.440972452 seconds)
  done (took 7.630557588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439062914 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.445734449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.454140077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.495279804 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.519435284 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4522397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419112733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.410712649 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397751038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443031269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516498142 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.46004281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531053091 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389450338 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572379877 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387743109 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.389557889 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440787536 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.493226498 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.51733393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389368942 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.442563215 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451601643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458449973 seconds)
  done (took 36.198249463 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388847846 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.410041962 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.389667017 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387681939 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397216988 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39275442 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.391730469 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.392661745 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39113324 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.397478173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.3876618 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399613422 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388648073 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.391502128 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396738939 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.391170515 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394084069 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.392125252 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.391476883 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395623757 seconds)
  done (took 29.152194322 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.382411426 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.59899392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736001487 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64071811 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.385815975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384065242 seconds)
  done (took 28.412003884 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.462922273 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.618766711 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.380256914 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765572681 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.850848929 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.399084636 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388978093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.64737702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.976078439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966573827 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451052668 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451293221 seconds)
  done (took 20.643032918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390772234 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.38278989 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.389543644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398562504 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446850699 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401714064 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397262906 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.382643283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450533859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.460796452 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402394299 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448603187 seconds)
  done (took 38.23905046 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473869195 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435170496 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.433997185 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436288852 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104538327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590341672 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441200619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15972915 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.409568317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662574569 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392174445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47641359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644413004 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396253355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387384067 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.413933136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634219346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894351297 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389916927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.796581802 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411444279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389694202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.715052094 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635414462 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614935374 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36561666 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.649072606 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.165986187 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691123526 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399793312 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401067932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385502739 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663734315 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075530401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505194721 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617389265 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406115388 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.02907439 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.391452334 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.620407136 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40126095 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393878089 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403917593 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391254345 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324610929 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405493867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16107717 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.413923673 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.103249554 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392043113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666505024 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492269836 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395963075 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.958925046 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475330188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416463978 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395929021 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487267051 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976291412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.882201271 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40208307 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.326072712 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39885056 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.617958004 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031670619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.405686543 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395522372 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397051633 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328717304 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.600982376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407551378 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559595343 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410883002 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042786335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102447698 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403710588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323959403 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959435228 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387425036 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331307934 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623766227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170596396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329095816 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.341472713 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327887139 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131771811 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401902399 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.990637166 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416601328 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194742413 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639189806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4298917 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417377829 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619423576 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.271125903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390374629 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.393364869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523893984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405784271 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16203501 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344377108 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389794496 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651111342 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.606837845 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395369989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.4416659 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927905019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415420762 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.407792284 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401072536 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623337969 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.017714732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4234379 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889444386 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413410657 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170260296 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171059269 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401734601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399340579 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403487815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682892238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180486746 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277661248 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464009124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400692944 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393102783 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66179475 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246382271 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.552568346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.609976609 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430035754 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406624473 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394795289 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343503914 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.401388758 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408164827 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.173723733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61782691 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395715756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672582278 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332099048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54403584 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39850606 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.613282064 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.684169793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.422081827 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655933878 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412008365 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397616622 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408852014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417719083 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499331804 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418050279 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.40947065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652469026 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.40126632 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.404273 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.664491221 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.178989022 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40920142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404616742 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403064911 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014593228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39582146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394716586 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493766282 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411708973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465450595 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403896215 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62928907 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.786363223 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428090447 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395870907 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.406753579 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620497323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407581968 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.621664389 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481163634 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.918871311 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0278107 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4296316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.334514197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107908573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.090079814 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400287891 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589257839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405417689 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63001051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43099832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403015642 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001096612 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409010119 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.663152457 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.406017808 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412650434 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.405386586 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403832345 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.765184974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921528484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405417173 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410672189 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544160192 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41674495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337090499 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918393088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406828325 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40266354 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.174519455 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439284065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.679827709 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319411058 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678972397 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398731744 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672766474 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.760349486 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.4378911 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403546714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41352501 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404978624 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.41718527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42556468 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.416977309 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.650741175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844812779 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974270083 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144064304 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95943357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.818850337 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.423713501 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28678647 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188136274 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356647954 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058930529 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654043322 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182978419 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366102239 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917077323 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.716868205 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239664607 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680474004 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631236194 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.809480004 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.438109207 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684146358 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618089953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438065808 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411099912 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331793566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.696035744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019712923 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422870622 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49897245 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185523932 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423171154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.201508984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.450032057 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.218866433 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846757536 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967044626 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792507708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397861064 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423052687 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329213005 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427282942 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929174193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046224005 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418555534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.925609954 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358898968 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638275162 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.432540616 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401062438 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.126030084 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.881729056 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.659385095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682872938 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342656601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418137657 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955085966 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.274396843 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.41255228 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408362413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187142486 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419407781 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715208915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.4229765 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.77974947 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42570354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341538837 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339961733 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.100309669 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415777579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380182053 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907997277 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.412338145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403457964 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416435856 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251347951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662280316 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418544651 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012254865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640800552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424568394 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420227234 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409369999 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411860977 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.390840947 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.306425087 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64147123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420751015 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651365539 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.468602863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.312061189 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.443451957 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610932104 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290151664 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407287347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671816193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.136895425 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.4188825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134842389 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442240169 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423517356 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424273847 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412652067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423205262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497310105 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639389002 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.437085644 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421384951 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847970421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428687971 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41234638 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422710954 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506110474 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.944351766 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.775518394 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.200170467 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025157903 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174451847 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034405638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706883159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413445048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413364054 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345645671 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550323971 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938448461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681138156 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540977424 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.41297907 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425982306 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4171989 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420373815 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621745641 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682565662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281743747 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423291222 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105433265 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.29784997 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419410096 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623441411 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928779463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982863558 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698186015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410276681 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203173728 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705989736 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500197548 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412549181 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000926447 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.434910471 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.228430396 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418402936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420493229 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562972765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690836197 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109295909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.442532881 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574748854 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.184137151 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.689598087 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670736844 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.950919865 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648895018 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041643009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159208161 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673720087 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479140291 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644044282 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535859759 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559615903 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.420929496 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.315669443 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415523756 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257965143 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.1210537 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421981793 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026868994 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682405419 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416366907 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.421007378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435087775 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.419869278 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634023758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160530936 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636325697 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425187323 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424355432 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.983863104 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028334068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699933791 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351196354 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.410445498 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68548179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670708197 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440224833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.866850497 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.12502013 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98123259 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.3808331 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437669383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419687223 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157958515 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030802201 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.797160926 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943516994 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074227001 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414601107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690320585 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.42088484 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427155299 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693660744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417403841 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426047321 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650355489 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043445726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240125686 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.432405502 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.715572234 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.355063468 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642651199 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423704892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37277686 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412331721 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.860295414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44016224 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54742084 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416827077 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420819176 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430653859 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.148012822 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692131186 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.4144792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399174732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.396593819 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448678339 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511540681 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035106552 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442778403 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092765543 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770375097 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672938058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41595968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.395989553 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422458735 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417035988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135135858 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377777502 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414133554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981550198 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.413228399 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.431269434 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424113801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.634886758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631189863 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439490639 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655766249 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44992908 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434604413 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317982685 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189455914 seconds)
  done (took 1699.961867507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473466461 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.454435901 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.429578185 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.45916659 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447543341 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432053698 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.473422122 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457716754 seconds)
  done (took 52.944588184 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.435181694 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575082585 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.451436926 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426754783 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.421318175 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.429931711 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.919344611 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.444986783 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.423490432 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.429866326 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.426400597 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.43041722 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.097048035 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.431887363 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.42080313 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.452200822 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.420217424 seconds)
  done (took 66.96228512 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.784505916 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.611861847 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.741745077 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.494017757 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.464169875 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.428202071 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.659183266 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.440432668 seconds)
  done (took 54.943614786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43052277 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434764882 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435659754 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431766798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433262534 seconds)
  done (took 8.486047979 seconds)
done (took 2107.01881047 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425123913 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428816725 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425952778 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.431509255 seconds)
  done (took 7.031152895 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.399527938 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.083639536 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.404175498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421987438 seconds)
  done (took 18.631441916 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.443295926 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.431944194 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17403291 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072668462 seconds)
  done (took 5.568311333 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.174397689 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.185879512 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.170013876 seconds)
  done (took 7.850915437 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.422458977 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.425757207 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.424645938 seconds)
  done (took 20.595881417 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.741927357 seconds)
  done (took 3.064061328 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.56979223 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.624560203 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.795325819 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.757600491 seconds)
  done (took 8.067315798 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.815589599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.805246564 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609023604 seconds)
  done (took 6.547570126 seconds)
done (took 91.553461763 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.430858028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440012799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.635939627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.443301674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.654729837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.636900315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857361634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.410052177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.910424672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.89217983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.397267477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.670443416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.578640686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.449769815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.574280738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.831942321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.656255383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.485932101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.127123712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.2918138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.839471003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.03764946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.236301329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.075750786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.675573445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.584079237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.618848764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825087066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.302302856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.64229121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.580338942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436964964 seconds)
  done (took 196.551994199 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4277921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420731832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422163582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.434961272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435548039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.435678287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.434822992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416945422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419663675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.440808566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419120043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.421006083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422970382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.423276382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436322775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.420107222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437895586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438361324 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.459329781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427101176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42446452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417990216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43316082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433406345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42303017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438478111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.422631236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.438927024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434841077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422105136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.424299331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43805824 seconds)
  done (took 207.072195039 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.431606364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436859436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.440422383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420306883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.43591932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.424726815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438813078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.438801814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438245297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.442734265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421365753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.423946512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425692322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438919084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42346059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.440184748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424307213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454318414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.429433212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420442618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423974892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438590312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42400917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.441707716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437150245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423289805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453433926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425290012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437070019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423608762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433092066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435129798 seconds)
  done (took 207.175748296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.628582321 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438507014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.435817791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370246606 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436840522 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.441356608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.432411271 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.635954895 seconds)
  done (took 15.151954805 seconds)
done (took 627.274397224 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.819320092 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.510192517 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.636084757 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452811564 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.258358335 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.469378792 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455712919 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.644970808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.369635627 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641979475 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.750719609 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.466123035 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.905690767 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45139466 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.726212553 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556163875 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.335099532 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.444622087 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.780665419 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.014827302 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716359268 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.966976097 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654540827 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.374705375 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.909983028 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.985333757 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.247050952 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.345203266 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.47164574 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.792348016 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.157403575 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.483075319 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497793206 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519689833 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.581925639 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567523145 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.48601663 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.52166221 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669438333 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740189012 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.010683515 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.184686609 seconds)
  done (took 96.907519904 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.423297393 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422333458 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.42468443 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.420285079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.421287265 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.424901718 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.424331162 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.41628719 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.42228935 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421667203 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.423397186 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.421390446 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419116394 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.423589802 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.422162761 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421067281 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.424160376 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.423527551 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421325026 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.421857564 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422102368 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.424814888 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.424101769 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.420787883 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.423561572 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42466243 seconds)
  done (took 38.314097564 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.442887744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699691671 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.864742454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439925317 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435868175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.448353357 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.528459877 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44628104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.447976693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.448531614 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.606208614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439661786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474456006 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.897926672 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.439615778 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444425256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439090935 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440244877 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.714036434 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45313878 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.548111276 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445855253 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.526497229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454213115 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467536888 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443297124 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444438488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.025408433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461862095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.608592279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.279210294 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.527375946 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.974957648 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.917750363 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.280645612 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446123704 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444611991 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60803418 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442071896 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.445610571 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.528659137 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.446277013 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.897549283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.125208319 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457695383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.444944048 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.044721322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.616383535 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.704274424 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457044191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911378333 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440876332 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.45017052 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.446636893 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.71168713 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455695927 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445610339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.069522631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470198382 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.531334318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445962724 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445645398 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.718676349 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.447510796 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704303748 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.450792015 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.458995166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.465890918 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.893303984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.451664188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.158001281 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.465730302 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448335263 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.607883899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.703718537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.084871599 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.469257425 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720508426 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986466152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.545958511 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.452675396 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.020274474 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.553079975 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453983065 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448100246 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448435834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.448226769 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.49923824 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.528292364 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093433182 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15741041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.092749363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553226199 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.458608991 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.448924507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.076382755 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.468547724 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.45269098 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.875555353 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143087212 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462348697 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455770232 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.148444793 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.460053109 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.535000001 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456307176 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.891034597 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.441425073 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499133108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449184562 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456394226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473025157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536929522 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.455215508 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451859043 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.118420971 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633951447 seconds)
  done (took 190.608472537 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452812679 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.439209142 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.44238016 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435612211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.441621706 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.454321901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443853649 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.446731773 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.447103559 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.443609584 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.443370054 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.446532169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.441750431 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.451962072 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451246534 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.452838359 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.054564887 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.440118858 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443474411 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.437288685 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.257336687 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442170324 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441825336 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.4374564 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.446010354 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.449175898 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.444527989 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.440243669 seconds)
  done (took 155.210407657 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453310878 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074494374 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469262945 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.592892516 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472141171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451464344 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.588496256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.51470085 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.470966519 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.4520323 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.448338167 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.784034693 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.44610119 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.022938868 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.657516949 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.610746023 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.018988099 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463036834 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448657197 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.446644889 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.594151098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.454141652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.765638515 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.043137198 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463575763 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.049422726 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43003966 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454152191 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450412103 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.048709243 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.45925751 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.776549552 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.52941462 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517859427 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.067302741 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034010656 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040031641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.61059094 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.44366331 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.452256604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449252367 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434998363 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.057276054 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.465454101 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.453221968 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.067403292 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474515405 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.452172134 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458848455 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.453068433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519213446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.537731405 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793613198 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058297091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.548099879 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468271772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.591606433 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.851275765 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.449530184 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.024709918 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43634627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085512573 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.470882796 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.433683996 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454102217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.458598871 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.617227 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.593469632 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.019670619 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469668023 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.027495852 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.631643149 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.455111174 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.455772234 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454752633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.081725623 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.047750799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.635449918 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.601027402 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.659224974 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439379926 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454629663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.434833639 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540235045 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.452997248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089354468 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.045021568 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.474312356 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.455156479 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458348103 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455687096 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645224334 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.103371404 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556360404 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017136469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.813877559 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.79612059 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.456992379 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.518440701 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471796832 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.793515329 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457054913 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518910014 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.928740695 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.788235784 seconds)
  done (took 173.780938332 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.71444172 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.717333506 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.5535868 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.60860398 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.09136521 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.031621294 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.791968885 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.604301082 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563256541 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.731087205 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.706498821 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.548212923 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.685026589 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531415429 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.215620242 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543063095 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.572543899 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.614092909 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.620916478 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.518708545 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.165651589 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751658605 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.652652857 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.450477881 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554557198 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250660252 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.020309684 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.985075208 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646361186 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.83736647 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998245519 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.594201556 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.498967299 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.209474935 seconds)
  done (took 69.927025484 seconds)
done (took 726.081618409 seconds)
SAVING RESULT...
DONE!
