cset: moving following pidspec: 32556
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246313719 seconds)
loading group "string"... done (took 0.559369006 seconds)
loading group "linalg"... done (took 7.699076934 seconds)
loading group "parallel"... done (took 0.172579284 seconds)
loading group "find"... done (took 1.190491138 seconds)
loading group "tuple"... done (took 2.112395942 seconds)
loading group "dates"... done (took 1.342280748 seconds)
loading group "micro"... done (took 0.247856728 seconds)
loading group "io"... done (took 0.708637133 seconds)
loading group "scalar"... done (took 42.183119058 seconds)
loading group "sparse"... done (took 13.227054515 seconds)
loading group "broadcast"... done (took 1.170208274 seconds)
loading group "union"... done (took 14.011947067 seconds)
loading group "simd"... done (took 5.152916822 seconds)
loading group "random"... done (took 10.423165667 seconds)
loading group "problem"... done (took 2.248545809 seconds)
loading group "array"... done (took 24.729683072 seconds)
loading group "misc"... done (took 2.270685804 seconds)
loading group "sort"... done (took 3.87204591 seconds)
loading group "collection"... done (took 19.626324334 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580688616 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1421422 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149554065 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147293144 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190652275 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155310049 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157794821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098589156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.955562182 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180234697 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15727196 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531955647 seconds)
done (took 5.171712974 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.257111624 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095333912 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104415063 seconds)
  done (took 0.869474845 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078926581 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146005672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094907088 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078798906 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094720324 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078052976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094275291 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080357711 seconds)
  done (took 1.341489304 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087129992 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097119169 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082474642 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096951933 seconds)
  done (took 1.039914137 seconds)
done (took 4.270223519 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737995361 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28539249 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20524281 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.470129345 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202299851 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221067027 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.727482607 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350867746 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254524304 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102907205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147408026 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393149686 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140918063 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.734508068 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089929008 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126845313 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.192521529 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454161328 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084824804 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112714554 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118243297 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142270558 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128388157 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093273372 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184822383 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081835306 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195283953 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109573883 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080633968 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28879879 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201582388 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.741164654 seconds)
  done (took 11.113574354 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111152154 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134281778 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097331038 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139092305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134563511 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099004525 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08493523 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096242357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120875595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176071026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114216345 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136225411 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095279222 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082643588 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115705192 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243410134 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119337595 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104267616 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10075041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103882201 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122264202 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113392319 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108390344 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093164625 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166980342 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221500763 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110215121 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12515152 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096974266 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112043172 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143583421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142934645 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094688059 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080299542 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17280224 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124277014 seconds)
  done (took 5.129932895 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.075781896 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111586806 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189638384 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104068705 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186622453 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081441289 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142187737 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094458991 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112696014 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255435524 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.180297135 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164532822 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1413823 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116067644 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081127298 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09891393 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095283605 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.640863845 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161989853 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117432702 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11573289 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103442525 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088928889 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364655288 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102661289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080775463 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098719794 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066303627 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121700185 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161095283 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082052323 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.283253235 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.083580057 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120059145 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082605131 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133533201 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094563628 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108830382 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135644671 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100181727 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07936954 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176110944 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105308312 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079582578 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121045091 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135478949 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135135887 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097311368 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081443751 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20659112 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096735763 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113740441 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94938177 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181998812 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09039997 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095379112 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328594636 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10006965 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097561678 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077790833 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.294126369 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185225264 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097763445 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079483302 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096884555 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077526627 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099316295 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389706697 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096500049 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.859725112 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082825544 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106805821 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08304364 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097327776 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10347609 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087442879 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115493203 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079398268 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099090078 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079867023 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097093456 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081203233 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110899033 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102112593 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080400551 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164766106 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07926974 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116376849 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126985919 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083909091 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095164179 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129879925 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082554127 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098032418 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133466242 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080706057 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108875775 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099665143 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142401962 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081608812 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169915845 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080851321 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128462797 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099405647 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114282014 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112372212 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099541702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085066079 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096499591 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077190869 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164387992 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082154515 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09970596 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082852054 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114041856 seconds)
  done (took 22.71235387 seconds)
done (took 40.705423645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317188456 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103942435 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103909952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103275222 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100656906 seconds)
  done (took 1.47792878 seconds)
done (took 2.201540833 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289197113 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172817082 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096252349 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167253517 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093837515 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173672855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161009065 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11194705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20179274 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094707215 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164562734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094315728 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077362974 seconds)
  done (took 2.649194178 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095020158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115792368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083195929 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11183102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076642899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111887311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093360891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1175011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10949003 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086951082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093397991 seconds)
  done (took 1.816399027 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093961638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113084334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082769532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109950394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076607511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110563805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093643579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116072994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110008348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085905368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093603908 seconds)
  done (took 1.809334769 seconds)
done (took 6.989241951 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090794511 seconds)
  done (took 0.80592793 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926540545 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.850160799 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113367806 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150247987 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301136554 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193717715 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476877549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125467061 seconds)
  done (took 11.058837046 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115203117 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113282314 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104335457 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083320407 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101710177 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085456025 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100629947 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102130846 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085489251 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100194229 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083305788 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101270542 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098671524 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083881798 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103446546 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08635579 seconds)
  done (took 2.332022105 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119784213 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118648034 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106502489 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109385834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088187499 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104949263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106075382 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089418064 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10151383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104077526 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090765073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106209563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103869933 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080916517 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105877663 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10799975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087249087 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106516956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107510556 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091006704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107184174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095447041 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087750134 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106763941 seconds)
  done (took 3.263983348 seconds)
done (took 18.181055399 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160079493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10926649 seconds)
  done (took 0.995078708 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095909053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112881903 seconds)
  done (took 0.936199964 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098324938 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094832011 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12061238 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109899081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080374576 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096127459 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120119135 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080312382 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096471455 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080538959 seconds)
  done (took 1.707718198 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082543498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109383019 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101476568 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095874172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105677462 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094708456 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088671648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098664037 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110648461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076991378 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102657547 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114590277 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086896689 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116897894 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105033649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083477784 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102037038 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098710238 seconds)
  done (took 2.508019981 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080312665 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097467259 seconds)
  done (took 0.913611718 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081032385 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094131629 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081209397 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097042711 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093860973 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076564162 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093572558 seconds)
  done (took 1.352176343 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487578807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136370085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253694271 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085910496 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120857325 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303478764 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098308847 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0849978 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103203527 seconds)
  done (took 2.467118018 seconds)
done (took 11.610145172 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0935753 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117443921 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11273696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462922021 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107735771 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098181346 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148436536 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246090142 seconds)
done (took 2.12691912 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143121241 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324921002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113674992 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067680712 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095971153 seconds)
  done (took 1.342957226 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08034154 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099629926 seconds)
  done (took 0.918878284 seconds)
done (took 3.149347785 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080979434 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.129162022 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080295156 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096403333 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080107571 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095619935 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077959649 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097316667 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080096545 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097767536 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096643867 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077149053 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096388471 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080087838 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094853933 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077698675 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097549766 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080663643 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094321574 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076732093 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09440256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080337747 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09449655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078244239 seconds)
  done (took 2.909380746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099826895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098989489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103288613 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085539519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102218359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086133302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102258632 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096858654 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086286291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099448821 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100725098 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085335238 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099829906 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08480684 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099178494 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101208134 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086333671 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098216223 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083823369 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100461271 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102588455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080616043 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101156542 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102944951 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083751735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100803343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083174888 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097866155 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102589138 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084523251 seconds)
  done (took 3.584522052 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086211311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093705211 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078134726 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101906311 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077558733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097293314 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077858043 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095874375 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079659934 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095532084 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080202552 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095057069 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078395405 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096399777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079469607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099376669 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10790166 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078341814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095847312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078914807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099305504 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079009307 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0963206 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078579152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095512216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077140009 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096263166 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078782028 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096369616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077744167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098526115 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082629631 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095872701 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085552639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098330705 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07918252 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09897107 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078547414 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094918291 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094745775 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077577448 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095080282 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077399069 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101654979 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078913124 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097719319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077700981 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097403251 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078640066 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099043762 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07756574 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094891998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080419423 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0956644 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083183923 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094130614 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096510424 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07806338 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096740809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078689075 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094860514 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07797315 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098128688 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079056253 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111671296 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084754268 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095384092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08041908 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096274918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080835841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096911698 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109196063 seconds)
  done (took 7.167943236 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083180895 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105689033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098527486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077556854 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096423767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099355793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079691803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09728977 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085202987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095847593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079640016 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097046187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108510343 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078392535 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096746981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084378798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093895941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079294569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099550123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079602601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098771916 seconds)
  done (took 2.746359552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210606175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104900274 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143000888 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107300261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083726607 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107433858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102699132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087200848 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10344771 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084171088 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101048276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102701257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08372777 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101076413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101371575 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084427253 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103256056 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084854949 seconds)
  done (took 2.652237613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093227878 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099262323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102304338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099108957 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099845092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083854132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104507471 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107717308 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083875059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098744003 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090426818 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100765449 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101046109 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08165324 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101775714 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081782233 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101133747 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082100993 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108735834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104992306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105026428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090933125 seconds)
  done (took 2.878798783 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097307813 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101190988 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118511946 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084943792 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095435895 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080207148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106093441 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081846339 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107069353 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100759138 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081461349 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096995649 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088260732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098342229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104136076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081896186 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100968906 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082667417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100357473 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077771586 seconds)
  done (took 2.643823803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102018598 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.209912375 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099981857 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091747223 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100142627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082455036 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109545178 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101137884 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083217561 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12450856 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10050317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083263039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108400151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105813778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100321522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092532372 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109613075 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110116813 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082766426 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100384757 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126872918 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083566374 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109571895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101062062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083292784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099767576 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101215788 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088251984 seconds)
  done (took 3.652077804 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081680181 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098954124 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078133803 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096785053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079324759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096955824 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078384826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096886235 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081958915 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096679698 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081750861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0982133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083877282 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098900449 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081488625 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099809853 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081841521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097005468 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078999669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096149415 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081557272 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098834506 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081153877 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096498067 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078875868 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099297598 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078285571 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096635052 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082006838 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096401979 seconds)
  done (took 3.43554306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091599848 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106770638 seconds)
  done (took 0.959875858 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079807647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114204768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078604399 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102609658 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085714809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099396457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107640095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087286068 seconds)
  done (took 1.517114949 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095772102 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110147197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083089164 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112728384 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109856031 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095056058 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165868012 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100987093 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087458818 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097561205 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113391259 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081179484 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105851947 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082161564 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105928802 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08750613 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098232335 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08825908 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103272321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098195619 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08314885 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110993402 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084472061 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09677108 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083674904 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110453618 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108768704 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08327224 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102088704 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108399477 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087934006 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093680291 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082066723 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100329872 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080050803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108737465 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111806136 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084545712 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108867863 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083529432 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11177441 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095215731 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087628053 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105837973 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093237538 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10082738 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083826463 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095224456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097089335 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083781535 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095420156 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082225553 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094515607 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090004687 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103696618 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113356365 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081502326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101815678 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085261021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102888028 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089278526 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10180938 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084221869 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099712814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107264812 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085384492 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107599736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078519266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096639582 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080284401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108849486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123354832 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090969373 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101417784 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083903734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098431725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103634445 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084987203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107973704 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090962758 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100488137 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107511066 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090040104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10080468 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086287627 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10824907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098673198 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085303436 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098249534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097225097 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098893042 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081795656 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097131153 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10995725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085896355 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100020942 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080434945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10757841 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076867514 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102245012 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084408884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101417332 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109900097 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089251039 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107197026 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108914031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090199737 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100397764 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085903582 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097848873 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083824305 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103081091 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090539173 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094971345 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103665067 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085719789 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101938648 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090272538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099261481 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083627939 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109104267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107246833 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081992437 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097127403 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08603908 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101307437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087579715 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108228531 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099387074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078102365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096130025 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08703677 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101426928 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088788943 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106530072 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104181138 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077467944 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099296626 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088457332 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10874899 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083361886 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101875804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105160789 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083876265 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100103335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088123777 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103202388 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083347659 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10525014 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084677047 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09715265 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105265924 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085718369 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099939423 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086970897 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105452797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085497451 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101590727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099619636 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08890045 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102349992 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081964453 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100980896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082144612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110764316 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103301493 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07847128 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098205902 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090950888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097948445 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082522278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099956271 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084454852 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101353139 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099103284 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081691208 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102317619 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09557663 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105998446 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10191779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088314921 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110957174 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083269197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102607215 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082439383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102428291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102471626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089587486 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106085916 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088889612 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102648315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079455444 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107526692 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108743059 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082691089 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098991235 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081688585 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105940894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108594808 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087070547 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102604797 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081705899 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101395784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087435167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103550097 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101425366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082047876 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106672118 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08177733 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10816117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102389398 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092419434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105584476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078059483 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105010039 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080857627 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107295734 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078050367 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099062153 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100086175 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084799569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10002321 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085505028 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094374072 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089887088 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108779011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083098504 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10028779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101463878 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092229013 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102029051 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086403309 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.1044631 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088500952 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114966786 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10061828 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086228156 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110771732 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08354248 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095336597 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089091131 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099237161 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100554283 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082688183 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098915696 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086406262 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110127762 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106683458 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076442203 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103213607 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081523808 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099852149 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079306353 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107559322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086876977 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103186217 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110373441 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084775997 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102573746 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088142555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101835809 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084577489 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102547588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105792424 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08457909 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104659757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082879224 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103837549 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083046136 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102316593 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085635889 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102594902 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101272726 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089118546 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100604934 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084147684 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104088749 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083701509 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102777138 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083780127 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10087799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104683406 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084288635 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10179801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085971838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096665125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090289557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101490397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090663894 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101957928 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099131163 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089193919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104095781 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089085863 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102737081 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102408706 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084901711 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101334372 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085803942 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10988133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081518368 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110526405 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107676893 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083605619 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105103392 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083199649 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102932382 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081961736 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103752116 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084882085 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102076569 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101107662 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088050076 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104713329 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083802634 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102897924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084508135 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101894855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084500845 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096357196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081822808 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101541132 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101438604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090093287 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102830443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086389408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101055589 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084093353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101207143 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079898997 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110625116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111362888 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084544743 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110351057 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100920637 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084959669 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111746716 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077251165 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099960225 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081419893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099873546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109831628 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084134421 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11042628 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083660024 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100630533 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081174618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102279897 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08210501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097164862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08058657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105565988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103719675 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082488009 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101898841 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086945672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102692049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099980322 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101172785 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103658105 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084159715 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099198713 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082618175 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101299124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086481845 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10369227 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082034156 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09919275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083479819 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104461253 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084296961 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102023582 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103177113 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090870888 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102206589 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086118236 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106493771 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078002881 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105214531 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102024824 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08365857 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101435766 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088110288 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105771077 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084465805 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109427994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101139034 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084392117 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101843511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082389551 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102015959 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083284854 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102225914 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082425172 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103138502 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11043015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081807739 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104103771 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082612486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102187422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08821009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103634866 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085373114 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111700431 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104767154 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085043792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108696698 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087040382 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105545308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103429193 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084922403 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108550221 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083013297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110941782 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083795011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103539092 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103877197 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08142355 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102011577 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082902539 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101174903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088591297 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102931742 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083609998 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101953341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081508648 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104293489 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106400263 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091681652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104856411 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08680677 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097967868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080940343 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104402861 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100404954 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085889787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10501766 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090239236 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105374789 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085014831 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101355255 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109040056 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090859841 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107544978 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081281881 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10798049 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085044946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105082851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104121332 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085048076 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103367075 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088688844 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104338877 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082869551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111345121 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106650937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085720984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103823495 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08389309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102329393 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079163751 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103479323 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085560094 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10909649 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10541633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083480998 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111757982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083376773 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102602204 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088403796 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102927198 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108808304 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079062278 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103095519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085870016 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104097498 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079140875 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101725567 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081035933 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105644337 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082649039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098736633 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111420029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092076236 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104435906 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082718335 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101657481 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078986766 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098333733 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082287458 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104897478 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104270642 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09361553 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101559979 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082838232 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098100689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083913563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106237033 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105594279 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081673807 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098229869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082237444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105253733 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091450742 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101571379 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083888382 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106409762 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105722172 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082733971 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106919678 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081015593 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106072726 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093940476 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104434347 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102997935 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089510367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111518785 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085495258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098237442 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084540054 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105455984 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102750038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084926655 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104338524 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096641225 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106215209 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083371706 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102442266 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105087441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083260991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110273988 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085569763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104236146 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089552331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10478927 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112535959 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08726516 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109694591 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086356402 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10558213 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101560796 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084143161 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101017876 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081775823 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104294387 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086025996 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108849609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111749243 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083363031 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112741168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091806181 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108220807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081142977 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102769215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083167271 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100017977 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104193158 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081895191 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101688463 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082545588 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102166504 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085363425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109215271 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086267122 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104487979 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102950315 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078889224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10695689 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086540084 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1040768 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081063389 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10345347 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085178959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109777951 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107312781 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083963663 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104774636 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086261724 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103204174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079272491 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109443664 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083098459 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105089919 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083794491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103780562 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103975338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08781645 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109606644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086301508 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104638328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11542764 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086562177 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100325 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081763816 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108016242 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083022258 seconds)
  done (took 57.906900558 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146528159 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080440205 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099228047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079189266 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114012838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099790762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079671132 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100241327 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08152095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102187101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079607957 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098682895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109571284 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125701502 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093957427 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103808807 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078530004 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100118883 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098971846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080568955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109201412 seconds)
  done (took 2.876726717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104844555 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117378664 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114436982 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119495919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089869787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115785387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114102601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11513975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101058553 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11126561 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118938032 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114959386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092240367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111669604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110111392 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094146887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119610449 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109240381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117289885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095607768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113541334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114604497 seconds)
  done (took 3.227971278 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084475158 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102155159 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085320156 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098336857 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083459784 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098346956 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087552713 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100377322 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087561323 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102790033 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082238439 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102540231 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104201381 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079297976 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10234081 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081144533 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15211092 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106885624 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083441368 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105618251 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079155219 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105639733 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098671179 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079519716 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101653582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088050355 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104365263 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082083045 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103083837 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082840974 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103769329 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081184644 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104571057 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103512373 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08233889 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10255563 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083781414 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10328862 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079434693 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101452525 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085257706 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09931126 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084124779 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104646356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082375365 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101228904 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085127358 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103132525 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097932262 seconds)
  done (took 5.459789505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105218823 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160819563 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087400322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143569796 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12175749 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112318943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088533336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142976941 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102477895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083243356 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123512847 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121037912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104658723 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090544154 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107436672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104242403 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086693951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103351055 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088763645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104988411 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108556497 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091593001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121367955 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118135626 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108842806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083658529 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104079763 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108656739 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098690952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110349056 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110266862 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091984165 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122346923 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109837674 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084704652 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107623091 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123602777 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104430362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087987439 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101374458 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087698665 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109698979 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110963653 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103691563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105322077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109691851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085310801 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101836545 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118525669 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088710099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114007699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120951405 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089039943 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105423347 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109929795 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121514101 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085336865 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101750495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08939168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118113717 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102407898 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090291402 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120268547 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106692635 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112910782 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09952934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110165357 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108986929 seconds)
  done (took 8.165775091 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094164849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111443335 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121384653 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12194703 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091604429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11192198 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111514287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091401032 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111443893 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117132319 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110955237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134517141 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086672 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116003533 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111506456 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092338122 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111602246 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111794438 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092018822 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112816355 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112774704 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121193104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091473466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121812119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143639197 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106526383 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092495128 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111223446 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121126295 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112221104 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123889093 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091568806 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110919994 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121624914 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124722729 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092096965 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103198576 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111922078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09189594 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111869272 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105240805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101559035 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112349903 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106503882 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09226439 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112891206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121742473 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12470612 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114904437 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097183536 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111626116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12185274 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111615131 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092325513 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121077335 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149026948 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121716209 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121781609 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112360423 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101358266 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121745847 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129613827 seconds)
  done (took 7.712017989 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108097897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1149753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118357836 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100250256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08294345 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109684684 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082747292 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102632242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114848301 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094814047 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117964086 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109572911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093075648 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118200642 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109897015 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11292856 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089808608 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109619498 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114422505 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109276081 seconds)
  done (took 2.941955138 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094434379 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12467467 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08607301 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112925714 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108847686 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091825185 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108112128 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109193701 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087214549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107718556 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097008597 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117671805 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106053727 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09190587 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116348843 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112747053 seconds)
  done (took 2.500934186 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096789628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117520686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121062797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08535336 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104541779 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081882374 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106621257 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100641339 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081704043 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121521316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08502653 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111793845 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105382879 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083503725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101968901 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087619582 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102496933 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083139706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106012634 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119748771 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096986637 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105339865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106020305 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087619653 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105944501 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091337433 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106329972 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103028244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084293135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10575682 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085887433 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113680808 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101453697 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085027831 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103367018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083161584 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105370243 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085941688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109132373 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105247563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084113834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104748328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085620376 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106965934 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081079806 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106748705 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101187472 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091624097 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10409094 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085947111 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105457732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087088548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106936339 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115625691 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089108362 seconds)
  done (took 6.263724273 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100199052 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109770531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081099046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104165804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088950791 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108357635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10846247 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088616176 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108066458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083319463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107647382 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089602632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108017611 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109684795 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088311267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108975757 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081434159 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10741954 seconds)
  done (took 2.619967971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091586729 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104995234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09308354 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106305048 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085359501 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109149758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081056157 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105598961 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103451384 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085823458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10599943 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087771227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103966312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087849941 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107142432 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085261251 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10809287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103454428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0864217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101587077 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088661072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104888664 seconds)
  done (took 2.974029886 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118850497 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125800094 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092820645 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229271617 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103581622 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133326005 seconds)
  done (took 1.641080365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110778686 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122622204 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10712752 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108581885 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115583801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087949867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108350194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108653403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119000466 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101886456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108133143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118322637 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119846762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097720916 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116715226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114514312 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108115781 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088195315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106699626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12967873 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089000499 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118631214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108482864 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087400643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109530339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118308136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118276973 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122051811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088009475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11880468 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115164338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088730886 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118633257 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12302727 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109477216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09947374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108884879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130421714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114782947 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098033416 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110247097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115185894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098185652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115191335 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119746551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108697513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094357317 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109151584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108328053 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137972403 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095114437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118439786 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11582721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119481154 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098519331 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156360287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103294011 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118763727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1163965 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124298665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118671337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095447145 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117909605 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123429148 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115803998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11822066 seconds)
  done (took 8.195505128 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102480104 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126762102 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108768879 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123749402 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097559105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109109466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108287608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088311447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1084 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107716122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153512378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089134951 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119021307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118213176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08772983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109825751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108677365 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118305832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087767034 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136651895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108857078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119140871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119029205 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098369997 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124044791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115076752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109389816 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088986477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109390023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108438909 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094726419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108600139 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119116079 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086588781 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119781812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109950923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088150141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116022995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109273463 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115912826 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09763055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129012095 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109187519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108016604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103767453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10966643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108564142 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087153974 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109416661 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10752272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103230126 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124229556 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123672495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119355715 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109046621 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089654316 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110038306 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108704764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088469464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11597245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118372131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087747703 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158039771 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088974838 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109295544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118968378 seconds)
  done (took 8.065878469 seconds)
done (took 155.438469322 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224982803 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.228079116 seconds)
  done (took 1.292658813 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099502578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136331436 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096597573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16855899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106991387 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119236041 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139150404 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098193783 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107051278 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086355639 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106955599 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087174617 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172004672 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086583121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107350381 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108260344 seconds)
  done (took 2.671046018 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200333933 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254934256 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103019503 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106110007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089760819 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111137361 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104995474 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090962479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110436118 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085703589 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109265831 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085926566 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106323025 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087380036 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110533334 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088482292 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106284419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088424067 seconds)
  done (took 2.88519128 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113229021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146306538 seconds)
  done (took 1.11097732 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118486577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181485814 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317488132 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156550709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10780946 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12720116 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158323706 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131138259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198262973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123598069 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123646766 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097378973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140262235 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116004082 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094801324 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11904643 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141860611 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094550969 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116988394 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116555441 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117374656 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106611554 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11646344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094097643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183114013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119936303 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084717863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106981043 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116557398 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094987013 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113694936 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125875449 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098206894 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179630283 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102784438 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178045299 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098266029 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112435001 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115125193 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091996206 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120211267 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119072946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105427269 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118694967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085860384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119855409 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106370088 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086191745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114321909 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098218938 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116208048 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113587543 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156047564 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119226947 seconds)
  done (took 7.564243273 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795527892 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157357702 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091062089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888543835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138914157 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104105675 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783351166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136207522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235284509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765274436 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13547014 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122945217 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230991405 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239386049 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957284358 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31439315 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674926499 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102604095 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153177651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153422062 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119118952 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138548926 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130940981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429810732 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095832493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113008305 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096453255 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122733472 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159783059 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126655927 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11427322 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180841188 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249323683 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208621686 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116794239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090503434 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111971334 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171007848 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268852927 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216175762 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181264374 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087732535 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110953262 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101270938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133509457 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108864764 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166329659 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175336052 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196005497 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093479722 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121673605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120356858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099707187 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187313634 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099470922 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322789103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313940079 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111603073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121703024 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106088272 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265297922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122875882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22507395 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118248342 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215661409 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110501932 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786791286 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191456081 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090545729 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118266078 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098663779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117609959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122220915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168424371 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393930566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124825743 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093614552 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111843267 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213984882 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125807038 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110744911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16294466 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094162736 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123382307 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12528078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123066372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17184276 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230596057 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123974812 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120586351 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095483454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126047233 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117013285 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212216537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221474705 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163476 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208900024 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124722356 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165013623 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190352719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100257413 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194562352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099435067 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126148973 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122673868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21885114 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147599144 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10343432 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116891444 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118369822 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149627674 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106804943 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12008405 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171838618 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480158211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170309315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10862071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106407078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121765685 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16222096 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119443081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259370325 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100679947 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191838423 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098868675 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109907747 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121027665 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166128354 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124081225 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101080204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124067632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118640266 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238179265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218848709 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102232046 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245862515 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18537109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119340672 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174093883 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121749222 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170948841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120283844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100457782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118352505 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799323657 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101774087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121541113 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116079133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188317006 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090222712 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125744224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124751576 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087867326 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77737082 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128556815 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100010669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125745278 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119529564 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120897116 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09742722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116472314 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163859291 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23296655 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12171231 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098164005 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126251466 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160458678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11750878 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126222456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125912355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10508125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12413082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114850742 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103825006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192900035 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16373737 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223355856 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570376456 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113926323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125926325 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229805591 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090936914 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289126427 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120513642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204906602 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188955424 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100482716 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310723586 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189096629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189660602 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107185252 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196859297 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088483423 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119564959 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167776359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112256525 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096472361 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185644148 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10398942 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125463562 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959852523 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089408683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248357448 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088168727 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193188448 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096202476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122010218 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298499341 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090842724 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130504488 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164964767 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116356786 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125724833 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716243446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126945307 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122106982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098396393 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224021936 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163803048 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12129008 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120798263 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121099625 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166228864 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210175344 seconds)
  done (took 44.272151926 seconds)
done (took 60.641322476 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284209644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216173235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265048965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170427634 seconds)
  done (took 1.885726916 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171993677 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150259418 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121878344 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108667794 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151909585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085346517 seconds)
  done (took 1.664864569 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359073646 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275875544 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24235302 seconds)
  done (took 1.757192841 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287464104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247249812 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473496646 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324740978 seconds)
  done (took 2.333753423 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210009835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133425153 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112169946 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105017757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198152075 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248363733 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143022728 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20219017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100911526 seconds)
  done (took 2.375901217 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196895119 seconds)
done (took 11.093655002 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.206313689 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.242583198 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.279961987 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.195388718 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124692232 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.246558033 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208944889 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10287046 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121764674 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121809807 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116531645 seconds)
    (12/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116988377 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09400172 seconds)
    (14/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116962361 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094424966 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171094901 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.228797047 seconds)
    (18/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.204743289 seconds)
    (19/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157825058 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.155824401 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066354913 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.14971049 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.131327332 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085524657 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114225168 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099325558 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135922381 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13589581 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150920476 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202688435 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086853294 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113234062 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.224315189 seconds)
    (34/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.173243917 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1363897 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118017654 seconds)
    (37/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11834685 seconds)
    (38/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109332808 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123504572 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159647565 seconds)
    (41/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121485013 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.148560131 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096695678 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201468233 seconds)
    (45/286) benchmarking ("sort", Float32, false)...
    done (took 0.174129982 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114682712 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112952258 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11051108 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100844409 seconds)
    (50/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.181249475 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.204075734 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0941526 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115255339 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164814285 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111661773 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135182262 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123563861 seconds)
    (58/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094411332 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176540153 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115401951 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086825918 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110229894 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097858234 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.205114365 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069564687 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24802153 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197488652 seconds)
    (68/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183323528 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189688636 seconds)
    (70/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.15332957 seconds)
    (71/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.113292797 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101879304 seconds)
    (73/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.174024028 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 0.230764567 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175622836 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.186661887 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149862008 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11587712 seconds)
    (79/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099273019 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188198662 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120974687 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.153074653 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112263919 seconds)
    (84/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185231509 seconds)
    (85/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084288998 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117158117 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07729317 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187265039 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.088510594 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136459679 seconds)
    (91/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160039891 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115144558 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.100882949 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095078288 seconds)
    (95/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150699852 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068577484 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204537188 seconds)
    (98/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183498362 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094753678 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.184535015 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147353655 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087390796 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172916329 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06766015 seconds)
    (105/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152165908 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095969708 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110228177 seconds)
    (108/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067416065 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109123859 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066673294 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134725503 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087810426 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175078534 seconds)
    (114/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068006174 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119565025 seconds)
    (116/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067194386 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11548211 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167746309 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067342367 seconds)
    (120/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142440991 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095999088 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13774494 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181962812 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11812949 seconds)
    (125/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097055033 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186596908 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09481098 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174745283 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10945991 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093726474 seconds)
    (131/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114722259 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094589825 seconds)
    (133/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153372326 seconds)
    (134/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090310993 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118428684 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09227844 seconds)
    (137/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174050409 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166057966 seconds)
    (139/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118195769 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109454563 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117405172 seconds)
    (142/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.164826914 seconds)
    (143/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175143399 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067266835 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100882572 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067400099 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119150225 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086941277 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109079393 seconds)
    (150/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095197536 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110001279 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08343795 seconds)
    (153/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221423465 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090477239 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089342151 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118174964 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100600686 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142997691 seconds)
    (159/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096667768 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091739248 seconds)
    (161/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088705661 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118235154 seconds)
    (163/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.12810598 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121623011 seconds)
    (165/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067967274 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091192014 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094110247 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077739076 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090405577 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.18693582 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096744018 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113075172 seconds)
    (173/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095612907 seconds)
    (174/286) benchmarking ("sort", Float64, true)...
    done (took 0.231189236 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 0.22257592 seconds)
    (176/286) benchmarking ("sort", Int8, true)...
    done (took 0.220724257 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109537008 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094984995 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11333824 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125192318 seconds)
    (181/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122631076 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096897989 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109795989 seconds)
    (184/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.318788493 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110008758 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088358299 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091021051 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093582637 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229349857 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090485542 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.1149494 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114889074 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125557681 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093700186 seconds)
    (195/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180020649 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092216715 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090035781 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067273096 seconds)
    (199/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.077748386 seconds)
    (200/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110864042 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085165265 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10997099 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135138066 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067231633 seconds)
    (205/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109882739 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095369726 seconds)
    (207/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067616864 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119746184 seconds)
    (209/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066745587 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090061815 seconds)
    (211/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087591418 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109631873 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067379283 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066291412 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.089816526 seconds)
    (216/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07653503 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111665417 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093971901 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109864119 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075895905 seconds)
    (221/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067013395 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08904391 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06775741 seconds)
    (224/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066675347 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134276093 seconds)
    (226/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114956729 seconds)
    (227/286) benchmarking ("sort", Float64, false)...
    done (took 0.147592856 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116414396 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08808592 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109623178 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123676354 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088141543 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108822171 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 0.187755655 seconds)
    (235/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150038427 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090990534 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095944846 seconds)
    (238/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11116525 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092409928 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090740135 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092248353 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135544764 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135404787 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095786019 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109430626 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088223372 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090930551 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067251036 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086733949 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116906722 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135468975 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075816211 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067129417 seconds)
    (254/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090266915 seconds)
    (255/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066264167 seconds)
    (256/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067336377 seconds)
    (257/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100661851 seconds)
    (258/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067128985 seconds)
    (259/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066428817 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090354078 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104863815 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18210827 seconds)
    (263/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110066203 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07636785 seconds)
    (265/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066980549 seconds)
    (266/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101446278 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094847463 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090801693 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085717192 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108217827 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096128873 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132643279 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067589233 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136215779 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078017842 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115474018 seconds)
    (277/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066784193 seconds)
    (278/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115174415 seconds)
    (279/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068622935 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092422365 seconds)
    (281/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228112866 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115790929 seconds)
    (283/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067659977 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091877538 seconds)
    (285/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086744354 seconds)
    (286/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11061096 seconds)
  done (took 36.043633779 seconds)
done (took 36.926188327 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100318988 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148047935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096677771 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135867894 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122977279 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090928942 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118148828 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097929676 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123713792 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12500181 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098133384 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092779028 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097005193 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12090388 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098551149 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138913888 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124145218 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094696939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119717902 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086916785 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118802187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087462206 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112441009 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070123209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121879798 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093640089 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116785413 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120524971 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087066502 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110641973 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090327596 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117322125 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086651861 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12423093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094735825 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119589533 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097717794 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120193086 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088076413 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110749137 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118854712 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08701702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117986122 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095423451 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116188158 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093505798 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119127957 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100022579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140189796 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116016777 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094885047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.1207987 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097264114 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117724614 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091709233 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120110159 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092409368 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140372337 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119782277 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093505279 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117817905 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09494297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115900485 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095832964 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119281942 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121238785 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099000813 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116454142 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098055095 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115876877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087614423 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119303889 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091045004 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111138874 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096843686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12179287 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08688407 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117662571 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094509014 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116179526 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110889956 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089444929 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112328757 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09361076 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113519334 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069572693 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091115256 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117082172 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086035912 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119303898 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117509746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094449589 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113003207 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099498629 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110750441 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093026611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111037753 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087846529 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112673899 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090927465 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110611895 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09036707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119956769 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089377011 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117778157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099855612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111431726 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11773446 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086237982 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110456895 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101458802 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12154177 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087798905 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116061558 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087366632 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118532109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086602427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110152757 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086930683 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11036481 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09340183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110778613 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090615167 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118030751 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125156622 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087033025 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115140138 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090578885 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111803903 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093222022 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111606049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087359857 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113462184 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078045984 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113321295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087203263 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118813003 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089813543 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119833889 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090067432 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120060124 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092639997 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116990073 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09388498 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11082419 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074336388 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117452433 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090144901 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113519289 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08757202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113152681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087676515 seconds)
done (took 16.960664209 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087511085 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184892893 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151701455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142450101 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107171753 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111471935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123001723 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118590083 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113499376 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14334058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110086203 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131966867 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14968809 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087210347 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112490621 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091548201 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112325752 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102816787 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146541132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133039721 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164351853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087066896 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14792131 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135664633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121432048 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114184018 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112590962 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091616028 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114816885 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103442277 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132900395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091095267 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113115724 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134298273 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105621994 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120736756 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088002938 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119307677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087917504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112188228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142110429 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133804887 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093229909 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117403219 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092284024 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113740894 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089963375 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121105773 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0989882 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116849393 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126400066 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155506604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0914814 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122231018 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086616616 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123226697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122660136 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089885688 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112571678 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090698167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112497881 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091337865 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127261012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141923427 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092527656 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121376143 seconds)
  done (took 8.619249288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105603087 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140055401 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130567323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106579971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112477442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088436694 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113252792 seconds)
  done (took 1.738955129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088337516 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134451285 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112136723 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136076323 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132947815 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109438273 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123634207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089524768 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131556116 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089574595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134519303 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151849173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089675461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122345418 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13854803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089207777 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138171005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088965772 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11719689 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111884079 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116869112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135197047 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09062589 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113310051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103770804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114627148 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163046518 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093804039 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115346555 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092508858 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112147535 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167412276 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103163472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126273889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089098665 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129572237 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.14661926 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087726125 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12989266 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094243493 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128288342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089251048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114988403 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087056493 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118321181 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124610885 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08941209 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115058137 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091932503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133023943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090046552 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127598827 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089473334 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118766179 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090482073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120595168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124359118 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089742198 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134051144 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090772188 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1308038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105591314 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128549338 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131254498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092254712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127947074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10302484 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117704381 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090991945 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118412011 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131035224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087200319 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116454928 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099754081 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115474242 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113492337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1379883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090904237 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124831019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115241874 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089380332 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115112972 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11237314 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117994024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089858572 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120363349 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092694131 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112607479 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08757727 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119748328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113831327 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090656864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119765618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089865067 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117558631 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106419107 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115039158 seconds)
  done (took 11.858492927 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091913539 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11506199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091589901 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114843555 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090678318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115673641 seconds)
  done (took 1.576623499 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114553916 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117760104 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104461734 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121127399 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156306635 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10395881 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130577024 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124683614 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108116241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126730062 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129115589 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105446436 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135587124 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120690778 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104233457 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120934054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10493224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125772183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127409936 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096907875 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136509856 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121862136 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097121125 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132968327 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119556918 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096212789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126133923 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103413329 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126974516 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124693216 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096895949 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118503184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095961565 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124108603 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129833185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096825031 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121355783 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119474331 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100741414 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118989478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106152429 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121725788 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126914081 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095340141 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125209239 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121983623 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094191735 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125364472 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104528295 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11972706 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120230157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095587336 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118899879 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094495272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122398547 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124591693 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094915748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130558457 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121722035 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096053916 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119504621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094736998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124833507 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118331363 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104549459 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119789883 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096419181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122129444 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122040227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096166202 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120725242 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09314701 seconds)
  done (took 9.238580705 seconds)
done (took 33.971777006 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688986647 seconds)
  done (took 1.643426686 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.828290166 seconds)
  done (took 1.784866452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.03680813 seconds)
  done (took 18.019666547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495241628 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581510643 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.001468782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178799943 seconds)
  done (took 3.2146646 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.958946775 seconds)
  done (took 1.935982312 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285045028 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258856146 seconds)
  done (took 1.506248107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76816885 seconds)
  done (took 1.737816169 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.367018237 seconds)
  done (took 2.331179438 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327648542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185126266 seconds)
  done (took 1.481696709 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549360373 seconds)
  done (took 1.51862641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.831457758 seconds)
  done (took 7.804187061 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267975073 seconds)
  done (took 1.24758609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301158908 seconds)
  done (took 1.273781531 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.534909402 seconds)
  done (took 4.50729856 seconds)
done (took 50.972515937 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099236672 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126709806 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102233495 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125227297 seconds)
  done (took 1.419911284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100777891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120674218 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101116158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121077713 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126386114 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096098408 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123446699 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101894242 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12102885 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096839977 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120849486 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119872647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099848285 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1227756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09307358 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123992672 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09939674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121610511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1247326 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096645921 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118388431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097931097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125061087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094597708 seconds)
  done (took 3.64228063 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100583484 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119157265 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096302877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119026634 seconds)
  done (took 1.415927906 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100812632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13121938 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106171621 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126088609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132259148 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105806602 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117840923 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092789094 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119566081 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099966178 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115466096 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114947424 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132640865 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124794403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102435218 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114258405 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092185862 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132520913 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124940236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101582713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118765376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100494946 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11596662 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109083077 seconds)
  done (took 3.708797198 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169710943 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127834986 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138971266 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095476265 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160685205 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140406068 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08757747 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140616741 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087936995 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131420197 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118453917 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133925919 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12991603 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088166836 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114407462 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087575557 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128992468 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128696317 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091678757 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128142625 seconds)
  done (took 3.415386805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097579692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11780269 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088681637 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11657103 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098904477 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121203876 seconds)
  done (took 1.624070952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090663373 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114690386 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091463959 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114631833 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094194129 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115478697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088596662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115207576 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090808357 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114309541 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089407458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116016465 seconds)
  done (took 2.218962614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499862988 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120573302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119970583 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088790558 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121573956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089668308 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129223339 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092539314 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14138085 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088696746 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115850908 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090590884 seconds)
  done (took 2.680397924 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23552842 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125703635 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287129544 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37114838 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155875244 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177952597 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283700623 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162788747 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226744897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16803395 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203839536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223592861 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152392477 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191328107 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138862238 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145910809 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20538752 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248156541 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15552554 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209822419 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229030647 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168607566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181197186 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151701156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1401599 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17317952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095093647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131042763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234537906 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17704905 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21611784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163254543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146770842 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209963557 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253916241 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223138709 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285583686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134906688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.152265427 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167196001 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2629076 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138495595 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203413456 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155948623 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13115856 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21889122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167123094 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176151321 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154078108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139097735 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196695542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240898141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193106469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138862505 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300202611 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148511555 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.201953215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193776731 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252022261 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200759158 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212650484 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094866663 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187578198 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21842313 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185590437 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174725436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208388364 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148011404 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201380285 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18958499 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164143067 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221233624 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183986103 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140295083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170125393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172044669 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199772644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2306044 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21210531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095089961 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169916432 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150282127 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133859149 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195018233 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097963011 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24006676 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143868417 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163129261 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215182771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160931062 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162093131 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229716658 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204130382 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148716368 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083247313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154753579 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155910419 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220619674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112670987 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160199869 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162227951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130486308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186061847 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125486174 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185737698 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118788705 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174773247 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182928956 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127216663 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162698619 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152780506 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126140736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203435621 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198190502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142909732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132900113 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20951288 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17850084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151762589 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178208824 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229125826 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117880368 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151547474 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228602755 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2448284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113756967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229725546 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156623934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108623714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132100743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182851552 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15537775 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162233157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134911396 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184058056 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23523244 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098109161 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139854783 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195209946 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133653451 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132907651 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164955777 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149495002 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139192218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125761635 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154140902 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179711483 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154792502 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166397113 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152730955 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255723142 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141856919 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124187653 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149325448 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121269601 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194324678 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226868522 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104408146 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234340245 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174602606 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203704844 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196960743 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10804565 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178247052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131055942 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093351715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221821917 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169243357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162283334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196040869 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22880166 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179818356 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211399778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175711956 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176150524 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166043389 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157879142 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139844376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133497463 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197524452 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097327269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145700083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135019686 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149386126 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141725275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1074927 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225258241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171746188 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19248791 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159359161 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150230457 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181969293 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130428776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174874135 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179337838 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148815242 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225800565 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19480547 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187412994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146097839 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228819635 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094979777 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125147127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142879072 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172161877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106975771 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1367082 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164291951 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181177523 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209349992 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178577462 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212643121 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200092487 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192230851 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094638905 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169484447 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186184781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204729506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167295901 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138715365 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151257455 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181604378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158507046 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257606198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17002345 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175641908 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23633543 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151875701 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105648382 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152304991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221288227 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154800805 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179315553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148025674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115079244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162952892 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133687046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161516397 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212327605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163881253 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190458184 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151660248 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187044419 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127874952 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165587576 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161338762 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166667174 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081301164 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176741489 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234314153 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149614306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169544299 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19100312 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133184647 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307365578 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244090064 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196649541 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138376447 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156866898 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162280818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165418914 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172655028 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179246339 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1605306 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188238457 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159668595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138560714 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141397918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148800665 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123483883 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132064869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149757167 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178467222 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140981242 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186287982 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164459562 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160112364 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173864894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151297667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144880425 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151506054 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216688202 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213868519 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212867048 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152468361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179628565 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236805042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09891482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132865481 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134210078 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179765243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108647893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223142817 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187003054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231171628 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183495465 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222370056 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113712355 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120858593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157718807 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174871098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208471703 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152365052 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161486935 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232727623 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.147144956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104844829 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17824439 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319994622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120855678 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225998578 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080130093 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280902629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12456145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132991389 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163578622 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210256205 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137435455 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189872507 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171493076 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172574173 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165568914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149918415 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191408789 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243304777 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201928105 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209204142 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106118698 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157058873 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178093453 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222686788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159670435 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113023216 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234656005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196870628 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224077251 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114994716 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169422992 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195090412 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130225636 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21532552 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134968679 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208344772 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135838167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196497291 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152906377 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145520249 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176036687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213789562 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114583866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218349479 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185257897 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13536164 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133686303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169559593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183306143 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158524625 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099393668 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209179692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097122867 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22436436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259347303 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108256669 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155825695 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147851429 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136114241 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15602204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160032375 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113275013 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166193657 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202405757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136053534 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21961089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203847217 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170671746 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20300373 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116916204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692486234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131902103 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19489159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160739856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236865067 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151399869 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174227403 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159992714 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168960973 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196011847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162396788 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230019239 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222144584 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179483031 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131972469 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160444431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165223186 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144479358 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123125531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197434838 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160375031 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126087597 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205810124 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172882976 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134466835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11223501 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226906888 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160302635 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184323668 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181043497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138540663 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175094213 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188459981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135262932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180608708 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238785606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141796863 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15086143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106797856 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157396839 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264657377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124247892 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207670152 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185779045 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159191779 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168364687 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147212237 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222619081 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159046573 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186621164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148618365 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160510279 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1580056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137357149 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102527155 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155908835 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168383079 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149884131 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160508837 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166006426 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196055871 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123025524 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116939241 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315500065 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194035605 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245433712 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107434526 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13641915 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1629612 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151902855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178065463 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178912749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135565596 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136865413 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136440698 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130743999 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138422511 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12894078 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223097289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166289859 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208503635 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13762284 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278428834 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112139916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155808649 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115407733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131417853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123845138 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146488232 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159672976 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218766062 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238382039 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147242683 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134346738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151310112 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098440035 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137863193 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164433609 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16584363 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178602044 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146184803 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079414092 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156075926 seconds)
  done (took 83.654983511 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16537441 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132946396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146430804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203390324 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176231385 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270492246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209150774 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25310124 seconds)
  done (took 2.635901885 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093801484 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145852314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15728469 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13200265 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091905715 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120095693 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347331565 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133546477 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117770945 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120917469 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173651958 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094263575 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548634697 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090768711 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12061804 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107547961 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092373603 seconds)
  done (took 3.757444106 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47565557 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734343308 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512163872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097309651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.209008609 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112851008 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.810882947 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196424095 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11517606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485758503 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776290954 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158907172 seconds)
  done (took 18.763021024 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115874222 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136780005 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123792865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153115441 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141071167 seconds)
  done (took 1.756114622 seconds)
done (took 131.660393957 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105690547 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404415441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070803259 seconds)
  done (took 1.588649236 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108248344 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137065625 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109791621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135894859 seconds)
  done (took 1.582026392 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097538586 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127671564 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109032931 seconds)
  done (took 1.419832415 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324000024 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190122947 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.16892958 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106057507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129345957 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103732452 seconds)
  done (took 1.424461973 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097549358 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127609971 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097965051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129962664 seconds)
  done (took 1.539371895 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094885368 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070751264 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100324888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074768076 seconds)
  done (took 1.421924374 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114191021 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13185611 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104843214 seconds)
  done (took 1.440286597 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129386243 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138868735 seconds)
  done (took 1.358589116 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106002647 seconds)
  done (took 1.189296887 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118800694 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168912478 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.180380746 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162082189 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.204497542 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160154472 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142821999 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.139214451 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129281274 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141889075 seconds)
  done (took 2.636417294 seconds)
done (took 17.470570879 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103248845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423854998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385483497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145162079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722218872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381141813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074973487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146281614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165214648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09289876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139178014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672483047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03101571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379319212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987924497 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377424633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676203257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121878082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11950114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093140306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.06238693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092170747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121758616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09210587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704661143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426120977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095002733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37145281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092968456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126555135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383576542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123492584 seconds)
  done (took 17.008694941 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095077155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174517967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09852669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13739254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123734265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094309676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124809062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093363418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179478282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122899672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110761081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121010012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125788911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095643348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14209801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092757401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124546793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092357088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121144416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121686009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112044668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121221272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093973556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120851991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09407369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136096653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094282746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121351849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12074849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099085297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126866946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094871156 seconds)
  done (took 4.817200273 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140980373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183237604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128210315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126966769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170381704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124111649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198988649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118123102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182922681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123415341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139584249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092533841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156968886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094643855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143835701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121066492 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096728675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122097865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093887531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123644103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140164691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092642453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122613269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093535563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123086357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108075263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124375946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120008647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093415616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127308093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099009428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123734615 seconds)
  done (took 5.146980014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096757799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126264693 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109613137 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137821469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094459827 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126193549 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09729265 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124750731 seconds)
  done (took 2.007530037 seconds)
done (took 30.063228302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110674573 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126941358 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106387093 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134908783 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102584491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132564288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092064925 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134251789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134756946 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102289911 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138879404 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092792821 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123126532 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092184135 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135191673 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098092081 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133045286 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102193571 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134057178 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133410105 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095050463 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134252085 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103288099 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134077375 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104840685 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134125325 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138489264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100230313 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122425673 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095219573 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125686268 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103389624 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124138247 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106110809 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126879367 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097184717 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124302689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094952706 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133505938 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133428922 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100572391 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133419962 seconds)
  done (took 6.013385429 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107460722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140033662 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105134045 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081080746 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116603565 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080634973 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138315577 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079073169 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109813339 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108058749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074621837 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10643802 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078662865 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101473564 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077328971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075187693 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108954118 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075639107 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076164541 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106295596 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079460582 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072718226 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108670764 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079633317 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075379973 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110119641 seconds)
  done (took 3.571076502 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100620576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135282233 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113737472 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183170111 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161470707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099873965 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132393444 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110733135 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137892044 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12038046 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096220513 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149750202 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109926385 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129526141 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092111131 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137353065 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135609428 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09397937 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128364733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112227053 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138788643 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102843462 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141900016 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132286324 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092231948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123292749 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097005457 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135425535 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097895424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132408382 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097110531 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125954035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123511293 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105549292 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127171389 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094817447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14326546 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102843311 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13106356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093358506 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129688597 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122113917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114282977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16242687 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091096002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129796255 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096497553 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133373062 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121422618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110907668 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131711832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092257238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126150887 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092167695 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122645707 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106906058 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123973609 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094713284 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132081562 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126722882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105153831 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125726804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109387919 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121990634 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100539517 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121796151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093008742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12146561 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1149347 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123868118 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161958054 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093745113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12391254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10260708 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130329035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128978049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094408428 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137833407 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103691582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127351708 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103028087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126036473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096114872 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141020778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095239462 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124567024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093403523 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128847415 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124290352 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094780676 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135940676 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092538724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124910998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110760256 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122359172 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093900189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129276178 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126670798 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093059867 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138170641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098358388 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123243675 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103026781 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123066581 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095712834 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132888442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127235494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092616494 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126612225 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099015598 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123565829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094435291 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126833198 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094502326 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133239802 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099800384 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127561874 seconds)
  done (took 14.84856285 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229988888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214782332 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233923463 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264756684 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135376117 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114927642 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211802553 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155377297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123757104 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160717204 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17452875 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182105434 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169964465 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181918006 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171020821 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093607744 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14185843 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133973911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246234125 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259016983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143737928 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101139139 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161733967 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1613457 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136978063 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132254416 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10992715 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134812684 seconds)
  done (took 5.796091388 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108669905 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156392844 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098981833 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145763754 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150110732 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092699433 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128739198 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094663974 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136126714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137385245 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093698319 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1293209 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100151906 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133054309 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124072226 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103045353 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132920646 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094776861 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125954137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097522276 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133485053 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102888996 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127117847 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091640749 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132880083 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1216886 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08634527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143074199 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092520018 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145360305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120780136 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101709305 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136048564 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093835617 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123370321 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095518426 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125283603 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095348362 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124916569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092074902 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122841716 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076842348 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122312074 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108009107 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129682655 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080584225 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130799467 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098852014 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124510873 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120354709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097489605 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125701386 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096934726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130466188 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096500656 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123992949 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09760209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115839761 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10042241 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125447688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085424255 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121375701 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099590091 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118485042 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102507415 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128775676 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092454385 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126169953 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09807083 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129960667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095583771 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13008553 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091676273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126701649 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096322334 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129085168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096024386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122220454 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093180801 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124259778 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075653903 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.1236986 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074164937 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126531456 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092603993 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122113185 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094998979 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130974288 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138056378 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095399177 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13194666 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094572579 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122099285 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096787882 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112655175 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097188208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140344166 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143484835 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094330788 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121473511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10850895 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125663576 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093373757 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105967698 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103083421 seconds)
  done (took 12.98729278 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127945313 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154566003 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094953387 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142521306 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15736947 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15803659 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102091897 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131836821 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09627119 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143445268 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094455861 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132137236 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094487001 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137863787 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15849707 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104972452 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125935446 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109145754 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128018766 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169737942 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11257943 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142777712 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111786323 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124697749 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099957325 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140846042 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162142688 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108209855 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137961175 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143478469 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10853714 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161818903 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112847489 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129661696 seconds)
  done (took 5.49446942 seconds)
done (took 49.804822803 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216832387 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435286916 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191803602 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.151223035 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.197294321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.19244597 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.221919836 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189868212 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.851693256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191541499 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45782788 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.89977916 seconds)
done (took 60.324109998 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.2937488 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.328167995 seconds)
    (2/2) benchmarking "String"...
    done (took 1.457915559 seconds)
  done (took 3.905873173 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553537471 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.14174686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451176475 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.19232164 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193138343 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483474574 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.88040485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.554637963 seconds)
  done (took 28.015183196 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.19997806 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.278466963 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.2214691 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.200523932 seconds)
  done (took 6.019811241 seconds)
done (took 47.909311479 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202757857 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.22315308 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.197782578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176958685 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305726213 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227806732 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.532967291 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.213386389 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.22290317 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179663789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.214508442 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193706574 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206465639 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.603379508 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.197137503 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200623169 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272167357 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.693233935 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603089469 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19850236 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210540307 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.238207105 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.206638555 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194714278 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.235297974 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199423827 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194761149 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216865285 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.82039593 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19458511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213666086 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.76027377 seconds)
  done (took 190.672488406 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194797003 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.206270153 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.307713943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.245174372 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.665061678 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39595665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322433021 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73990368 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216362932 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.204815929 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446339626 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199978833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526364019 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.234609621 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226530805 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296301756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.535128828 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.51703747 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.252102749 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.364953309 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219124757 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.50890929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.399829162 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.394064865 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234752511 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.233866367 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.238069929 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223238436 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398521469 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.483460425 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207048419 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222389704 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83035394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057899866 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219653164 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.198951885 seconds)
  done (took 150.290382844 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.241437809 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195596413 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195415333 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197152878 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19653656 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228740032 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195939735 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788217711 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796267376 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.699611321 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.63166885 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.632495858 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51905127 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200459294 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292457263 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211545427 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197969991 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213461293 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240372382 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202251688 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197452384 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78696905 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212471579 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.223736433 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395727366 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215335294 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230895474 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588619497 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196812879 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198018406 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230570172 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.045418601 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530899704 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248760301 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198839982 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5803782 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198476064 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311695857 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200747144 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230575516 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198187863 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481100531 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199197405 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198299475 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201445195 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860503286 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198590229 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792087897 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202633577 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162340824 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198706615 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199758721 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.594648912 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.85628073 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216201069 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198972585 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20214953 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19931616 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199562477 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232537171 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.609718958 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296252387 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216765314 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202388001 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232692252 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19995349 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200117893 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.347545068 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204389032 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.654766607 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272276872 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.416688445 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796057132 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20305517 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29968206 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322843094 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199587616 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200999482 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200004858 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200249403 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313443622 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200846003 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631941198 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.379917572 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218054903 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.632969587 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303550157 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200532418 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625705078 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204719241 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200993661 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973957099 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299691739 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201823078 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200569169 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201113144 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.629357375 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800570955 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494013949 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205400717 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.596049281 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204702771 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648725533 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.771072319 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920282988 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205102228 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314575056 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380626838 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220637388 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202292417 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.655332592 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207504014 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261994153 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202788183 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601511274 seconds)
  done (took 367.168276118 seconds)
done (took 710.492473624 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.787761141 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.783419686 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.891718519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.773967635 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.739624454 seconds)
  done (took 10.104912016 seconds)
done (took 11.233154273 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397591209 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.40032114 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268290462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.397500874 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236127541 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.415270028 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377117006 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227713031 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304351608 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285664993 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303902954 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256737861 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232183611 seconds)
  done (took 18.2326195 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527022582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52138783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267605069 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520016859 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244235087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509969557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40147004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419898815 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419845519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263673476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218055012 seconds)
  done (took 16.445085545 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546287097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524074534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271115908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521767128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24672351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526381139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415812546 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419346741 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420876565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240165108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21815018 seconds)
  done (took 16.481304477 seconds)
done (took 52.288398293 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.213359065 seconds)
  done (took 2.345222596 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249699525 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415189189 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233129111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220968921 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215525642 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216626581 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221356253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215043496 seconds)
  done (took 11.120566861 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211685597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214866987 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215163825 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211594213 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211622256 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213897237 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211828696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214950032 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214729151 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21120528 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212538674 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213928592 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211616258 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212933176 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214460782 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.215280943 seconds)
  done (took 20.545785986 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214195648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213201481 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211868295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212357462 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212226806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211987619 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213640938 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212685758 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213152676 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213080725 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213840644 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212528694 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213376771 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212589549 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213278324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212898426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212430726 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213137235 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216968865 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212706917 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213875729 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213413177 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213903264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214871172 seconds)
  done (took 30.252709371 seconds)
done (took 65.39665128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.385856713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.012738315 seconds)
  done (took 9.531965379 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215915902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215549315 seconds)
  done (took 3.567207363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215376102 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21587912 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216315982 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216131193 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21770401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216113144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21690459 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216520513 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.216327566 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216307231 seconds)
  done (took 13.297739016 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.2172674 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216453513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215300291 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217420228 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217691213 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214587164 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216620172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218179465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217936421 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215746767 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217538449 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215478693 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216966467 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214840957 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218265644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215658346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215737906 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215295087 seconds)
  done (took 23.032090051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218541685 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218095002 seconds)
  done (took 3.573054185 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21505441 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215775492 seconds)
    (3/7) benchmarking "month"...
    done (took 1.215940125 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216017643 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215587714 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216390437 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216350059 seconds)
  done (took 9.647304651 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218150291 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394705298 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474759657 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.804727773 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220026126 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.2237356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.052908494 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221972754 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224627104 seconds)
  done (took 13.972711043 seconds)
done (took 77.756477056 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.231647547 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230204549 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.405404625 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234075454 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232314661 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557190076 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258045331 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337817014 seconds)
done (took 37.624383628 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.229368389 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199788558 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.982916925 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207231504 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.258649814 seconds)
  done (took 18.786441441 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.28795197 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553280101 seconds)
  done (took 4.980224371 seconds)
done (took 31.134772343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221145559 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217881005 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.219988366 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.218676987 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219505297 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.218420248 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217637199 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220338104 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.220290697 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219722946 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.220642963 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21794307 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.220223862 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221532878 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21854436 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218931087 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221372423 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221758498 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219072842 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218564324 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217134989 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220569153 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217724707 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21772572 seconds)
  done (took 30.405243391 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221561357 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219753747 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221377318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220368772 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219082156 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220298893 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221466917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219586749 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220533 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22094451 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218365489 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218970005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221209472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21884049 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222399094 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219030003 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22192637 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218925521 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220904448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21928893 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221398289 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218986427 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219256653 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222556801 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220436887 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220346534 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222473587 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220125246 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223973418 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220079553 seconds)
  done (took 37.754806261 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227424805 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230184402 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222022384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223459686 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223140231 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22300494 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223178236 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224840032 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22391923 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22298154 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223511186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223451575 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222315795 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223717974 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223284914 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223386348 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224794431 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22368602 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224043522 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224363156 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225310145 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224470702 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224858436 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224626908 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.224251635 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224210746 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223894583 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223829103 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.224862464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224430103 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224779747 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225144552 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22467856 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225662454 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22503884 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225049056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230575722 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234764463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226520165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225351392 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224902351 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225012147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226432162 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22647419 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226085445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226549503 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226055476 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225744495 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22596645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226009704 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225397226 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.2255283 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225286273 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22681444 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225079394 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225925762 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226098424 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226123608 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226553622 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226159397 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227768351 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226479986 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227015594 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227724051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228610541 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227349624 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227854994 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226755433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227178713 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22709031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227941214 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228095771 seconds)
  done (took 89.385233343 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228331565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224911574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225016173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224552582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224444456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228263821 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224713973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228533305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226141023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227653679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22909559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225226197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225157756 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228138281 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227276596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225295662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228679877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225451845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228356582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229341495 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229121483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224933133 seconds)
  done (took 28.134365964 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228900001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229824287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225924685 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22941292 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226656309 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22932625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229067217 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230490164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228471814 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226226085 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226611215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229478756 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22627553 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227102881 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226759203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228963567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229441153 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228234266 seconds)
  done (took 23.25357628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226982104 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227685772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229672583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227658737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227722211 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230175139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227750754 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229743951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230479502 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227871883 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229345979 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23046958 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230662468 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228244023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231094048 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230012544 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232197067 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228100908 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231223985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227881553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228288978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231220235 seconds)
  done (took 28.193351797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23094674 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230158634 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228704779 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22907843 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228627155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231270658 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230575444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228653857 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232742892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23074374 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228486914 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231189935 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229933494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228838192 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229547634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229055832 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231315864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230360979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231949489 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229271628 seconds)
  done (took 25.749850152 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232833985 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233346743 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232680577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234253402 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232640419 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232861415 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233414354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232163683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233298412 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233003525 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234150482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234368534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234410161 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233362639 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233881068 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234246341 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233953209 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233771056 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233779421 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23428389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234811495 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234826836 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235137025 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238522527 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236816627 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233298729 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234000249 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233838089 seconds)
  done (took 35.70245758 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2350624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236273705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23301582 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232255617 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232571294 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233186668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232294291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232492683 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234995617 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232481361 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235975101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236037486 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236837876 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235853724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234508599 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234608043 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234975875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234127872 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232688287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233976485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235208978 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23643401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236211276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234080773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23348967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23620188 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23476135 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234218822 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237222365 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233492276 seconds)
  done (took 38.188093567 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255360933 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254685366 seconds)
  done (took 3.663330004 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234114703 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236170716 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236986729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234004624 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234539569 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237637102 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236192331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233432461 seconds)
  done (took 11.037092861 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237068529 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237653347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23769548 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236774524 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237394562 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237629035 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24368746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257490463 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237671548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238398374 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245017139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244526364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240245312 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23746031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238011119 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239310243 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237712367 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237710578 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238242872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238847699 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237462317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239428957 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240277254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236714136 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240493769 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247547839 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261605516 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238967112 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237631329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24151352 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23942967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243979746 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239448428 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238434116 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240297938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239276899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247114792 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259045885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246739199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259478597 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239967168 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237045796 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23956548 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240544692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240688773 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240554573 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242087943 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238511531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237805124 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244703121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245587679 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239365783 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237861739 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243181361 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240731641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247627934 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261172364 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243765622 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250016752 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2516064 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272822971 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266740356 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24237859 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240929413 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252156929 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265136393 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247583433 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259226796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240130546 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242681066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247478721 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27371237 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269103604 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241975205 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242937509 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241879611 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241105913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242419641 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247951878 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265106671 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241460077 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244551361 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252264323 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26599054 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242394963 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242525028 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243112275 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243053578 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244953606 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253184907 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262761724 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242867985 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242494663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242728027 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24392523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242934484 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242087449 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243198088 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242213809 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243571069 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243551001 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246230534 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251634902 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243994337 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244034412 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249585428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265220866 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244215634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250348259 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244530621 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243648238 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246525177 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249858806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243287669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24841052 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252506571 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.246024735 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246216154 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244086024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245825912 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255143301 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270683486 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246117331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.245819493 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250403079 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257180672 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245182995 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248236168 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246029745 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243795083 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24330176 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245860404 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245799542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246366385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245593461 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247755206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243859186 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246105507 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24496855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246832007 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246593662 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247672769 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24619816 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248550093 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246298068 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247645666 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251698921 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266406577 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248940026 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247484228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244151852 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247803469 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247814008 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246635683 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245543708 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247778161 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247504885 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246104388 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248755942 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248057119 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247806337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247733298 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25141398 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246855069 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250334761 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247852995 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245373635 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247445664 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24830325 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246801325 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249217024 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24666872 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.250856644 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255994716 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248268176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247937095 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250461935 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248416816 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247989905 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249314206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252012983 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256179039 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248656161 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255640063 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269894541 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249243764 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249752282 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249903761 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249763467 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248889332 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252705596 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257878711 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2616367 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275293504 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24959871 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254502138 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250176572 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254111656 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251681363 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250214235 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251280188 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250662703 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250482261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250672375 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250920667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249059891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249248921 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251039842 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250054714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250328335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252448962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250581457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251282388 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248655632 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251111979 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251120186 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251616992 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249128114 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249810833 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250816306 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251018665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25123456 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25652457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250442163 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253094891 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254128041 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251008378 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250862385 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252350345 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253227652 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251101629 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2577756 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273143957 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251858211 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258304947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272686038 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251683162 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255607734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252314821 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249847521 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255674146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261811092 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253758137 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25350254 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252550364 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252132491 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253562908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259966863 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271692749 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252811872 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254176191 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255239396 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252045504 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254315038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254659321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254404013 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255789367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254297005 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254862062 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253985509 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253676896 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255117886 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254115388 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257586623 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261124962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257492205 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25521296 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254671841 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255099103 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259006678 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254915762 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255313345 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.25367555 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265744688 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279507663 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25956738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27546491 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255444015 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259862855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277275387 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259550308 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256088321 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25568361 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255253083 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254998916 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254279691 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255849318 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256100539 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256537607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256352734 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26138214 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257282741 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255313676 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256419342 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255179636 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256261368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255544746 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25758355 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259050573 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25852026 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255331408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256776245 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263089589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278750045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257613308 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256142901 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255788674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256094465 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257497894 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25627924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260818979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265025539 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260762579 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265504762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258982027 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26662477 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256918216 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26025398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265584716 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255833049 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257874317 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257966609 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256996298 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264624562 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278290089 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.258993245 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262249198 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256839925 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257152379 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259039187 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257554372 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258452544 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258890013 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265622879 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278245637 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262148178 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259370847 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257491832 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259925358 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259869443 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259213677 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262107447 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259056099 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259770254 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26029461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258380312 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260244018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259693655 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260698535 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257842764 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261156316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265597602 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281932148 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264127759 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259749565 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2666764 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280563549 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266012863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282692956 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.260511375 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260764817 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260969334 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261657229 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260107636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262232692 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261786561 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261943946 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263821363 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261765343 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263570091 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262177324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262444523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261681244 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271190207 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286179294 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263480094 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267774827 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259998732 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263376215 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266848479 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26118411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260340308 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265156266 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271535371 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269907761 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262535383 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.26301472 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262653873 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269098525 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269782603 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26243615 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261840759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262264144 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26183348 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263316899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264793524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263068601 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263519832 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264038452 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.264044209 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273276427 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284522983 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263616961 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263550471 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264436476 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262606314 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264005035 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262614218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263072997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264493071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265194446 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270568859 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269903164 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266732273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263145939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263248404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263551979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264991046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264057274 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264130233 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264106735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26462666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263700842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265223333 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26272679 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265615127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264871856 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264763923 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267165166 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271341045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265364647 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262576798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26487362 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264628329 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263914467 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265714728 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271219831 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289514579 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276200578 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27366901 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27022656 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266628089 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268404733 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273098748 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264506102 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266225142 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265497648 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267318751 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267647092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268724987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265979953 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272923027 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286640657 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26668055 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275567144 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287376726 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26729227 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269197439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270965687 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267401064 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265945861 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268230811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266773034 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272541159 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289638371 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268166367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269129779 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266465741 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269393152 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271005174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267807022 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268060603 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265793354 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268282597 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266681858 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268483105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265432315 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267289589 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268420542 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271338929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275095443 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26646471 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270817607 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268576549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269208109 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268905969 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269204886 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266707079 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265882337 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268995085 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270621812 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26849355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271490703 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268919676 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270014093 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271966702 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269463878 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272008625 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279458379 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277372019 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266797941 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269666059 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270623528 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272237224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269843067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269305576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270012518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270217333 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269976079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269788347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269255591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272409527 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284797588 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290556492 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26993963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271826972 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273485936 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271047057 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269375421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271417009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272821118 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27381449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278672472 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271891227 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277040307 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291965695 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272707131 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275735826 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274570326 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278348065 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274608082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271652497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271728409 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277375797 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287083414 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272758864 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280959903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30120279 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292847331 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272851344 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27261433 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27160472 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272416591 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273551378 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273344295 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271575791 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272269984 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272973076 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27297526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277448264 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273708871 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276434324 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273845989 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272675738 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.273389759 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271400076 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273040414 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273175714 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273222532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272853041 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274055765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273262879 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285755026 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301216278 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27486568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273239177 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270726139 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276546131 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275428999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284075848 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281610493 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274084042 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.272932044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.27541699 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273185068 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274285592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27490038 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.2745928 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27529579 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272675504 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28713667 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302094023 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278481576 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274181139 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275474294 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275069424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276144162 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276553321 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274746696 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274824745 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276893759 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279661133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275663078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275388605 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278211804 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284041755 seconds)
  done (took 751.825684462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273011396 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274825667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274192483 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273852375 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272903665 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272967418 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274742004 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273636084 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274353167 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274914393 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274084 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275324974 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274718485 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275053708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274525348 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274088604 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274545279 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274664657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273895634 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27418909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274883081 seconds)
  done (took 27.949247308 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277247729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274402018 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274734749 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278217458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275246912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277690945 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275303135 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277440646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278551922 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27654444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278184513 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277018482 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275982376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275339609 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277081482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278370536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278974531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276325372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278649592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277317255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278918727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276716368 seconds)
  done (took 29.286298937 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278249113 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278034237 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27672961 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275758158 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280034553 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276085152 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279075438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.278804253 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27851553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279936105 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27730264 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280595359 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285306047 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.284216366 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280758576 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279383287 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422753949 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278427004 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279646733 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279020521 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.2772088 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284528153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.299161936 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.2783899 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277999807 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279333787 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279410149 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.279209885 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280907692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280936316 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285520134 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279368032 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279804102 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281996448 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.278366616 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282568058 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285863014 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280862834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278100777 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280545771 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290938795 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.302314154 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280444102 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286718553 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303580176 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2814426 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285118337 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289279101 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279992686 seconds)
  done (took 64.152284713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283229743 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281975469 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279700656 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28086065 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28367804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283375271 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281988461 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283577979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.27941032 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279383085 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281117384 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281131024 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279977028 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283277211 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28284429 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280440782 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280077867 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281129802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280121054 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279993625 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280954825 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283616427 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283477401 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280633104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283351528 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281488318 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280592529 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282732056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280887232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280774782 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284739018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283655967 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284401167 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282482592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281764647 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284185619 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28337896 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28166412 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285227778 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281213342 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285334569 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284901451 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283748068 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284837285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282566535 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281664624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282463205 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282254158 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282638001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286066467 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284825275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282332643 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283872805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282733721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284910853 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286711201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283436038 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282569464 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286435617 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283217699 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283737712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285761345 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283500385 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286058056 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286491027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283606428 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284743899 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28716106 seconds)
  done (took 88.43477062 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286012774 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284993845 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286177232 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286207657 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285659453 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28544345 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285246616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286665381 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285576028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286144024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286103257 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286573755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286361259 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285583967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285698923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287093364 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28466549 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285950731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285601872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287393672 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285092228 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286719874 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286314038 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286497542 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286799211 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285979271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286407614 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285990405 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284964164 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285538134 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286475947 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287523685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285548728 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286988186 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287224137 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286564444 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286824485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286270538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286321698 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286921343 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285114872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287445544 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287703417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287044618 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286173662 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286553751 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286399846 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286519578 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288193429 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287639863 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287165695 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287795914 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287749261 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286865623 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287935002 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288723884 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288613881 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287876747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289190981 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28778628 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288308498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289425814 seconds)
  done (took 80.974846633 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289885877 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28932276 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286880894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287304727 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289133831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287836445 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290727532 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28972635 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291237568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290989783 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290482528 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288082643 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287852283 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29228377 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288226535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28796553 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288614724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287644186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289455108 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288493679 seconds)
  done (took 26.985584186 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28806629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290197466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28802867 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28870924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290232142 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288223398 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290881536 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290063205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288843098 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289726091 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291265839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291240344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288275639 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288868143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291719762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289457912 seconds)
  done (took 21.837880428 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287057401 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290742729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290233196 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290300518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286801935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.284902655 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289042623 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285929119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287165355 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289566833 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289866579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.289862705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288391443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28903709 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286025795 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288221952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285696649 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285152691 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288430703 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289171527 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286358711 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285022024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287779754 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288425536 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285827824 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287100062 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.287552701 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286268194 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288701362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286975602 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286193656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.286582056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.286501743 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289615046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.28601504 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.289003231 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289226519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289584562 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28858178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288093271 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.28641801 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29039139 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287965851 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286664795 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.288894183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.286493651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286815388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284639138 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287206509 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28930911 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288301434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287727812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289142938 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288592517 seconds)
  done (took 72.031264185 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289537568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288725702 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285804941 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.290416002 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287653853 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.287103666 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289748929 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287205969 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287309599 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288410191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287890578 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289910992 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287382153 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291492396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288402301 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289802562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286992445 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287294811 seconds)
  done (took 24.392973493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287524974 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287639185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289470932 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287045157 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287108835 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290573852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287277966 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290029953 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289692626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288003578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288157651 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290652539 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290718002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29118432 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288231926 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287826924 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291511161 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291188891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288099844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288029763 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292203339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29057219 seconds)
  done (took 29.565628657 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.287439376 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28909557 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.288181174 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.306228754 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.308418491 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.312905563 seconds)
  done (took 8.99534451 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29790274 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29050447 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28808723 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292070863 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291735109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288416304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289368884 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290142808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291197138 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290816076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288578607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292261173 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292616331 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288394177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290887803 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292052176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290001521 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289265886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291054898 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292542296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289968982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29200759 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289411378 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290722375 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290085408 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290421583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293750874 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291439633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292259331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293103083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293830391 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289755613 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294186339 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292563649 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294986117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29432849 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290669492 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2937193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294679318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29135796 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294860139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294691521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294383194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291068359 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294075773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29177035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291641341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291749234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291101494 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29473904 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293195528 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291756691 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294532147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29411783 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294286881 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295102378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292681932 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291801967 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295352964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292476751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292126874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293840112 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293518578 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293423668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296491238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292987522 seconds)
  done (took 86.516725932 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293310014 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293902199 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293872851 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294806667 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292130125 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291247021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292877484 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293594225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293176586 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293371064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295033975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293168026 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292313784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293693797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293444355 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293635215 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295531933 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293230932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293860458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296627986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293648616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293722811 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293865556 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293467789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294587512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298444987 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294150415 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295835058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294498359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294890714 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293080155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294006788 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294431049 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295484867 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294118868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294049941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29511488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294069775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294634378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29723049 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295263016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298124977 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295307565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295967558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29630238 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295629218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295268032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295648648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297390227 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295564358 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297116768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294831458 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296186949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295201432 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295610947 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296093582 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29644274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295457179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296194189 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300181982 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296279572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29584188 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299869856 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29494917 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297323893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295460665 seconds)
  done (took 86.679865746 seconds)
done (took 1752.23442517 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.282524699 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.365452043 seconds)
  done (took 13.858483487 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460669984 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415352551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29623228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.305144309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298084198 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314703524 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.30909822 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296914529 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297854295 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297779746 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297693291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486838048 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.352020743 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297568461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.297943796 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392369036 seconds)
  done (took 42.630119542 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328052139 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.307308936 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423392302 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327782981 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326712975 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49749029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362474344 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307139127 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488877889 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351661859 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.031079949 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332493966 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303962061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.530831074 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324883608 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495284918 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570845682 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.939834517 seconds)
  done (took 30.463316882 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.779976475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318812335 seconds)
  done (took 9.311182223 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320235115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.30138637 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302008717 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299485006 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291436374 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.294135186 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300064773 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.292003913 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.167290919 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430914609 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303967067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.309184014 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320618904 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301043973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298579218 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337769306 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.455221384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298831948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.298203401 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305477754 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300981457 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423371986 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344538653 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303548188 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.431091474 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.151113628 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.308488556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309756708 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434807257 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302211766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300330564 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301160412 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30272086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.911263426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775314932 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311666288 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32601063 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310465168 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298262125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.49092285 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303089504 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30836964 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307943216 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.768073337 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439689639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426432242 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.580553 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320353503 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303479909 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.364738331 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304561895 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.301717247 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.331100872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.067079515 seconds)
  done (took 110.214365953 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33198495 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.690227364 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466405497 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315485268 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06241042 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051984548 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312652879 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595891665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335649688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296629012 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.597179345 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821114414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319570532 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.363836557 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762540625 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.329239195 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296236796 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.179790843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313328278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299181112 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800623126 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303273401 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297014492 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.414578323 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336037235 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764746356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.725724396 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.766325565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317761733 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297043531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781206336 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315656886 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.310040698 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29991822 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565660022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668987237 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658349277 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.319960541 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.309882094 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303051809 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324412344 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759268528 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669773023 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315060421 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.3123501 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764830075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31634711 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.307616398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.300012359 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508864663 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.001049309 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301559788 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.767232267 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304348262 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.603874126 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367355272 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369756934 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793282023 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317427242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.4900922 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31744521 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300514223 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305037244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303602852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302837596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658738194 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722372632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303982159 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658285098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794146611 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319740263 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84781835 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.226831312 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312965534 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349531018 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301619159 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.976760914 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80693351 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336460743 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301837918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643746206 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320157846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.582668939 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317472756 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301401754 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814534605 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30746578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.36662528 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300120122 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319617337 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.064937205 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303566431 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592176996 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340145831 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.301272761 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.301852759 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.34138284 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301992017 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300820547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.307222807 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852919434 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32772183 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.288971688 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325328536 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301447609 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302938664 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303624559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300944562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529222115 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.78585948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.330196734 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303951195 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.302223155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325637879 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.434009591 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303713766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.62274365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319860228 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302303457 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302120685 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.052865672 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366944843 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303425398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324544766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.229209836 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.51340047 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32111915 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.302793492 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304094889 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319048398 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.58312466 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322526403 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383040382 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304056802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023258382 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335035173 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320829091 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.646237806 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309248524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.271854711 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329726528 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304261979 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597665171 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586777304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.622383194 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304672608 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.320907521 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011089229 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.340200962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451276396 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325057675 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.292018388 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503938325 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.452183491 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305172872 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.903835016 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.303480653 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524441504 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311441147 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608244539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816153621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323402751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306247959 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.028461691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019564128 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.053655566 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305146394 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59362394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.26010631 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.785331606 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.305529672 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.306697885 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.889619178 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310806376 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308077737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307217459 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306840834 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378513834 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479876871 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.649990759 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309332469 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772102538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362628027 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315871589 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307884531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.310179036 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.657102384 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366218512 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.310896092 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.34404653 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.308111892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.308920367 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791215877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.266479878 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.313934977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460362531 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957850308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326684492 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308821453 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.942006192 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.526990951 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865218518 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.373214488 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.628766136 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335893191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346586125 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99739197 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381091642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834962927 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328920578 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.307684096 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926278602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326359612 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393170672 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.308613184 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308863168 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865749427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327448104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.310303766 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.586787672 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328837064 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563518442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.311267411 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.356932854 seconds)
  done (took 1105.707445974 seconds)
done (took 1313.395479573 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313206275 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31496376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297458334 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319248003 seconds)
  done (took 26.471944457 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.323341842 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318105422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319182782 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318966019 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320802328 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320248576 seconds)
  done (took 9.153192827 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350923075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317982048 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319671457 seconds)
  done (took 19.219553711 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.533179017 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.682502205 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.695786376 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.660432121 seconds)
  done (took 10.804548404 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32182297 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320938755 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320874874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321645935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325118288 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326090277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322542656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323101038 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.326197578 seconds)
  done (took 13.138258767 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.32664108 seconds)
done (took 81.341536526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.316789685 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.291090053 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.295016552 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.281822153 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.427713019 seconds)
    (6/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.414881623 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.132764969 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.58589304 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438309434 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.356302508 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.315664083 seconds)
    (12/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37608384 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34270802 seconds)
    (14/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.315897125 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423755822 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.157636722 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.332625372 seconds)
    (18/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.296453724 seconds)
    (19/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.372380208 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337953718 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.29874025 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.935219422 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375591511 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.969948002 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.787735888 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.326072509 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.81983699 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.77602264 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.042651075 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.296711114 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.317683059 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.417293102 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.324390651 seconds)
    (34/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.688175367 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339150602 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44701189 seconds)
    (37/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.531372836 seconds)
    (38/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.835091826 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.735041322 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.408207144 seconds)
    (41/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.422520606 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277537793 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.34450093 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308275053 seconds)
    (45/286) benchmarking ("sort", Float32, false)...
    done (took 5.32564701 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419565268 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737897674 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337148609 seconds)
    (49/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443611422 seconds)
    (50/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.962252021 seconds)
    (51/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.933897542 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.431306578 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336408235 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337580779 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582697751 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.400474247 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333685582 seconds)
    (58/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353148246 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.565185412 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.797034653 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.681674563 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.395586169 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.679606603 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.856143286 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.303450488 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.246553303 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.31585687 seconds)
    (68/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.342562029 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.41657833 seconds)
    (70/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.985861983 seconds)
    (71/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.705566868 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.671026962 seconds)
    (73/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194835233 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 6.325161573 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.308161122 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.115553062 seconds)
    (77/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.530666187 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.133946524 seconds)
    (79/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.439968568 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.840260812 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326403971 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316632436 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465560358 seconds)
    (84/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.304907262 seconds)
    (85/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.015412158 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.114812052 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.511885307 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.325170655 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.573976408 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.054038808 seconds)
    (91/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.444562575 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.869189983 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.352509269 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370564097 seconds)
    (95/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.690774603 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319564431 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.304037969 seconds)
    (98/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162187643 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.460174314 seconds)
    (100/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.301090237 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588110852 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.061135889 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301614259 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319108785 seconds)
    (105/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.7296054 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377426948 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.286258125 seconds)
    (108/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.973754453 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.745635803 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.14599033 seconds)
    (111/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357544131 seconds)
    (112/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.32178481 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.310448775 seconds)
    (114/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.325482622 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53240263 seconds)
    (116/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.944205683 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338663504 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.301990903 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.331003843 seconds)
    (120/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182781832 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433387605 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332274365 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.846765344 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364083386 seconds)
    (125/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407742 seconds)
    (126/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.30167722 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.598277368 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.582129839 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230507499 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.120040429 seconds)
    (131/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.349155832 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.579967734 seconds)
    (133/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.707302469 seconds)
    (134/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387789904 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.425716843 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387943963 seconds)
    (137/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.729887495 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.302827026 seconds)
    (139/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.175409778 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127131172 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35107811 seconds)
    (142/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.814763716 seconds)
    (143/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911916488 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.303825351 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304333532 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.943888122 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348333765 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.121629617 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.423871482 seconds)
    (150/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333424308 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.992450995 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.384646933 seconds)
    (153/286) benchmarking ("sort", BigInt, false)...
    done (took 6.324711662 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.295110588 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.427775749 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351458975 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.431587629 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.718880299 seconds)
    (159/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.369460901 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.871267655 seconds)
    (161/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.343684189 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361315577 seconds)
    (163/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.6920778 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335172756 seconds)
    (165/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223622435 seconds)
    (166/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313258362 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353479537 seconds)
    (168/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305673937 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.32582858 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.305025009 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.37756253 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410897734 seconds)
    (173/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.335166428 seconds)
    (174/286) benchmarking ("sort", Float64, true)...
    done (took 6.327483314 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 5.445814077 seconds)
    (176/286) benchmarking ("sort", Int8, true)...
    done (took 6.34322227 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.400961394 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352870397 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390669833 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.558533287 seconds)
    (181/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.368127277 seconds)
    (182/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.953587866 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745601225 seconds)
    (184/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560299003 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298014845 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375663438 seconds)
    (187/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.313370975 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355103885 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 6.327429771 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.559505765 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.807180572 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416628136 seconds)
    (193/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.053451314 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.373680457 seconds)
    (195/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.140917828 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369965656 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.310340344 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328238492 seconds)
    (199/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.515874871 seconds)
    (200/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.345066612 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.403342128 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.233110761 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.930813632 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308256747 seconds)
    (205/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.328702059 seconds)
    (206/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355467008 seconds)
    (207/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.323220578 seconds)
    (208/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.329592415 seconds)
    (209/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.321821411 seconds)
    (210/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.310326658 seconds)
    (211/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34680261 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767879953 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.325589954 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.82312168 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.569914735 seconds)
    (216/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.718769963 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430571635 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187067225 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328819315 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.726473338 seconds)
    (221/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.387282862 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.315020247 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.310089859 seconds)
    (224/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.51473183 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.348105107 seconds)
    (226/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.462066676 seconds)
    (227/286) benchmarking ("sort", Float64, false)...
    done (took 5.694177931 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452553201 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.465280307 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551096789 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.723555785 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328456184 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.142112026 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 4.392689997 seconds)
    (235/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.806536964 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.313950054 seconds)
    (237/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.365959911 seconds)
    (238/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.337773429 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357827974 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.15163614 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.569906344 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.213941863 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.221222811 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.735267882 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.009357861 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.357574414 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.313740926 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.311488177 seconds)
    (249/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.586813123 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.430677686 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.359235815 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.913005446 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.348999243 seconds)
    (254/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.310868978 seconds)
    (255/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.611771787 seconds)
    (256/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.730126556 seconds)
    (257/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.135134523 seconds)
    (258/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.824063013 seconds)
    (259/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.640383334 seconds)
    (260/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.518663581 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.927458827 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436711447 seconds)
    (263/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.817484379 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.891129361 seconds)
    (265/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.615652276 seconds)
    (266/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.247289139 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.420686725 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.31188615 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432248212 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443561569 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.15857975 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.022593052 seconds)
    (273/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860015397 seconds)
    (274/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.893764628 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.960021288 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.390831874 seconds)
    (277/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.312415392 seconds)
    (278/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.417174148 seconds)
    (279/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.313570095 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.418651693 seconds)
    (281/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.333084575 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.355810858 seconds)
    (283/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.990878555 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.317873494 seconds)
    (285/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267765355 seconds)
    (286/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456198292 seconds)
  done (took 942.718692053 seconds)
done (took 943.951983099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.366580253 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364965163 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344887598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366991834 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.45843589 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371903585 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356044911 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347324718 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394038463 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395569013 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.345597331 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.373443949 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347216034 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347086862 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346052546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361193795 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.44561859 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34747436 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.363539371 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356047951 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364375954 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346591371 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396214064 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.372768367 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351102917 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350232599 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352686418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.369250185 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.460550098 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.351468375 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349816283 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.359585586 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.445904252 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346016773 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.343538841 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368098772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359338923 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.356755543 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.3510678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380222464 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.876715679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366913379 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349794734 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.349015463 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.3478006 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353794746 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351044807 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353983858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362612909 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365356995 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.862112047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.383602873 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352442091 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349441073 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359796628 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349651234 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35282908 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367443416 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369846346 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367526642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.433486922 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353874775 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.351154363 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366174285 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356828028 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.901199175 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.362526305 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355513926 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.878853519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.372592665 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.902484901 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376654803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35050043 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.364788166 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383205656 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.449664707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345525472 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.350789008 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358920282 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350136219 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360377502 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366110982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354319277 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351139015 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368454039 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376909242 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361242174 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353422701 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360011499 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372332661 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360267905 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36410148 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35559374 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347462063 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361490613 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355756816 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356567762 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35555752 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357604741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363500332 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.880451192 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389859204 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349650744 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349848977 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351882909 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.366032967 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.879631492 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.372438845 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375755314 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.400524651 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.354212616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.439532494 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356422116 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373355245 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362785412 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356702516 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349302707 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.438786247 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.869533751 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.385779643 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.355011889 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352748836 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37309664 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.355070855 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349773263 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.456432817 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35524428 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370242208 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47612078 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364358964 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.38719699 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.35236306 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357693902 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377637581 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372723918 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.386368005 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356948302 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372546396 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.370546169 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351927728 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366563674 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365500862 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356017363 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359448115 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.3495709 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377110437 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369389753 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370045722 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376224815 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.476685557 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.352119541 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.445213425 seconds)
done (took 229.451161508 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427214221 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347642654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.44443163 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351009632 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.465236356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452045352 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348217191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.347596472 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348577183 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.749074643 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348523365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.347978886 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.342506805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349534662 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44940367 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351061654 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34845667 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.73238521 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350988868 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422460181 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348516987 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349007634 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350651487 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774932774 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344304662 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.344863331 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.421550377 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352595765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.716219976 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353764365 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348710886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.736269285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441642208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370522273 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362067221 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359899053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453965967 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.373379492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43393069 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449422564 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436652648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391509449 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346215393 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.345050209 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353189175 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353835503 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.349673652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380400777 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.350662906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351394584 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713191272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362751821 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36120641 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351722333 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352029374 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373102651 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351815696 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353432093 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444161695 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.354659373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416714065 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.755086163 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.778421171 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354340299 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353715426 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.352720245 seconds)
  done (took 149.959066888 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420481262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.425278728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.470500069 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371502903 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402989136 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474932799 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371701874 seconds)
  done (took 11.200094052 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360038425 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355488215 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407892769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404265452 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353806344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502976139 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35613055 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.365216897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351218966 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.407406879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356574882 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355373126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.362482104 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357109258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402425669 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367357485 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470106968 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356433091 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35681231 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506133744 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353148676 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363616377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411838034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367175631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35780087 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360746614 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.92507753 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356299885 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353551125 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356384438 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355431923 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.393881201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356634185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351714972 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354355212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472058098 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358043935 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354132731 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.357402068 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356959471 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356505618 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358043073 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357655545 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354932105 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357303 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380362799 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357008114 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357568691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357398917 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357928622 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413401592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357691901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355856696 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.355112166 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.413206519 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365138358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358205841 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354906802 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359419464 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354998462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508804706 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404166827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358379196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405996413 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358209138 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35983758 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358135251 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358755696 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41286495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.358654419 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.406515983 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357028522 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.512761595 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.380896333 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360516526 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3613628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361242326 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3592584 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354217522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364888376 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357405287 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361226516 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365310612 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356000776 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356789039 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462849933 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468779715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357612616 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372785612 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366613915 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357668387 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415962105 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361010827 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358432795 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412029187 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477541849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413732127 seconds)
  done (took 155.544457281 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.364201989 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369261881 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361561837 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377718827 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.361998731 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.361374057 seconds)
  done (took 9.464366136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3625835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363443008 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361618792 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362330684 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.360388845 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361429557 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360600403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362273043 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365802156 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362863962 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362273023 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363221323 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362517015 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361451964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362154292 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.361785529 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362337734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359681641 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363783965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362703037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.456942893 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362519135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361776477 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.363242236 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.367409562 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361893585 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370498299 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.363582504 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362754911 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368758988 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382648275 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.36336653 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.363973883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369916334 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367117388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364012421 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368658308 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36512795 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360436179 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363774244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365118105 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364450267 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364358057 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36462537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365774743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.368727916 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369124084 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37003296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364802161 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364415215 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364254865 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365169047 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365137479 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365034161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366400554 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387808031 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369355543 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364970568 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36402386 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366398824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368747801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.365753759 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368775558 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370165614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.374213294 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36643582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367334802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371374355 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366450861 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367070432 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.367084495 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363740341 seconds)
  done (took 100.682566094 seconds)
done (took 428.109343419 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.450350819 seconds)
  done (took 7.724567497 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.527287711 seconds)
  done (took 7.803343047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.19226986 seconds)
  done (took 23.472496793 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.389473388 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.497593434 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.369548688 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.359787009 seconds)
  done (took 26.89116048 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.868167967 seconds)
  done (took 8.141687661 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.373008837 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.365585132 seconds)
  done (took 14.014729782 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.454541136 seconds)
  done (took 7.729163816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.399645376 seconds)
  done (took 7.680344605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364503427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.40055085 seconds)
  done (took 14.052748776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.341542053 seconds)
  done (took 7.615735984 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.423550597 seconds)
  done (took 8.699770087 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360528805 seconds)
  done (took 7.636445145 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.444730705 seconds)
  done (took 7.720696306 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.908955216 seconds)
  done (took 10.183285418 seconds)
done (took 160.640148297 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.359571105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.364467216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367974196 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365662595 seconds)
  done (took 26.732123585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401467004 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.41885965 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403464669 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41329584 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405297151 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403619586 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395168529 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394671547 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413191229 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406700866 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403518035 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.404952385 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.404312718 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.395121111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405294442 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405699457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.413129457 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40393373 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395811925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407328858 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369797047 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414588373 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405784038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370506143 seconds)
  done (took 34.932366966 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.889356615 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439112138 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521938363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421741794 seconds)
  done (took 7.549855586 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.420854411 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423404219 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434996662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474189037 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.499302544 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433408635 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396918887 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.391061288 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378041655 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.422546248 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49801993 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439690226 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.508891842 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.370712935 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.575559751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370868428 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370484024 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422361478 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473676781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488488355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370904288 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422708076 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427080729 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.439874117 seconds)
  done (took 35.731832332 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370344637 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389306966 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.370446648 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369763853 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379051377 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37056925 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371543523 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372330255 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.371673483 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.376591795 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.36972495 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382214763 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370529716 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37154916 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378209066 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372248164 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37740169 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371320957 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.371546266 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.376869645 seconds)
  done (took 28.762470915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363229679 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218230489 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71729416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621229501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.365349096 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.370674928 seconds)
  done (took 27.935369961 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449221275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612685552 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37143096 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.77135366 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.858719885 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3914369 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372352798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.630123085 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990928784 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.981070931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434444064 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444062131 seconds)
  done (took 20.588297315 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.381937009 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.369162387 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382924616 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384402042 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.431292935 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393013893 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38021147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366536772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.434157363 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.454772898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394035498 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433065816 seconds)
  done (took 38.086291111 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458845415 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411112468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.443987091 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452456298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084649711 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578940464 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419684541 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810034047 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373573366 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642778584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386171988 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463758478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624607234 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368682206 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374152735 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.453933177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617668595 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877293132 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37093789 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687745628 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399618881 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379847901 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.791008369 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406859832 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58114447 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510761336 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631647858 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145265759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688862816 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385089112 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380319227 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370520589 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645160763 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073791842 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488109145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381396824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390567148 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916457002 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367988769 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.689830877 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385454872 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37682621 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381582417 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37079094 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305327657 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378984496 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81898654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.37737484 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.082747797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37244232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382908175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465809297 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376001784 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.941428312 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384774405 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396666264 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.369732383 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466469197 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960553329 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166786284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3908653 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.313028972 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373376602 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622058653 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047755153 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.493515743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376682999 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376457673 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306824666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.602945799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393641045 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520997293 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.396139105 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022043458 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119859601 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395187797 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311134575 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941754643 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390595167 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311428264 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600788504 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15178612 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309608428 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317216604 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308417121 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133374505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38699569 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.838597081 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406617981 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834800654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385169699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392702069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397783532 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597443828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.253266649 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374885468 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.383317595 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505000961 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39721886 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815180468 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3099509 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378937497 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629594635 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585726483 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381596527 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.463979696 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614536126 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381497184 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.39580369 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376195806 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.391530933 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.993594879 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407642174 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178108634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396864183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152731167 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163463532 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395432675 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483990921 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377428053 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650158937 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.197545539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278646173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445309358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382090472 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378028853 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.731795917 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972908387 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.273802313 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.374105156 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390424788 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394089594 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377529021 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325549172 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.37429971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401913411 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.160751304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601535334 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393458769 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658320409 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312440379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525206086 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388087475 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.600581061 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642750954 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.396030756 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099365003 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378180205 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408390674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393851003 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397194436 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479892556 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400905078 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.388090248 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637240876 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.382860638 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383117329 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.747652516 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160231874 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384949064 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385104834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391412375 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024807484 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378468683 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381301925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268353562 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391510875 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446383415 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384636769 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388481697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.360390093 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400727399 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.409781692 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377242164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608377862 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389549534 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.614864908 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463893556 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.58536055 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008416121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411918878 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.313217308 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.091074324 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.07391799 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38006728 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.568871449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380232157 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390182583 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389907464 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393275001 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00034052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401340959 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.624615876 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389302565 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390813305 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.384352141 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379225554 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.355486812 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19071143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394892559 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395615989 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523803234 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393414723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315343612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896678192 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386328482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381395705 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157686051 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415489115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.619464478 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877973333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641788351 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39382435 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392727508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.75188839 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420421589 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380788551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382296835 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388583495 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394672663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412128103 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392607861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.728966353 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.747693284 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948114714 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141431839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984886743 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41171833 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.389192262 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310206995 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826010833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316529631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045904176 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590667009 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850912803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328700434 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592903256 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.664754012 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240471554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397464034 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612452072 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391083843 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.398456626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401867573 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593356982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418769588 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386941864 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319778725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.663547208 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629672763 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387230383 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468249216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826043346 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384197305 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167311985 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.444320535 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763614513 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588042401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.935405526 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.817763697 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391987826 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391190031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874772027 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388644288 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910661016 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047072444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416489794 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.599893537 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323419978 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.396398181 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.39607222 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.380578141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.880461171 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.401784273 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646667536 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396375186 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320195316 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392637233 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961201312 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25805954 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392063424 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385445633 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183625962 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39577903 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710158396 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391843095 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.354146848 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411024898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320981951 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321828589 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.080041931 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397539162 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362865596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911358201 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.387530852 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396429597 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389997033 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241976947 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642480372 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.400096322 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01775115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631120243 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40486456 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411102944 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.488591842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38775478 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.392585368 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281363781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623059172 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432325935 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63148521 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.467925401 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.293608895 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.45998239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599043459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289188121 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391605915 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668241292 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.122510725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.400051513 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120718567 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431410014 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405898581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404079417 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401104458 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408564035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480152938 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399974473 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399950044 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.399559991 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575846861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395011617 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413730212 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403151013 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484005135 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203272568 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.364208581 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.166833161 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026147653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17344863 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034977228 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42147221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38980988 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390188229 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323013865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54194246 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915946245 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663578373 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520270229 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.41127073 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413344169 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390774603 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397575789 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626201026 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66636414 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361779427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391666155 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180185099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.273817639 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402594615 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601734227 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915544514 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97849918 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510568587 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390667255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858380483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665379415 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481539534 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392269217 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982282529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.413491473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.778446588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418767632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391638173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545202683 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402624356 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09323768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423546315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552672644 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.166515707 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749551779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651749907 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90201798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.404337916 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028924622 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169448453 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656276491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464397314 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406078148 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.497089111 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543111976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.400616084 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278441155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393395215 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23796169 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104085505 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403910928 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025781615 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675941525 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.392380032 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400763107 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42150179 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.405722464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617280511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159737136 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622136336 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406554161 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40315797 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.384284746 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024198658 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427180875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328707663 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.400290808 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661189988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651889318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418619319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848727789 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.106857412 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970208751 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.36866941 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418122243 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396824008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15255598 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02499179 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.394501667 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950786806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059450058 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402896701 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677722512 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.402140959 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407657116 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676483594 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401281971 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405087738 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412000119 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.030999951 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259901488 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.420831304 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781673047 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.336988295 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623837569 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477631134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332780301 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397985107 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.589567064 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402417195 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527409825 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409366993 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400520189 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40353998 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159345249 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678416563 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.404351042 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399200074 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.399811032 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407364238 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502631271 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645550503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403622676 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072845317 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.746538661 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653369884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.408903369 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.381715452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.404265693 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397542231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11758462 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407396775 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399221917 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007868977 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.41292654 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413538721 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403997898 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616308945 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612056567 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406415738 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416841198 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400274564 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418043251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298348095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165964327 seconds)
  done (took 1675.341169133 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452780755 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.417160566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.418173856 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442273725 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421991621 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43046764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.476501794 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447387218 seconds)
  done (took 52.816300095 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.406087155 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.560581412 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432389282 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.402190323 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.413590158 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.415478277 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.896107964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42852349 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407845695 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.41143791 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.416539204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.403379098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.106842083 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409693271 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.412752086 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.395722075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.408842305 seconds)
  done (took 66.644850693 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.405252178 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.75433738 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.517487747 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.405711928 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.849671766 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.433153963 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.763348958 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.462625031 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.41287361 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.702202168 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.077585051 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.409132486 seconds)
  done (took 81.506026774 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419210151 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419778721 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420259041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418410528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418950633 seconds)
  done (took 8.408823379 seconds)
done (took 2106.312751826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.409305939 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.176488889 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094022296 seconds)
  done (took 5.583835837 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.546925808 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.595923972 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.716367401 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.722126959 seconds)
  done (took 7.894231118 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.679439461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793650929 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.585103101 seconds)
  done (took 6.369842856 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.708478375 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.430976799 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.404395211 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.401677651 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.404927975 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.404361716 seconds)
  done (took 20.524517418 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405247048 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408102574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406697376 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407864061 seconds)
  done (took 6.942326243 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.381318923 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.103965937 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.385020967 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.400824131 seconds)
  done (took 18.583171011 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.150977896 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.164814359 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149577299 seconds)
  done (took 7.778707493 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.434970915 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.429085462 seconds)
  done (took 4.176831017 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695660568 seconds)
  done (took 3.009440256 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.42073337 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.458160977 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.536973441 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.444679105 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.993633669 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.207364087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.194567151 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.738328271 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.414302577 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.83410784 seconds)
  done (took 32.55713432 seconds)
done (took 130.686314946 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.490841842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425402628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.608706883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.468674685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.634691495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.608474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.942779688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.437671658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.182555914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.966889677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.468706066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633501606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.679017546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418991682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.680371731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424667789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.633946691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.541814573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.198881774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360689802 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947492783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.105437688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.301843492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.130241429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.633784724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.559508912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.704489609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425491033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.374297712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.722475404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.559447836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411539275 seconds)
  done (took 196.997369701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.40823546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404404345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420859496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414715187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.4047587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406092987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404512531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42111255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416708937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404440968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.40479532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.404615224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421632944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43065296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406403629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42331584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431406415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404954432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416502238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405365708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424342362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423366784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.440933546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.41326354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406639973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.404534989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414009574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40873561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405714262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.439220937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405192896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405452323 seconds)
  done (took 206.563208385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419756001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404482907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418516086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.413946152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.406779921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412905037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406835768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40671137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407108282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407215032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431643736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405049783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410117115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424875271 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406097018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42608842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42656305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419609966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40638649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435708283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40797596 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.407632446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421219659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.415185088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.408050159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416567108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415742148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406987829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433950009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407207512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438471468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407167515 seconds)
  done (took 206.602146356 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604321048 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417160812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41681018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.352248052 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41836327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.416156468 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41113494 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615362629 seconds)
  done (took 14.97080408 seconds)
done (took 626.448016376 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.775878055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.497775508 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625459428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437912531 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.244473567 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457126105 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.438606314 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.615323082 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.365209509 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.625905888 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.758985472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452545576 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.907896012 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.435483201 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.702100109 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.539149791 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.331804133 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.456999135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.765937205 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007589861 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.711641738 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.988184248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.637951634 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.357593732 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.919970487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.966763963 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.204990346 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.323244609 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455891689 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.773202812 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.141491387 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.461381557 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.504224315 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.50378304 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561030333 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540625922 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.44504281 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.501113816 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.650538136 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.749618414 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01854325 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.179750792 seconds)
  done (took 96.360461334 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.400906351 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.399973147 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.400247927 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.400900452 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.401325802 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.400881985 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401447951 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.400977564 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.401185733 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.400677944 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.400358572 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.401607902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.400985763 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.402203304 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.400913065 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.400373057 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.401959064 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.403702544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.401499854 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.399494288 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.400971461 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.401044332 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.403119136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.400686678 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.402489468 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.401237532 seconds)
  done (took 37.755553845 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.420841555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.677020141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.859518819 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426250622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420738894 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.426399937 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507169647 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.423655099 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424459838 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424237445 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.58063629 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424384936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458533645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.898090229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428865347 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423086251 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423031916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421996439 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687056191 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431968337 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.52946729 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425236859 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.507784132 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433180238 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.44511256 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423655917 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.426839616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.018223283 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445655009 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581977388 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.296609148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.507853297 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95596623 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.883969627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.301046819 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431146611 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.424946411 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.587158098 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426299708 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424215404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509929211 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424732257 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.863629024 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.10866474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.443818189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425253402 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.043084156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606080707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.699100487 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436290664 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.8953464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427567297 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.426279883 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.424552829 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.699538594 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435056611 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.423981939 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.048141702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449521983 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.509144856 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426080504 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424697138 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.696182948 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424609031 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.68292697 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425626653 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434115391 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447538986 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.869217071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427744834 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136637515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44648813 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.426103911 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585357264 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.684062741 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.074121452 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.452507146 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.700928548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969030995 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531451072 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.430453976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.009006538 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537959291 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432498351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.429011978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.428750202 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.427046839 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472923674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.508354037 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.069422621 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.151946443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.077158672 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.532921844 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442799958 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426994648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.051801268 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450693978 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.42808347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.877840559 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.152218176 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.449229865 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434898413 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.137690107 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.44911773 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.513514176 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434516418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.888362118 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432812032 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.517634243 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429260662 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.435533981 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.452088216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.514403942 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432880593 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.429514541 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132021887 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.615357592 seconds)
  done (took 188.594477791 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.429285613 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.421168361 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.438462417 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.422242638 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.421975659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430361268 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.422589248 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.422726531 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428565381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.423297948 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.421898498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424189702 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.423601998 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432057686 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435790327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430069926 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.034063339 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424054163 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.424204242 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.422670777 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.24627636 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427747066 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.424101049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.423923478 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.421829894 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422535158 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.424449109 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.425179414 seconds)
  done (took 154.682123157 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43232359 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.039729997 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450358762 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.575067887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458172286 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430413729 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575989296 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.498055857 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453735573 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.430697145 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429894519 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758142019 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.433173406 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.998000305 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.646244165 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.600958958 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991993015 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.450429474 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.429975448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.430323266 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.579380346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439482913 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.758141011 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042316886 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452361279 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.042067366 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416033343 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.433103253 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431547598 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.047338668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.448922377 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.761387581 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.514508585 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.496653482 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.065872114 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.008464198 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.011553809 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.594007982 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432781872 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43067654 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.431154566 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.416040062 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045320444 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453035551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.432744155 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037533736 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454728738 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.433892984 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439476502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43128437 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497084707 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.518215103 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.782470656 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.053965858 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535279399 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.446020946 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.575449903 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.810351142 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.435919312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.992265999 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41591932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.054987739 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455155412 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417014536 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434665107 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439935416 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.596245595 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575502142 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993923151 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454232153 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.992780543 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.61473848 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433388834 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.432893178 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436564245 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051745317 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.013002972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.616423743 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.579852994 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.650122609 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.422551345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434160353 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.417163707 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.518370335 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.434453875 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057983564 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.014948444 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454975045 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.437548829 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.435957598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435732892 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.630560354 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.076926653 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.543944753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984163841 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.785736448 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.768359249 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437549183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500722938 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.455787607 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.770897132 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438204251 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499908056 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.879497827 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.770119945 seconds)
  done (took 171.745225842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.69381281 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.737621248 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535368481 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.599233644 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.064253075 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.011750435 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.807401732 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.595825529 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557645086 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.716882461 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.658032253 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526138528 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.660206017 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531270296 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.206275013 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529966593 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55962714 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593395708 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.604265016 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.490820051 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.133393054 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.731102704 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63359778 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.383636972 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.534203698 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.23518135 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.019383103 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.013629805 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.616852745 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.833593012 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.988507497 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.597291668 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.454600093 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.177038772 seconds)
  done (took 69.372860494 seconds)
done (took 719.830913021 seconds)
SAVING RESULT...
DONE!
