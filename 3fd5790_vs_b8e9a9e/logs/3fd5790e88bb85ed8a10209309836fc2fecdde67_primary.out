cset: moving following pidspec: 18601
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383974642 seconds)
loading group "string"... done (took 0.581450839 seconds)
loading group "linalg"... done (took 7.581505983 seconds)
loading group "parallel"... done (took 0.158442205 seconds)
loading group "find"... done (took 1.147255319 seconds)
loading group "tuple"... done (took 1.801238584 seconds)
loading group "dates"... done (took 1.313293729 seconds)
loading group "micro"... done (took 0.218708812 seconds)
loading group "io"... done (took 0.947850648 seconds)
loading group "scalar"... done (took 37.340896718 seconds)
loading group "sparse"... done (took 11.77388048 seconds)
loading group "broadcast"... done (took 0.950375696 seconds)
loading group "union"... done (took 12.146084707 seconds)
loading group "simd"... done (took 4.492950825 seconds)
loading group "random"... done (took 9.041439965 seconds)
loading group "problem"... done (took 1.819481346 seconds)
loading group "array"... done (took 20.820712003 seconds)
loading group "misc"... done (took 1.682014751 seconds)
loading group "sort"... done (took 3.327682245 seconds)
loading group "collection"... done (took 17.300194655 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551203475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130895361 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124342324 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125307826 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155492306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119248563 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131135769 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.092533283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.853112346 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157158139 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123236162 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436571472 seconds)
done (took 5.512822363 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17876287 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08936529 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09278886 seconds)
  done (took 1.346220636 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07150051 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12748327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073139185 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073413875 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073230708 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074929146 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073153871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072016279 seconds)
  done (took 1.732367418 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079227357 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074919951 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072199507 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074301242 seconds)
  done (took 1.46660833 seconds)
done (took 5.970935015 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794939282 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217596691 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193720564 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.419130308 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138173221 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161944636 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638051833 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319845989 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19505549 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086460496 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114829032 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33631191 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114912788 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657029569 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079857941 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096267736 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142403943 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427315674 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075572553 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088170709 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094987412 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134156724 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090393664 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080769734 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150291063 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07354207 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142041576 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085610319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071540439 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218943129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178252313 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663866483 seconds)
  done (took 10.486039863 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102514219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102850758 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074309746 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128459654 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101690937 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07563205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076972996 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073179354 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092339479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132680803 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094457658 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107425181 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07193625 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074591584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090886917 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209635644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085767945 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086566552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076000573 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081348583 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110393019 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084312858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086275789 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082941255 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135218427 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185679427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101796281 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102912241 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072862241 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085416443 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120732193 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130153606 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071372259 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071660656 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129283317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099799242 seconds)
  done (took 4.806481042 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.996367359 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150054528 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096859548 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140898033 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0717534 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115127529 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07093413 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086745631 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.214496818 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.412066258 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.612593946 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117326996 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110983661 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074093101 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075020765 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073555026 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.538588906 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102251631 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114735373 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091003864 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076823187 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075924656 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361500273 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074436742 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07037293 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074833322 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063302064 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133323848 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074520414 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950512916 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.161985368 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071626619 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105894524 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173887695 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.230922508 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149674239 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074475083 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073144581 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159169405 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076506072 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118586053 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071949609 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090905648 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110312741 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120414406 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071534341 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073311782 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168052058 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071074984 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086095666 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.10332639 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15841185 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082956343 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070543301 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263157663 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095282345 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075416148 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070836669 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193433586 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133201065 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07361544 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073633366 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07418785 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07781698 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37517953 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073589742 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.017148161 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076621457 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083588425 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075220358 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075498354 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079413171 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078288739 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093608084 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070594201 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072036913 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080664421 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071747168 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07215852 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072610647 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089345562 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.38985984 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072221194 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074143403 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069844788 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070579712 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.175222207 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095961049 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102204441 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074102948 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071587982 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105611053 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075562244 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072434622 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114058624 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073238899 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089687416 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075910777 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119752797 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075153026 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.102307355 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072034115 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10669584 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075718572 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104665682 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086633625 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074617155 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.433346742 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071436613 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.071350455 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076628332 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071099471 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073887405 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072185005 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08539427 seconds)
  done (took 22.499352115 seconds)
done (took 39.953206486 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25929764 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079990647 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079401698 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080037331 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080162164 seconds)
  done (took 1.836249377 seconds)
done (took 3.076183592 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129473183 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107465672 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070760104 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103549503 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070398904 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108835671 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107320031 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087926982 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107431712 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07068816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103615913 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070948345 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070764669 seconds)
  done (took 2.465882284 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090117897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092959788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076171568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089968267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069855244 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089273913 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0876381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095760629 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087788651 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079165894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06955498 seconds)
  done (took 2.159349199 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089403716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091295292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076341409 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088682842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069431072 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088455704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088010968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093007875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087938006 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080634323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069718116 seconds)
  done (took 2.151196949 seconds)
done (took 8.002273202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083552429 seconds)
  done (took 1.303154138 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593138217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.090655566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08745654 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117206175 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196116762 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125334605 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276907541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09370554 seconds)
  done (took 8.980777035 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095411052 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074870397 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088363313 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076837816 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078137087 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076716272 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075138752 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075317097 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077244298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075031929 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075216437 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077117358 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074286848 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078424328 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074404394 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077580483 seconds)
  done (took 2.54170139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09832205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098606655 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079883038 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08052913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.078296348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077838238 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079803458 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079513674 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07657414 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078011889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08049157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07977123 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077367264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070728975 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079639839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081900168 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076885873 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080377422 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080539502 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080751416 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080170824 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069949918 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077717724 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079089424 seconds)
  done (took 3.25110636 seconds)
done (took 17.306458713 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119809844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07750818 seconds)
  done (took 1.425279219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085871784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089640171 seconds)
  done (took 1.408932918 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087533933 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071307002 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.095781793 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084331566 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072319797 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.071534121 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093847904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071493784 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071428838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.071947275 seconds)
  done (took 2.025059853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0745369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083466334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07640774 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.087241824 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079325703 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069835631 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078052886 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.073337509 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08250681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.068614208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077181644 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088099043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076709898 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090680891 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077795131 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073485931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076808367 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072646061 seconds)
  done (took 2.642330073 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071102228 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072488326 seconds)
  done (took 1.381300261 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07245514 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070146469 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073046081 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071604582 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069407944 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067717345 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070021555 seconds)
  done (took 1.72870578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391409997 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119883851 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322659021 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077737165 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.087309879 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265249417 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071746789 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076693263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076871789 seconds)
  done (took 2.767630775 seconds)
done (took 14.622758133 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085762668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092461152 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102089702 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383263938 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098172745 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072764689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.12097506 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194218383 seconds)
done (took 2.403155429 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219710476 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.647749926 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414445795 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210683921 seconds)
  done (took 2.517067278 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354267897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094096905 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065356223 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072524966 seconds)
  done (took 1.838803293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072332316 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075030096 seconds)
  done (took 1.397539161 seconds)
done (took 7.224846976 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072300743 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091732552 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072398532 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069323605 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069451268 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071804343 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.068935358 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069311487 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072460005 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071907771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071734256 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071883424 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071735952 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069486023 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069348919 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069995973 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071981787 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069651183 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069262986 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069516998 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072070557 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068989795 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069270856 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071896252 seconds)
  done (took 3.000876481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091094527 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073084474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077191745 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076339672 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075148461 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076751809 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077190706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071812349 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076924757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073903428 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075300604 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075122723 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073625038 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074870712 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073485281 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074784285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076389292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071482653 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074223509 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07482059 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075794515 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071583438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.188207868 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076728013 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075433728 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074337995 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074051628 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071103622 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076424871 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074555199 seconds)
  done (took 3.630431376 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07508015 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06934446 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069788626 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076578911 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069182731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069731925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069616832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069390363 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070192177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06993355 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070601479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068599523 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069749899 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070110286 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06966618 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073081971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084395692 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070775848 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069434872 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069652184 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072366535 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06905842 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069479935 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06877018 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069164565 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069607193 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069261258 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069571797 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06944591 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069144957 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072486674 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072989859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069243317 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075844747 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072788148 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069458755 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073580789 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069314165 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069692866 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068816008 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0687924 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071472879 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06890163 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075852601 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069435119 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070032872 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06943928 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070504935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07081158 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072087045 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069136069 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069844589 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072005552 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070845063 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073737091 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068937297 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070178908 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069551234 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069908828 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069073748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069023818 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069665959 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071790969 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069425099 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084665197 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07654973 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069309237 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070753628 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070123814 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071581404 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070877209 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083779806 seconds)
  done (took 6.384446951 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096475805 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093694499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071732204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071302232 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068748617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070570938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075132804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069401449 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071629758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087032301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070326765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070600496 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070973022 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073593521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069882637 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070902453 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077737017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067717672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069937276 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073162672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069630001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075235349 seconds)
  done (took 2.907698116 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162521127 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075973669 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111327064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081471479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075886794 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080833876 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076380735 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076132027 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075776193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072859635 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073825944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075617338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075043543 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073547432 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073593697 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073366691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076378346 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072456762 seconds)
  done (took 2.749528134 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083138164 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071834425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092532029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07172103 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071113092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073859453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076346288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079559865 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.074535011 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071855589 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079801388 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07403531 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073815454 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071668675 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07365867 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071127241 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073633801 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071522922 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075858368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075931751 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079213054 seconds)
  done (took 2.933063954 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08537491 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074111359 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086996115 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07423053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068224566 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069905703 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075569904 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071031157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076557408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073430386 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071268542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069513542 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074679455 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071031469 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074292509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072127165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073714689 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071196357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073438766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066958317 seconds)
  done (took 2.742941963 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091622551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073655217 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074151553 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081304839 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073350034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07367072 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081028014 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073545743 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073477683 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094143835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07338435 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074011044 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080832523 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077931688 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073545032 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080355867 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080117243 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080953619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073152453 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073283728 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094075795 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073202238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081446553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073121586 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073313546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073398059 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073061896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0775985 seconds)
  done (took 3.44791622 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072618456 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072225876 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069519805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069713578 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069226919 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069056867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069127394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069536126 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071517801 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069143259 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074299324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071168704 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071883034 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072723989 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072465064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071251136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071740987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07048581 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06978776 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06924089 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071407596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071789332 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071386916 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0688107 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069399594 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070899033 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068629434 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06900148 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071085037 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068510937 seconds)
  done (took 3.392463901 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080397677 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079123871 seconds)
  done (took 1.434854075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068303836 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085261327 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068900999 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077437913 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075468119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072872326 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079451986 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07506511 seconds)
  done (took 1.874875163 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086588732 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08277125 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073637667 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085100173 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082463017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089381889 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140456754 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072937401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078024806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070246413 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085799851 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070595841 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07861742 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072448358 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077694166 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078750865 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069478001 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.078692145 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074222701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070772211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073280359 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081009363 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074890367 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067076406 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073796256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095169184 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083537821 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071621491 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075537043 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079250019 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077710525 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065694088 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07225085 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072686013 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070244245 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08248555 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087207975 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075443973 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08107415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073031583 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081454691 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066789826 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076815851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079078774 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082638441 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073120896 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072661905 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067052888 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070683464 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076621283 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067157108 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072903312 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066588613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080051685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075939589 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082988904 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070926271 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073958017 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075218628 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075878812 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079165374 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074720686 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07496704 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071660681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083155139 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076869019 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080886195 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067415358 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066360761 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070387547 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081820654 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095612888 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078785596 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073228925 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073081945 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.070172502 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075207108 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07299277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078109883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078495533 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072519818 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077864862 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079391372 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072997256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074911725 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080325208 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070946308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075693611 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070688448 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08829573 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07176642 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069766762 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069827013 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081968022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075216241 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071821962 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069489344 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07911116 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065636858 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071601938 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073136123 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072415919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080617124 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074930049 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075575889 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079461484 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077991133 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070898083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075023644 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.194704811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074318481 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073852952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081388644 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066896538 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076721947 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074028268 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073654907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08255423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070827294 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072934637 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082336522 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079028622 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070810763 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070263946 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075346263 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072678937 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076305677 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.081639991 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071937374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067905951 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067810987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076364386 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072473086 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076668867 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07737546 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075407697 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066998289 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070768956 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077895366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082619009 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0741954 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073814891 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078919386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074213433 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0720385 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07969664 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075409909 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071651411 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078252019 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072796876 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06772372 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075163409 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076198928 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.07195242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076418725 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07618345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074836593 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072826251 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071796158 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080325645 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072625307 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071258915 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073100042 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071111779 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08343468 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075057968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067261885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069492466 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081795041 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070775493 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071123709 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072017842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075162449 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073586288 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070894162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07231724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074087934 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082804291 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076382958 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07308274 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077339144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084189465 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071913134 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074343821 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072190361 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073151197 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072756839 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081286181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078150138 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076576011 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075081116 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06899878 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077980874 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079778617 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071641251 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070009225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071434239 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077020525 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077383565 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075737565 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072847575 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07079479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073297307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075378818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075802165 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071842971 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071283163 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077301448 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069604543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077829825 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07228632 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081520491 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074711304 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066096155 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073367593 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069517184 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077523069 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066422976 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069622298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070784241 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071516733 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070998889 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073932351 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.194175077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08053136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081496382 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073784123 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072790401 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.073122986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079779728 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075344765 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077127355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076469955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079520265 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084912496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072585327 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075853951 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083371847 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073010793 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067223148 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078779164 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071131308 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071336141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071051436 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07096216 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076550596 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080751874 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079784738 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066665602 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075538224 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071706149 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072065697 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067956246 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076911844 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076119392 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073927375 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080088814 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073357569 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072379765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07603173 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072431582 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073079163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073891693 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07617145 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073956427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074378963 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072344836 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076562623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072600273 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069354655 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074649102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071935195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075597676 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07778508 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072007358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07277859 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074733071 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073772949 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073309848 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072910104 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07101335 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075902863 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072784497 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072889983 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074819555 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0677696 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079491246 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072240873 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079738113 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072641447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068526007 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07944692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0746769 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078223557 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074020363 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073334279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0737745 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071413741 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075632895 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079035099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070503791 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083135305 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079483415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073700903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075423863 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072947175 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073589754 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.072243928 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073849471 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073363706 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072524832 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072476581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076722686 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074854273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072829702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073904295 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073468976 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073305863 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073874903 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066469849 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07144779 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071457098 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07196718 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081513314 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072782117 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071523272 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071093394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073017801 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070576585 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067913461 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078004599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078384004 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071354648 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077472895 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070488486 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072735388 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08147264 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065605148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.202469663 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07088819 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070756248 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080599987 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07438488 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082507113 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073626221 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07298535 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069985983 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074882339 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071766943 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067697457 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071443581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07649344 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072669621 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072749217 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072015523 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075582721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07403718 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081568846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072189313 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074031519 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072823415 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069692784 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072062928 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071837325 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076452306 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07311819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071101719 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069476424 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073265859 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073734702 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074707958 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072261978 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075168773 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079103038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072412315 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075988962 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075998306 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067105685 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07590261 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072411394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072074164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071547793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0761934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076676994 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07369937 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08228258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072818454 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073733029 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072289539 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070467493 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071970946 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072509079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072395317 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072424129 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073261309 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08055144 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069949678 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075141936 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073420825 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073254367 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07846296 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073602384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075167897 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078465176 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072167571 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074384215 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079872561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075926806 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076100693 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073089188 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073636042 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078119045 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071828326 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078841466 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072560181 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073167753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07406734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07086858 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072598766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072322379 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071455926 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.078233034 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072835755 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07411559 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07135774 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070017984 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073501912 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074655795 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080071218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074341958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075997164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067660256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069484769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073714845 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07023804 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074078933 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074821676 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078017847 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074185649 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072625439 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070941034 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080901695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078289252 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075200831 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070605446 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075688549 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073098432 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073940657 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073115909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071810573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072436851 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074279458 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072750208 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070261063 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077723902 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.207039188 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074173985 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074946674 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074843306 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073879422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067875745 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073627907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074970344 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079031815 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075218766 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073624561 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083654594 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070866047 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07298558 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075933734 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072179229 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07715116 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.067495058 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074332031 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073261266 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073755736 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067646712 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072167628 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070751931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074613806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07227849 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068090307 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083945613 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081343552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075670952 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071627882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071825588 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06729652 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067702251 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07157721 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072837047 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074614349 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083766345 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071624812 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071985764 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067273083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073048751 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075196053 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075785957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069516595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067667264 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07126444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076291947 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078580494 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071192567 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071792237 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076147462 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074636814 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070201641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075313134 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068760224 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076298679 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084962672 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072775087 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073805579 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079000077 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080324559 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072349901 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067349095 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073447296 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075376774 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073530135 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073532281 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.073347312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086700213 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075010513 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071122635 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071014547 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074793147 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071948993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080292666 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073716444 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072744024 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076884729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074687203 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080801802 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07559282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079672703 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075365087 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076115284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.071399396 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073009132 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.070680834 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071755493 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073678556 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07303266 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076870998 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080694048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072145044 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083139308 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081958136 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074391425 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.069155599 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07137678 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071900383 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067025871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072929917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069690823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070195717 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070159019 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070455824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073860506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076460371 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073444401 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072039898 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071489237 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065648709 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073030763 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073348527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071927201 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068070913 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.20387013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.074078386 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077274291 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078969562 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070117191 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075054412 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075491549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073969807 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068089528 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079222111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072434883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075065924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07282105 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073016863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073289598 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076472049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077891421 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073807073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.075683696 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07653534 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075344951 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069768086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069335531 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07855287 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070589233 seconds)
  done (took 46.334698153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105838197 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068282835 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066645287 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068592733 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07838783 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068746118 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067364922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068164293 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068478895 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070507473 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067361722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067263214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075528693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083182378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078038761 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071384767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066863573 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067493745 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066724745 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067868898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075940139 seconds)
  done (took 2.877923526 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078249715 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083557019 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081168778 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087148605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075887114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075452561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081234123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075711003 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083384169 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077592025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083638861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075779725 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077337447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077643705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077603235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076049008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082988895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076251676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075574802 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080262638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075387311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080609273 seconds)
  done (took 3.088879333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072912386 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072559194 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074055397 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066871752 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071435383 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066383226 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074733582 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06915204 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075430888 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070687044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070769616 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070955414 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073288745 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066811411 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071948878 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069184018 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113016109 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074495162 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071514591 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072496862 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067055202 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073173895 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067188285 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067017881 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070340597 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07483072 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072262084 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06981587 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071699077 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071015398 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07176843 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069425541 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073196843 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072858505 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071203888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070796864 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07163715 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071570574 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066900658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070130404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071696088 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066957509 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071995006 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073113758 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069294193 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068940073 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072883287 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072117767 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066790187 seconds)
  done (took 4.869747286 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084899052 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114357699 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072763742 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093923959 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085300011 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0776327 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075020901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094999956 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069010385 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069559904 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08683491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083703659 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071239425 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076060628 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078629349 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071079656 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072217573 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070256538 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074548055 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071293023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074243044 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077413207 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085361687 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083813896 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074407355 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070120437 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070457736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075176558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082918058 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075071377 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075615445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07616835 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08515054 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075793282 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070113265 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073797302 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086743869 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073246489 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07342167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069673651 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073886298 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075747208 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077108118 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086822033 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070975435 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075775998 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071099756 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0683206 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083011967 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073469711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078043743 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084351347 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074608308 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071073012 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074920042 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084812806 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07077927 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06973271 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073776987 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082514814 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068583209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075823292 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083375789 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072898752 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078067064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084689401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075537597 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074783582 seconds)
  done (took 6.747559324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081626747 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101141946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088004636 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088676374 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081328196 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.081481125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088960106 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081089666 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080723517 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085286933 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081182563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121325341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.076643995 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083172601 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081539062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081429652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081117756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081687401 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080583046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081483702 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081463677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088239409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081015688 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088348932 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08458633 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076385918 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081122271 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082322643 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088817325 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081024127 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084773329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08031389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080895671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087973427 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084908057 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080396414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070905039 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081451937 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081123272 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081237043 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077375053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088417357 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080902135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076539737 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081555273 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080517675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088209173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086081239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083128451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086107694 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081118215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088815303 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08058149 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081154566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088163901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.09081149 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088334852 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088525008 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081363661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089089417 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088392156 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090771456 seconds)
  done (took 6.596772302 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088697942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079862593 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087641853 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066891337 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070274142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077030366 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069649636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069581511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080141086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079106708 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083096937 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077615825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079940671 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081327751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077979956 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080384837 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077626037 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076637603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079416146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077437097 seconds)
  done (took 2.937100295 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080602124 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089500606 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072609122 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077634727 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074721521 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076873059 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074529716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074530892 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072528134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07457941 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081787009 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081882782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072119557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07683169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081195414 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077233577 seconds)
  done (took 2.608027186 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089404387 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077958483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08556437 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072840915 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072011759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068100417 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070803212 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067062613 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068046044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083427585 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071313901 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081510294 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071372807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07032746 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068706251 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076147154 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067836441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068711453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071553826 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083517409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077511056 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070263031 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0746964 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070889214 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073922701 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075243308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070418988 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071501933 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068431649 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071450417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074719566 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074860258 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068798419 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06887331 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069935578 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06871166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070969563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071572234 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076146225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071327 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070407342 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073474924 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071459588 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072078143 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068023088 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072301048 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06739525 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073028286 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069251811 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073461049 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07115423 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074271943 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071461409 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077444723 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074184248 seconds)
  done (took 5.375029478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08455983 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074852659 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066878469 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070094695 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075072164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073047462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074505113 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07246039 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072276184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069750826 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072800283 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074463452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072522501 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074823498 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072488648 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075557919 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06711398 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072245167 seconds)
  done (took 2.696152568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077030584 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071485102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07882079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071494635 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071137849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073338053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067451443 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070180082 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070660413 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07119913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0716261 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074398114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070272188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073842898 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071057316 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071269432 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074707655 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069919673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071331431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067182255 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073545279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070074887 seconds)
  done (took 2.956184551 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100369925 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088521298 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145306077 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08451126 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089555554 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077581923 seconds)
  done (took 1.962160025 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096420617 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106463916 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07179537 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074643013 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081536123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075157214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075440543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075826832 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083741893 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081827473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075556132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083979148 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083666004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082728236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081060959 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080804194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075393063 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075230665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071957267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08848598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076133709 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083701385 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07511092 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076042038 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075191101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082688975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083096903 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081721027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075089738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083927258 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080696275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07562903 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083749478 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081181953 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075572526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084286412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07584681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088732412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08100344 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082666011 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074739138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081727516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083173581 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079838883 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083665991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076130026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08021991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075332314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076026068 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091326524 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081589151 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083147698 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081035575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083715276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084116389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091576504 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081539114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083175687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081896484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081073222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083089605 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080881664 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083149402 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080991553 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081366007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082781404 seconds)
  done (took 6.729125077 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108987973 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072669594 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07658684 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081580086 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085756973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075511517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075343777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075508204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075784588 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072722804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11295425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075565484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082770766 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082698542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07612689 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075087909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075724275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082712031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073078788 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091042475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075533164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0829113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083155296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082966913 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081794374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081172755 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07543666 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075751169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075281649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076228895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079601251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076207078 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082660916 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072027123 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082498648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07591904 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075321623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080027342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07590889 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080946561 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08335647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088605205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075774733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075572603 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081744788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075936453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075587102 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0723413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075394887 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072220279 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081871936 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081594315 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081803189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082751289 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075590421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07574881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076343405 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076021462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076065777 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081500678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083239945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076319059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090989104 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076321604 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076540289 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082808687 seconds)
  done (took 6.645349539 seconds)
done (took 138.17537217 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190136062 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169639352 seconds)
  done (took 1.730323566 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074445114 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103764859 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083785598 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135029374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071358308 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10590271 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104865055 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083885787 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071678968 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07118526 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071396899 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074986415 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136298727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072799039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072435454 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074008485 seconds)
  done (took 2.791625403 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105463324 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169373407 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106783624 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071603549 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105522978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078182277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070291496 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080350762 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076413156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071665868 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078363201 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07637465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070914625 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076471964 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076385066 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077900723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070849797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078364311 seconds)
  done (took 2.928043316 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104511089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097138949 seconds)
  done (took 1.59533821 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164338433 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110827917 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15200439 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35499593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166042592 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154715376 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150495498 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.150359222 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119393739 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145612635 seconds)
  done (took 3.055890538 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105968872 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159851453 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274610297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123838215 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078830235 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099824287 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125239191 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08415634 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087016316 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086730108 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085896052 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082475589 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105430205 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0796623 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080394758 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082139363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109256249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079593827 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080873997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082109533 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106987482 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071611316 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079339066 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079227125 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082753645 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082498458 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071656679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070948306 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081705968 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080383063 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081669023 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098225633 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083142818 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110573779 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077376005 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11236624 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082675205 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08136069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080528405 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079240338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083687232 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083982372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078542514 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082211293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071422763 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081972168 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071381612 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072588977 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083020392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073623593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083612495 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082175656 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111796705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072989756 seconds)
  done (took 6.334497547 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108361383 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113992862 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077018008 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118186277 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108493515 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078362454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108819529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102046247 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109943747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076285697 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074523771 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076629311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087440059 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088417404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120545786 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11249847 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079606892 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077841843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112097241 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111349237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074798341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102692619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096889263 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10998588 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073476177 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076283834 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073545116 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076108041 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082793337 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084225635 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075853921 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085809342 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090358533 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083494488 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072960139 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07369799 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07374238 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086061636 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085401141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084763485 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083675269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07450692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073843711 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075516102 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076265789 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074016795 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084662339 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085903123 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084477595 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075998481 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076899863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073941544 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075535206 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086684443 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08337729 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086346395 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085174895 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074095613 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074375451 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079018181 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086241915 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085716355 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085058686 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076227659 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084908478 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074288925 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08547208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090007812 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074232487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076245513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074364918 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075826108 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07533268 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083225227 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083806845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076274816 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075859964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07391042 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086088628 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084501985 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074523122 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082640058 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073703294 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074730075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075303045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075720919 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082218559 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084875833 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075211024 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073830474 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074647673 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074343926 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072694572 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080209954 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083617264 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083241316 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083728955 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074339189 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.212671169 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085230279 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076185671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086296902 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07555414 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076093919 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075804828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084543067 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084136228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084721457 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076207244 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075021931 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084645171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087421436 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07449056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085287952 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08639417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085136797 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074926898 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087310408 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07397766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085225981 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075998613 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08544327 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074756561 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085343259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07476652 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073968287 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075450293 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08510151 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076220138 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074824477 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075210761 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076129981 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085202194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088007474 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079613451 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085137746 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084303173 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075893647 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085394951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075105367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085409201 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076007216 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076179066 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073052339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08773586 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075421404 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07493632 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074864992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086148105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074422539 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085912556 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083678617 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073891265 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087083554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086597286 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082871515 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085809032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077013399 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075679502 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073852545 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074454979 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084438455 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085055113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076318501 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074274361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083311589 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084404788 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073225119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083699824 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083716445 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083918709 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074236691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075276564 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085943246 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086445712 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083519436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083771687 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083928856 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07453109 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083487872 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084379325 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074402069 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091120075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074240248 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089117149 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084562685 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081913521 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083326666 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085488911 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084752513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084967326 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086928801 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07281845 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072739961 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083054099 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073283261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074113718 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.08168923 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.206363326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075873129 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.090049341 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075683056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08620924 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075564884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086452572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074174339 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076837479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090699954 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074754903 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075857294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086112825 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076020975 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084567856 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087500721 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084334293 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074673291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076880055 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08585603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08454529 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074266053 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075100284 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076408398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084894594 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083931923 seconds)
  done (took 20.022164753 seconds)
done (took 39.854163534 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215269801 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158089794 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18848075 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123631305 seconds)
  done (took 2.17328637 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122000872 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106993738 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097801263 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071639831 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104751993 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070562549 seconds)
  done (took 2.002560071 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314970551 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216058622 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193197517 seconds)
  done (took 2.1480251 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205902096 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193919715 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425112107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26728385 seconds)
  done (took 2.626054963 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149297269 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093999588 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073240972 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.09053651 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138832925 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165586443 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105447506 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131138728 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085060299 seconds)
  done (took 2.51469284 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155093534 seconds)
done (took 13.0452496 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131981615 seconds)
    (2/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.190388354 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.195240242 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108014522 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122274256 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.246145621 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079961285 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077710133 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119270269 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085383448 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.084281044 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23582457 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.206408319 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0795455 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08401202 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099198614 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086427606 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109437851 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106959134 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.082539946 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169660575 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1714467 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179734959 seconds)
    (24/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.089145929 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197691521 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076183494 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.127323871 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12082475 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114622658 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077756359 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10728422 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096527456 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081844441 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.236624322 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078297794 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.152593086 seconds)
    (37/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087311857 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079361115 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079416447 seconds)
    (40/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091827274 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197184498 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.160769798 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081603729 seconds)
    (44/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081718907 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082393501 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10024866 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115051296 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.225136243 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078089381 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160372764 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073008239 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167350923 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083281774 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056496516 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.104634496 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069947872 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109980937 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082597 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072295123 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.123155489 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068388868 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098180759 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168345323 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094882899 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071541347 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.399675333 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143733667 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057997565 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182327399 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093988987 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193374009 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169411524 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097204972 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.115329234 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.072064987 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05642493 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158511178 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078204199 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078734542 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078913003 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077166852 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.215119721 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099750841 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078408067 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08441126 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.1683653 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.094557383 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163160319 seconds)
    (89/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.12820341 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.223108091 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083195563 seconds)
    (92/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078613299 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08299695 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072230287 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080074878 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07170959 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081980925 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.161320821 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081718061 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183193843 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059206156 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072320532 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092361411 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206769813 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058166574 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150974553 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191935474 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072581721 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162995102 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206388425 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080697931 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08104845 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057241714 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.082884936 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07955379 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201569668 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057376218 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057827429 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080924377 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071680997 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097043514 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187684749 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.142124762 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079232116 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078678405 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071229024 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078696661 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072488686 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056442619 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077294678 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072260765 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138300519 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078283322 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14306333 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187721237 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.167030883 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095978216 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068000682 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094818646 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072107151 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110091322 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069074063 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126915021 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07801016 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203176501 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071606896 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077525998 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 0.135968656 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056710539 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.056701871 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096732746 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070299237 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057426237 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071461319 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077555449 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079379081 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200765872 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077898 seconds)
    (159/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161659893 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078775193 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067852681 seconds)
    (162/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107706969 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124316236 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079345402 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097412742 seconds)
    (166/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07374933 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072096606 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072239496 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056815245 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056192267 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056188378 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058808013 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072732564 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086955401 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093410762 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056936389 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167663774 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123731988 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057302337 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074855988 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070602842 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056385754 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071068937 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.321363716 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058685216 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07304789 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081819236 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079083216 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058622362 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083197849 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059593264 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07942901 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103398919 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057935952 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058686155 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058018531 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081880031 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163685404 seconds)
    (199/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120277873 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05885011 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058166183 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058186793 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078197566 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076538244 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074584211 seconds)
    (206/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08028152 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068369053 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153576703 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070853248 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071099237 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056623925 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097163732 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07226351 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151800014 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078048197 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073682452 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056950732 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072402501 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080603245 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078547204 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178979871 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058049149 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086860291 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.077379778 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145008363 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185358728 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056945813 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0721226 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10147321 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097608504 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077519793 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056525862 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071191804 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07139958 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070758173 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189411186 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057005566 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.07150649 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148464667 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076106392 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119597929 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080319567 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071288206 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07457704 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071702708 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086554369 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057645261 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189424412 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087170296 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09501979 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056689493 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17796901 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126369617 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074354185 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071906883 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095227245 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077988881 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070863331 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070957658 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057630763 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07401246 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125420176 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147696907 seconds)
    (264/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06706165 seconds)
    (265/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072955469 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075166334 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078134507 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102900983 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057293203 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079576337 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.078812356 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101684572 seconds)
    (273/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.106573528 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068033375 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087639446 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119767083 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07105189 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059045958 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 0.137655538 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09660372 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146671215 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056279333 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057559092 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059014826 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057908962 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080180478 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057234382 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069411844 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056880234 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 0.145630387 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069756666 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056157773 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133643346 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077989441 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077698275 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077228043 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095723805 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056371609 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076230424 seconds)
    (300/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05682997 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075369483 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.251550811 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059644593 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078546599 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060601956 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09881811 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058659865 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058597599 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075346331 seconds)
  done (took 33.020850143 seconds)
done (took 34.463890215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088323183 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098336655 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080584959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099341871 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086942931 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082013352 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078106256 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083817687 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086343776 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087756202 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084571108 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060438155 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080183509 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08312436 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080789764 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097017555 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084133986 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078979302 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079133985 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070742525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078695708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071138186 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072769901 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060156088 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084818444 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077585446 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077396979 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079506065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071008307 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071726269 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074131277 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07956432 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071059068 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084094735 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077941889 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079466794 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080669078 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08233901 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07334096 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071508199 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079897155 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070938484 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078590799 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079452948 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077524033 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076984946 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078666398 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083644997 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096990336 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073343067 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080626015 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082062599 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081255415 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078569533 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075623944 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079351051 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076348211 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09678146 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079866046 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073328033 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080504133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080253582 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077161034 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079006869 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078677982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08079566 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081577308 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07713064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080577887 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077487575 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071059484 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079343953 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075165945 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072334251 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081489288 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083474337 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070196709 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077242658 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078875713 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076415755 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070040007 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072973035 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072792177 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077546678 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073207306 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059637262 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075037847 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077676201 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069623705 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079586572 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078292756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078183823 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073309048 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081646882 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070623283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076772647 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071757912 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071827491 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072758468 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075381567 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070783693 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072847912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080935297 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072310502 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077502982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084758352 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07037185 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0781246 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069880362 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070112126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085038617 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079609229 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070542677 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0728328 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069719873 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077482173 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069160569 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070208615 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070885143 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070435148 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07598692 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070137046 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207634825 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080164531 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.085758919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071905651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07547102 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072876923 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071223486 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078100066 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07210017 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072068881 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07378692 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067647489 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07424499 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072154721 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079915152 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073369063 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080013997 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072987598 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07949804 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076651751 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077807832 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077720001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070443166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065321134 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073697872 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073185783 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073216404 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071136417 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073587425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072308216 seconds)
done (took 13.347133575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072479397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146601744 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103268763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1009551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091272932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072340797 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081914773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106626793 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073416386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106919937 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09309876 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091306944 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122142744 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069903269 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071317551 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075883658 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072776112 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08718623 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106742939 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092550236 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120606655 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070783229 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098225712 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094670295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093542822 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108489818 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072327681 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075240216 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075114933 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098257498 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094361603 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076364659 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072602433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103674921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099461311 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089577591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071996456 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08896666 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072356129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071403343 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072779793 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104431009 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086257569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086623266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07531373 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074896191 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072519937 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089083177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095385611 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084758514 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091694158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106979592 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074748942 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.070987148 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070744053 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091876669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.070805178 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074519082 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071580049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07472258 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071702263 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075346829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086594767 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086534521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07634233 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085025517 seconds)
  done (took 7.207050527 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089882806 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098702699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089025326 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089026704 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071319956 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.07195315 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071599258 seconds)
  done (took 2.113944007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07298919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093590011 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09535307 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09478494 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088096513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096759793 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081924666 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071854071 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097794855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073115682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093412075 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105888643 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075495958 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.0856302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095792658 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071802976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096660939 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072249464 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075239537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096231168 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078237345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101463669 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079828599 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072381586 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086132312 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072572155 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119185952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076485704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073988562 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075215775 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073227653 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113043608 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08592205 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080870188 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072103318 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087059949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086574189 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074724522 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084693403 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08072697 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086322507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072961108 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073096642 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074525688 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076745701 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082592284 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073586323 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076270823 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075148401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092889601 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070922704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085941294 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074957981 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078486447 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074300587 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078856953 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083058451 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073047219 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092330756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074583726 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08937679 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088204248 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085880283 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089045854 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074955495 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086089482 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086503105 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074903155 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074700256 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075805803 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089203677 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07053244 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073777588 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.083223725 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075006316 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095510586 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095739933 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074530036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085737837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073116606 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072969883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072987691 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095550381 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077805515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072325837 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076962228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075964463 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075291347 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071441894 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07897296 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069970352 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078004909 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075175874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075330148 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075254026 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089182292 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074812685 seconds)
  done (took 9.450683636 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074043077 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074138745 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075296283 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073721022 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073689551 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074012579 seconds)
  done (took 2.000734676 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099004522 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075338134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086614917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077767678 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110002415 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092694487 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092687028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083581613 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089772867 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084121609 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.092917773 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.094220119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.097306414 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077780628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091837944 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07762463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092632416 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080722561 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083704001 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078510485 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092202486 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077976045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078695927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087985846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.081287129 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077623403 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073229137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084276337 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083943796 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083530756 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077636356 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081466473 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076165268 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083993662 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092476322 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075395375 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077008378 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082768924 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077773063 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081084082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094551846 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077928487 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079570434 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082728923 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083246991 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076628984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085181043 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081319898 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091966865 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083695038 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082316302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076770652 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081094552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082936536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076004244 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082964775 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083409128 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.093221667 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077730256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076594228 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074882751 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.081948411 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083291525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081601376 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083641585 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082779042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075822857 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077893742 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078339418 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076712304 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08300116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073933203 seconds)
  done (took 7.521298844 seconds)
done (took 29.815505701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536756677 seconds)
  done (took 2.05590234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614293319 seconds)
  done (took 2.158600303 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.49781128 seconds)
  done (took 8.04435451 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.410638101 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.519284681 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.734979118 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138474363 seconds)
  done (took 3.395142291 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706213099 seconds)
  done (took 2.258082247 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.221838156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.209999188 seconds)
  done (took 1.992307932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381611183 seconds)
  done (took 1.921652896 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138815249 seconds)
  done (took 2.679087106 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261361998 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181380419 seconds)
  done (took 1.994331934 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482426069 seconds)
  done (took 2.030481866 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.940872319 seconds)
  done (took 6.491936241 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226713156 seconds)
  done (took 1.820068951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240083082 seconds)
  done (took 1.792532849 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.740075059 seconds)
  done (took 3.294593872 seconds)
done (took 43.479694103 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085739047 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087314936 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086626409 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08479198 seconds)
  done (took 1.88307649 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082518167 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078333812 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081909703 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078848007 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081719724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078414288 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080020233 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081910664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077555045 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078343895 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078063286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078774044 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080593819 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080283888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077357258 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080585239 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081601978 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078711235 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081696356 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078349827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076623216 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080382905 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08260022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077398773 seconds)
  done (took 3.46705209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08295506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078070532 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079990666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07742263 seconds)
  done (took 1.880360848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083531953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098136077 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094371561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084405419 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097999499 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.092390609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0749864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074245937 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076332922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084103723 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073689902 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102592206 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.094582107 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083061512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086364782 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072525415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07380772 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093601237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083603467 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084012005 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075771803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083184062 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073642435 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095183132 seconds)
  done (took 3.594453582 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091614294 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110250054 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086516073 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095501568 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096102883 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070808178 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093740859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096637804 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132240442 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071077029 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076200067 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071405329 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079127074 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071672619 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086821867 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114004326 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117992908 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074672301 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102895638 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070966238 seconds)
  done (took 3.377225887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078252963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075475461 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071518265 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074521043 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082704366 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078246197 seconds)
  done (took 2.029608837 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073587987 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073648325 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072994923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072176152 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07830555 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072498922 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071320684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073794525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073289955 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073812345 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072790657 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071921939 seconds)
  done (took 2.444514767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207093144 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073526685 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074798602 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071177373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076152675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072383004 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086676736 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073087238 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098664021 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073418049 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072536247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074512912 seconds)
  done (took 2.618749519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211996036 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081540638 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245235577 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156044058 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115713505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121883003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11820901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120675007 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147068955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106477499 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174319731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173265109 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113532316 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143504569 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094688185 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106299717 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163842619 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169258399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111633984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172373095 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150443365 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132175157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154077728 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107958952 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113830535 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127559288 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077708605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085507289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174678147 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138786583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149292585 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116501307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097442732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182565044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177655828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145008208 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152279979 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090486645 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111154419 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138864557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203828575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093379804 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307484018 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116781096 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089193789 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139372713 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125297733 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127723876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110369878 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095387212 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151682476 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190547652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142654617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093411396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12946334 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118944913 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120776059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118843652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187191 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167785625 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134169491 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077267773 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113785011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159958574 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140073826 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113132179 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12995758 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097946706 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140487629 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16085857 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126286843 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150321757 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121808035 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095053467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124462085 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146115346 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13247456 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16622433 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129378079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078284251 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130062885 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107004905 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085340969 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.151102725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080145799 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179985713 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104287839 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113972604 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130265412 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114455589 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113105777 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307405371 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153268828 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109567995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072956361 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11100973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126632574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152464767 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092428491 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115893561 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12428979 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083344619 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142916743 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081424721 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128329974 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082923763 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130277519 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135774452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082618167 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127428742 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110109353 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107797509 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138883021 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166475722 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094856697 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088072028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174934041 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129010612 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107876114 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150472117 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161720795 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107089355 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105987318 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154683775 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184824756 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095062016 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1684145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112231701 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088725273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093278308 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131090198 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116958581 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129049062 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087122511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122550171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172726368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080065687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100298541 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138233429 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083146875 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086192471 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109239901 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109711356 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100111348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104636524 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.252471108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142964963 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130330984 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112254601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131517574 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105159282 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178319861 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094270527 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107410374 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110107955 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07588265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.143142194 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163630241 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084231103 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168449385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128952145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123600696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124603633 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088840868 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145170298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084785306 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076445981 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148927754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116250142 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11533946 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156001624 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121209876 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130512741 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122834948 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138589976 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136025396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134515154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110238814 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.094163087 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117176892 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130995314 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078816232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096642143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085546991 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109380497 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101016942 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088068045 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146015635 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1293236 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114356116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116626063 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100913481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151430209 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08056229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132148559 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124332202 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100266388 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15567841 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301596116 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139002639 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105406033 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14294154 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076045114 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080136128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093822866 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129357643 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089340656 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087960496 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121084752 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1534722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135495616 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14092729 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12937277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125373004 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161446299 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075317468 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123834329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152708717 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129256549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110159922 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095919638 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105022128 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148566046 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112658911 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186857067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119260433 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128698137 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158040407 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106334385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084921434 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107939943 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140563448 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109192559 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148926247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104764498 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093998152 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114878421 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080054885 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103517604 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131949554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123334668 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139567367 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120813809 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136532026 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082460441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119315786 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12556065 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125424903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068944764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124165563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31104915 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100822566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125314959 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160935189 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08459557 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139748097 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18070233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151622078 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089886939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115371466 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124233748 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133316247 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12539473 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145711438 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112788512 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14256412 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115284751 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09094386 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093024191 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103358569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109797757 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100072481 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111297983 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11879381 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100803444 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136944483 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108398551 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115484166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12287634 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103428275 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096459405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101308268 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182640933 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123044047 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174772671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104631649 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149057216 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168549722 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080107579 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085161313 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083844026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146210283 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090047666 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134431542 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111576521 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122618382 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127832522 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14646236 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10060659 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073283403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113313949 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135702748 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273143417 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104261167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109652225 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169277167 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106413939 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084663359 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119243171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122977486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108800777 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180481849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066891469 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112557908 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082055071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086030113 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134230788 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158425655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085724101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108952559 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125540051 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117160227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132788235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10514115 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113890729 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131664931 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155409302 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13371446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094629991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117143142 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133411682 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162363222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110063055 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10181005 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177535223 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157216785 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165385952 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092874118 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119655449 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11988198 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11460673 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14431968 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089539225 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169035827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087369545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145416828 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107866072 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093467013 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13316258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112987786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093704346 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151359568 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266443331 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088786708 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083506398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123846554 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12474018 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112664696 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080739052 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144986694 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078647976 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137802732 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166871649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086511343 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110301965 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103213742 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085148275 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112310468 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107581635 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093355326 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.105043455 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177757832 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093150873 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155032715 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137867927 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117603351 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140482808 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107747005 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644506236 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082528807 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15727383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121456694 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182135588 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10551412 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122575208 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11473442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126946411 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149096211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108549603 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.185107828 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136698411 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120776701 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085035273 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107826507 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109063483 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092401851 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113128202 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119160423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119361075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097079963 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120515248 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129121094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087379906 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100171647 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159905577 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267485357 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150701248 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146966127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091543098 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126802111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143601941 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086504439 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125861006 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157471711 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112646309 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105144021 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086268462 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105252949 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165026378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078669029 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165604984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126356626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116960722 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119117781 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118076094 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136716564 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113790448 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126898713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096786615 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115006859 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118347832 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087607221 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082164589 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109935261 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115649266 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104163334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102855445 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103648995 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156747079 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077804599 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10333645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120473887 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148666889 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180477066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09424678 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087941433 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123557885 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119453197 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117143991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126504774 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083635541 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086872317 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085233498 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083586448 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11311257 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116999649 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118801093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114485262 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314882648 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088178528 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.235825991 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102032233 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110464934 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075272674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.084829448 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100878208 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103508496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112939455 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116365977 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165618722 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100516161 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094669348 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096279847 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079915697 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089097083 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134146229 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116053632 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122516789 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104582464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067711739 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113498761 seconds)
  done (took 61.710863455 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113359772 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088145009 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099167052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148755547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128074188 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207483228 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159395272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194881054 seconds)
  done (took 2.804534054 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073315241 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100709795 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107139791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088149663 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073378932 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074252377 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236621069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086950304 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071629353 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103908313 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083651705 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073830727 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430965679 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071835812 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073037345 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067536951 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073092863 seconds)
  done (took 3.543684585 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392530989 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618274155 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356857421 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077770832 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.909821954 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092785707 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.135678106 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136022456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079453887 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544099461 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412604709 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130725629 seconds)
  done (took 18.548470207 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081975648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076505238 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090435443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088838093 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078440807 seconds)
  done (took 2.072348729 seconds)
done (took 111.565689 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087802625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.619026919 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058612019 seconds)
  done (took 2.364437167 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088746207 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090876768 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090808789 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08905374 seconds)
  done (took 2.022077263 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079898603 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082906316 seconds)
  done (took 1.821179186 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237148686 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168611908 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101049956 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08876069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084901148 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084123079 seconds)
  done (took 1.924200139 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078003995 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079904771 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078150476 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081272496 seconds)
  done (took 1.974984144 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082101279 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058022838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060042866 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063039558 seconds)
  done (took 1.924171122 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092040786 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085287422 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084138291 seconds)
  done (took 1.921904924 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107754601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091778944 seconds)
  done (took 1.858264319 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086658322 seconds)
  done (took 1.747666001 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100064081 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107201252 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136971736 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116382828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144328259 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114155868 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089266908 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090994801 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082152165 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092293405 seconds)
  done (took 2.732534979 seconds)
done (took 22.542609555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084410609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373565086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365764212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095514481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674895174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361303239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033778598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097583446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120563811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0731751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089141296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654741032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024144417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327934839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014285114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328297084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655448489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07393097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073978023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073014394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017963044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072743008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072574046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073922604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653405926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377736137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090064941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324042144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074077069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075291194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360057428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073175337 seconds)
  done (took 16.500255645 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075092886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125606047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078724162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090468887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076387867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074540644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076890802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074331885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12560706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076382901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090661007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073380271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077836303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073870565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093422417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073769888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073878172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074420933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073828071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07451397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093263079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073708563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074080412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073965138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07403724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085710662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073472779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0736163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074424591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07570775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076357064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074292286 seconds)
  done (took 4.248065017 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120956746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130668845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078996147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108651075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116320323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075418673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149328336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098609161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132251048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073944912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090349486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07374703 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107544742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074104426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093827068 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073980173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073856537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073676901 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073277631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073865755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093574313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073213215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074425009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073889183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07353362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087931073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074443938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073793023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073883325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075485134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076758374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074516888 seconds)
  done (took 4.497839425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079083924 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080698002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088104385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089794528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074389982 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076952804 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078942457 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075609715 seconds)
  done (took 2.322576286 seconds)
done (took 29.235194463 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085331612 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074050189 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078535762 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088625877 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078544901 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084428033 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073218131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080991093 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077742298 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079280063 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080188778 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073655817 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077111637 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072643034 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079871011 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074618787 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085053368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077374833 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085442832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085347924 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07527259 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078390274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080560503 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084910533 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085401931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084055754 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082559296 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078313258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074514229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075970011 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083044269 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089996081 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074605741 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084544138 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072899593 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07305043 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076580474 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073169242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084159727 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081914943 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07527683 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081660835 seconds)
  done (took 4.993220939 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093632488 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097983865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089797209 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067416811 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072360163 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07122438 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09401801 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065822328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064857085 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093203313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061562069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065443824 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068742812 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058882224 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066043018 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061852297 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06766098 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06099205 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.065868667 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065679696 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094633382 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059276554 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084255676 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068565915 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061693687 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067558494 seconds)
  done (took 3.578229856 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081264848 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091221207 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094875081 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136913274 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111870448 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084505289 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084643448 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100747629 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09406181 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07222775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076487632 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098951066 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095385131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079315543 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07301023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091782092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089770453 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074547656 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0813366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100016198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092004538 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091776707 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10157492 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088405893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072415058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075211384 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076436241 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087871685 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077789844 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085204045 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076705686 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076716286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074857651 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084570069 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0772369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074694298 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097402314 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08311337 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083992649 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073507148 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081408645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07397121 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098158749 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132208789 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072083726 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080025875 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077286277 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083309387 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072730797 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093784278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083894726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072525459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076584418 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072045401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073652611 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086926993 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075922 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075538392 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082414096 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079035296 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098053947 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07873379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088994346 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072683959 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080372609 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072259518 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073689633 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072011459 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101098362 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075307926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11601699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074328419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074158725 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082719262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080961473 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079134739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074017164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088185203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083521295 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077116558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082672237 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075775388 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075924123 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09729895 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075589724 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074868462 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074475665 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078643149 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075679098 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074099458 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086403941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.083433538 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076131385 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090281168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073458314 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075242144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079259904 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078052931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072984137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084784727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078543094 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07455868 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082907051 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072910013 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075886018 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086339915 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079622258 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071552352 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076674057 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07844231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073679891 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074623365 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075358447 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074484903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081061276 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079819946 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077401497 seconds)
  done (took 11.339917938 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171660121 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165859105 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075889847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15444242 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08234875 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084916584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15783766 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100736857 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073401397 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073852731 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074693178 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118835643 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112212494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122109591 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083946491 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073079415 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090465303 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120420864 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158262612 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153188087 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090614341 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082565864 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076092458 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074367194 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076260061 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084571089 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09214458 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082808436 seconds)
  done (took 4.627630152 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086120053 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110882015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080476059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097815907 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095139506 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072951036 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075243649 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074746844 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086544789 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08321479 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073125507 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078637883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08041612 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076634405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074588735 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080079623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08035361 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074710204 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077018459 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078552054 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084089436 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097362652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077188862 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074752603 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078924149 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072759169 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068953588 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089611632 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07434319 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101246783 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071035862 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078990273 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088297187 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074937996 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073310058 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073781942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073321521 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073639692 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075432783 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07207123 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071709336 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062858546 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072656916 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084116418 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080229409 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062213501 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078078078 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079191084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0781926 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071034124 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07625246 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0764186 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076152922 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081259454 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077355465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078533137 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074618887 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079747696 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082813172 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072738253 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070216253 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072159736 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078565879 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070370429 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08179128 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078193217 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072266721 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073029948 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075523902 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080560812 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07282357 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078254704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070614972 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074977773 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07739656 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075361158 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074226083 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072264015 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073429163 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073777109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060765792 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072893017 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05876636 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076665226 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071566781 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072822505 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073585178 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07789054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084823632 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074798797 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079275858 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074140037 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072199596 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076946788 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065978503 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076406839 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084982995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088006648 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073149724 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071213751 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087686051 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078350789 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072988144 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061845979 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077922788 seconds)
  done (took 9.796219703 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096207945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075384456 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089906494 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096707602 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09287121 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.081352471 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082792393 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075099782 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088898848 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080128176 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082516632 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073765803 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083655731 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082675696 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075655312 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08372936 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077306299 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.09034233 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088178006 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073876982 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082117519 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085773206 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095903952 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.088678483 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086616661 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088208458 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096194838 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083272582 seconds)
  done (took 4.104872013 seconds)
done (took 40.111201603 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.795356594 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.948945536 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.764378464 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136924749 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.921496538 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.875900855 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.860535165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.759174816 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.118347169 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800194574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.964761216 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.857537687 seconds)
done (took 65.626010175 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856250838 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.901471461 seconds)
    (2/2) benchmarking "String"...
    done (took 1.999496956 seconds)
  done (took 5.59175492 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.013898422 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.307495241 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.000443181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.753107589 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.760937475 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.085101893 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552289594 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2590625 seconds)
  done (took 30.402455385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.828267954 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.983650486 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.413820391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.44412635 seconds)
  done (took 15.403109624 seconds)
done (took 63.045077882 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.780909119 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810808725 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.791147835 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.733834198 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.812278774 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.774323484 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.085301898 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.780477983 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.755603449 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.740899753 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74765067 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.175649179 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747229756 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.144658521 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744902032 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.746057214 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.786104769 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.273927764 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896545262 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.751626932 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.74983112 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.753406343 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.741660818 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.889887508 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.756654851 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.740751767 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18260754 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.741339133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.353061188 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.73786094 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773291549 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.75836596 seconds)
  done (took 202.940080438 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738582098 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.747931152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.761175778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.741773216 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.142043573 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.920347205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.854727662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.154874021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74083339 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.747785094 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.967220229 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.738033472 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978347408 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.685393789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.763880387 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.74668485 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.9237876 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.979984505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.767062905 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.90810723 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759609753 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.845039575 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.773756405 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.929960896 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.73998399 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.746832632 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.765954726 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.7438445 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.924728454 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.895710717 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.752428414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.747027156 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.938612645 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.606025005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.755123952 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.761113479 seconds)
  done (took 168.367265721 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.902899535 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.734521558 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.733999203 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.734426476 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.740705901 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741069412 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.856940348 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866050667 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.352634589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.53135426 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782706321 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555829286 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.732788999 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801180575 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747561682 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734772451 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749358939 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.761423262 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735087142 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.737614452 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859914606 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.745121241 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.754419516 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740663556 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.733387913 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744941731 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.106888296 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733631575 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738753469 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.978887962 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.736179217 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734276243 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623971568 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.937822293 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820886468 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736501987 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740222349 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.736076981 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954761258 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734375737 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.738905598 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.734128555 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.737624979 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896695499 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.736528963 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.857922687 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736671367 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.232358076 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.735250831 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.735625391 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.603417688 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.401582228 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.735151145 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735441647 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.739498547 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.735040877 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736842826 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.740366427 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.49859823 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809287537 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.735068518 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.73788198 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739206707 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.735500348 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.822979987 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737245685 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.778184704 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.792826936 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.973968837 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858354291 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739815769 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80480257 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829084663 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.735650899 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.736137776 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.734849277 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741428128 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.735550355 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.817258595 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.736883656 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.862241528 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743765148 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.738246248 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78816572 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.736068573 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.804661974 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.735606176 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.736981387 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623388887 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.73856302 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.743552915 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04245145 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80406893 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.736852781 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.738266146 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73696518 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861307564 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859169829 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.519378428 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.738853718 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.42766117 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.943882447 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.947107652 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743660312 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.005228599 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.742997848 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836772078 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74939484 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.746110047 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747689432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778534177 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743539643 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803532193 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742594785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.11617664 seconds)
  done (took 398.968571292 seconds)
done (took 773.919450682 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403910817 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.376402563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.482167586 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.390162731 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.366092794 seconds)
  done (took 13.693085919 seconds)
done (took 15.367985983 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.8364083 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.837091069 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767289806 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.833385862 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765338186 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.835923899 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826021322 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.771082817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80237144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.771706419 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803084943 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771870023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754937082 seconds)
  done (took 25.051465723 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969287858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982855162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816069368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979198648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793807274 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970885056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.9119475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895604656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90763301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763745703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757543328 seconds)
  done (took 22.425201185 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9784782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982314408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.824063238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.982515282 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797421121 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982044051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913658931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.920205308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898323467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761750773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759043717 seconds)
  done (took 22.476726499 seconds)
done (took 71.630118225 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.753570736 seconds)
  done (took 3.431139269 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780889046 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.936403848 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761755667 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758738728 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755081166 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755032371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.757909938 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.753806046 seconds)
  done (took 15.938991154 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751051138 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.749308838 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.75237792 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753525896 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.755100228 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755265406 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.75124631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.753073443 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.754838336 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.7510787 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75105105 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.752990411 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750746224 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754499801 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.750881582 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.756057232 seconds)
  done (took 29.722191252 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.760575102 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753096641 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753042268 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.753308329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.752924181 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.754653421 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.753323823 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75187384 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.751147326 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751564647 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.751910224 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.758615875 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752668274 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752456775 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.753599747 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.754109124 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.752715968 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755586861 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757298715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.752044095 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752193215 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.752285658 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752958582 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.754189649 seconds)
  done (took 43.772466444 seconds)
done (took 94.543689587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.64071763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.141617292 seconds)
  done (took 8.462715608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757415076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.754755623 seconds)
  done (took 5.234617193 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757626503 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.754138887 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.754905085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756319516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755632805 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75613869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758270987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.756441822 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756822606 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754393059 seconds)
  done (took 19.242457466 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.755774309 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.758901641 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.753242274 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755724373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755448792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.754757488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.760872171 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.757861789 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758407139 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.754185945 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756955569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754218888 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756579282 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753297128 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.757291184 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.752485431 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753623269 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.754843524 seconds)
  done (took 33.286468562 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759543174 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757633886 seconds)
  done (took 5.200323988 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756476738 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756370943 seconds)
    (3/7) benchmarking "month"...
    done (took 1.757495072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754757684 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754430818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.75441622 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.754234767 seconds)
  done (took 13.971671331 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761512922 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.920492278 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981447989 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.4125456 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762814891 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761379963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.706301354 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761653394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762636659 seconds)
  done (took 19.514009014 seconds)
done (took 106.595085627 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.575185211 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.75511623 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097323806 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.807838806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.844447298 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.09855894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.767103267 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.054431973 seconds)
done (took 42.681816546 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.823238247 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.286171553 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.330659649 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.20120175 seconds)
  done (took 12.503001902 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.739319288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283848691 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.794983102 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.361829468 seconds)
  done (took 19.88711594 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.121981832 seconds)
    (2/2) benchmarking "read"...
    done (took 2.102424143 seconds)
  done (took 5.915417323 seconds)
done (took 46.815223871 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762143533 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.760935388 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.760066841 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.756945318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.75710288 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761439985 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.757526641 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.755069071 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.759020183 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.760842236 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.761301691 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.759992585 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760876726 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758560478 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759055523 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757437665 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769603441 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758324942 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758353296 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757433748 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75941614 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.756708325 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757940752 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.760539672 seconds)
  done (took 43.912218342 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.764119651 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759702239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.76306983 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761703614 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758832326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.761903994 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760882667 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759488345 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762503476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761040816 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757152998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758336237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762308263 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.760870983 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768284445 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759239563 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761589029 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759993023 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762019939 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762282914 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.762955084 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759843818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.758797303 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761670552 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.759853448 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764931358 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.763802238 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.760561729 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764614241 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761028615 seconds)
  done (took 54.529514045 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.768940409 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.771185434 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.762707003 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762466237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.761565536 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.764306829 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.763213307 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.76549393 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764499747 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.76268606 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.763838158 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.770078613 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763630552 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.762462454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.762706342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.763175838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.763062705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.763731272 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762765229 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.763206407 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.764706268 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765862033 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.768093119 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765279087 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.76375841 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763690876 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.763976415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763037811 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764867532 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.764014502 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765137528 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.764200217 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.765836378 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.766142443 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76709531 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.766193294 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.769593411 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.773221847 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765749662 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767239404 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.763953942 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.763598709 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76456844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.763491077 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.766089217 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.771420078 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76516029 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.765586948 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.767036465 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.766110975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.764756747 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.767425107 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.765473373 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.766502207 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.76427046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764792413 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.767367899 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.76612705 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.766490034 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76677715 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766618922 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765832364 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768823787 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.764898913 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.766203985 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765848851 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765555408 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765420721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768028923 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767481249 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766094479 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767116692 seconds)
  done (took 128.810376332 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.769662661 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76367758 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763246724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761490898 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763213438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.765213634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764902318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764815531 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763740376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767391987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768008301 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765758118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765926348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767638599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766539429 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764053068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.765225462 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766270802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.765958891 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767559739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76557187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764623328 seconds)
  done (took 40.53353215 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77560514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770002601 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766757022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768533261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764984787 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767725945 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768076113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768927781 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766732074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764030769 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765257532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771224216 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765229217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76634938 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766051909 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766008397 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769019956 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768669474 seconds)
  done (took 33.513760601 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.765671358 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.766600859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768570445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764394731 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.768411119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769371631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765565926 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768015962 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.769217756 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767000277 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.770685807 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768150292 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.767717144 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765569257 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767895913 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770015258 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.768936422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768867646 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769399657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768272491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767585147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770504272 seconds)
  done (took 40.59106335 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769005246 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768221304 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766072272 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767059452 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765454432 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.768417391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.770188614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767682987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.771193179 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773891964 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772603591 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771145044 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.766989542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768035583 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.766473226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767899004 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769571424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766625013 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769399701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.769417347 seconds)
  done (took 37.072459631 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773517217 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771550064 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771008406 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771622324 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770347502 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.773762699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772008519 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770803511 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771494094 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771290863 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77253982 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772683066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772871354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772575252 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772784594 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771110785 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778084145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770727851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771591106 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77021187 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772026946 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772720162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772504239 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774303036 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772746519 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772649756 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773698322 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774258674 seconds)
  done (took 51.326101263 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772290967 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772125167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.768939994 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768482437 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.771641328 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.767850779 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770443668 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.769664363 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773568092 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770945994 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.773351875 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.774397219 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771344048 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772593581 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7712386 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.771222044 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774616455 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.768628891 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769515888 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76980637 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.774653683 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772961623 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.774110751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771026019 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770318533 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771585008 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769955966 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771789971 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772821448 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769876589 seconds)
  done (took 54.840654395 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793140837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.79374864 seconds)
  done (took 5.285767651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.772171553 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775047226 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77463408 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770192486 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772180325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.771760688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773122917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769886601 seconds)
  done (took 15.885603915 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.773825439 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.781072261 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779770836 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.775689766 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.775657546 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774922353 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780763571 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775571926 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774770057 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774538887 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.781622324 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781252588 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.777792822 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777227413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.775080213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777247687 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776642109 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.776388197 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77752412 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.776949574 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775655217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776015268 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775102001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.771669926 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.776712656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.78501722 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.783204275 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.775844025 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.776815934 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.781035263 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.776681354 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.774498532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775456625 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.775115912 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775079076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778437285 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78342739 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775510412 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783082249 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777119128 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778321455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.775167367 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.778787111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.77866377 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776654378 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.77703111 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.777824938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.77317459 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775679526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781216725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.782970379 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777118425 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776427271 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781734599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780409958 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784729986 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778312075 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.780676706 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.78684834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.786770265 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.78869629 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78500815 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777774314 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778528172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788805262 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.802198467 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784706342 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774083206 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.77771346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.779207633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783642765 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79083793 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.786644463 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777155521 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777830471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780452917 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779293656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778718849 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785225592 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.781245901 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78236619 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778891364 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.786202445 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800860515 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777758496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779919914 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.779301233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779818691 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780318 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791331711 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.780856306 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.783447087 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.779855663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.78013233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780027657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.779209286 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778037374 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779766914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.775650551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779656332 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780907289 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783099973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.79140566 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782223413 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780794426 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.785640432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.779549363 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778303147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788583586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780394256 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780291483 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780331156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.786194187 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.779467217 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784933692 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790095862 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782019162 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.783248901 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.780477213 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.785607846 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788740294 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806216769 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.780564198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781010441 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785993637 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.795455482 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78316563 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784802023 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782633091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779388196 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.784071187 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.782661479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.780058164 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781331565 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780945275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782516916 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.7806 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785485353 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782564452 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782754044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782970723 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.782623091 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783760497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785262839 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.782160705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784211322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785959147 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.788120946 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.78220443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.783352128 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780726063 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782648852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785429784 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783454369 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.788613372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783293831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.782610476 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.78183193 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.7877331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.781412912 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783507783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782526002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788118663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.783679006 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.787273295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782183269 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780403058 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.782614177 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.783992407 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784000221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.78395846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785062219 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78564905 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791618749 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783061026 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788417918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786119821 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784921317 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783065914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784947855 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.786461603 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792606815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78473988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789012591 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784654937 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783632746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78505415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785011001 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783739735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784096715 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787646244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.792949093 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79674772 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793972507 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786080742 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788568137 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.784910971 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789642285 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.788850284 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784217594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.783852427 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785071867 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783652679 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790661666 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786380843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785700808 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784163302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.786328522 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785443472 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786368654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78708972 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.786102339 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787091124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.783977876 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789959413 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787199783 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786542525 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782958078 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785430165 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786685069 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.78853469 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788279774 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.793673833 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.783535199 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786608053 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789744853 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786698752 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.785119601 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787925063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788459241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786109093 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793349884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787795765 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788212945 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794090821 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789558971 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786265144 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.790175905 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.786895225 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784544162 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789444127 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.793687538 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787966852 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.787459925 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.789158115 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788808179 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787665118 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.792904101 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785943119 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786422945 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.786867877 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.787720676 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.784825571 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.788273809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.78817602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.79277825 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791797445 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788478631 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.790007439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792089567 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.789939966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.787985704 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.786819404 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789846865 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.796188206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792098926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789010058 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791941614 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791748757 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.793359263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790413867 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792020559 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788069019 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801851556 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.796237514 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794342515 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790060612 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787582969 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792886835 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791343981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794579907 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793088144 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790543401 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.789708759 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.788810855 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.786862005 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78941089 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.789307529 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790109233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.789907549 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.792391795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.789853566 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790136564 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.792197688 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789983076 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79014463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.789411314 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.791331395 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.792129365 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792738757 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788438911 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.789540027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794766524 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790631086 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.791313158 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790947075 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790998676 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.789978436 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.792731628 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.793093698 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794358944 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.798214426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.793222168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800447731 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792167947 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799543633 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.790374834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794538219 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798604131 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789692591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.789886518 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.791487626 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.793994249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796365541 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792212645 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.792164986 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.797424215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793178118 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.792998712 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791487296 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.791699765 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793408068 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.791942281 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802240451 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.794083939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798435415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794336101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.79000646 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794016942 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793526524 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792478272 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796887521 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.79332911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.795108257 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792928284 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792501539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793810339 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.793086922 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.796035094 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.78938134 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.793006772 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798643548 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.793826839 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798378263 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797175706 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.801159381 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794767618 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801677629 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794550745 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796206823 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795747434 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.793556721 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.794146833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792190171 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794552641 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.793799536 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.794649512 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.796251701 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795800197 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796940896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794817631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.795633338 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796729855 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80363359 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817751815 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.794719491 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800707611 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790468441 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794669664 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.799249578 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79678763 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795077423 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799726961 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807908979 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80371986 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.795126062 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.794741797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79457546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796767426 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.795255256 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.795625604 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795263367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.79550969 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799145943 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796691288 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79950863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.795482946 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.79731815 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797656091 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799570007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.804113081 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795685796 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796427218 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794456806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796251025 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798104081 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.799221365 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.797282357 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79686416 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798104815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.79620584 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804248481 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.801673667 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799138056 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.793417933 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798277639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.797083459 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.799307364 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79908766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797721166 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798256194 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799615801 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.799629003 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.797121193 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794961009 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.797428303 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796953423 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796494117 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797827349 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805860608 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797956033 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794548037 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797546976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798744661 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.797128741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798900951 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.803665679 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805179943 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.807903309 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806864123 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802676195 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799002168 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803463141 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.808066346 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.798481657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.800409647 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.798785262 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800224824 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800287216 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801953825 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799220396 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.803672194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.798394129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.79864237 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806768346 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802786457 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801905467 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.800591816 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803583882 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799881087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796169417 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.797497906 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.797112011 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804969032 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799792544 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802726234 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802685644 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.798249019 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80153044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805687023 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801084036 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.801308536 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.799691289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.799131518 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799317802 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79953102 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.796974061 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.79850954 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800712852 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.804595335 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809494656 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.799322962 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803937957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802631915 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801704049 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801018832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799212073 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.797780203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798312986 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.800673172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801242461 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.80215119 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804755489 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.805372809 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.803872877 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.804777142 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8011555 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803187543 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814321921 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.809092304 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799787323 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800410061 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.801680363 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80500344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803599678 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.803589267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804210678 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.804207407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.803311411 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801312827 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.80265681 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803929557 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816886685 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801722635 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802428751 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803581319 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807508962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.802690448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.800840375 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.802674823 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804623696 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.804438134 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.811250089 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.802231234 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808224038 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799885524 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804198068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808007536 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806928292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811841249 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.806183106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807997365 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.802996837 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808786977 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.818698146 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.8041555 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812561885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831794953 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803754745 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807884534 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.80449603 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802669064 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.805488815 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806026154 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.806325602 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.803789873 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804280044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804344646 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.806002858 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810790393 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807005463 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.804860651 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.805959452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807159094 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.807463836 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.803704145 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.805916168 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.805103151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804120434 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.804273896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.804811898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804445559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817505209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814438105 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.807130675 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80904252 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804377817 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808884313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.808077011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816577046 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.818908408 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80443673 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.805586524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.806146006 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805815227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.802275629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808666638 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.806708115 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807450565 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.803806736 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.819719241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817645566 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810025976 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.806733712 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807667213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.80675857 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805628747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807015629 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808660088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81498852 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.808053778 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812242655 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.807331449 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807409852 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810822065 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.81333133 seconds)
  done (took 1070.154177092 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803219929 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804850822 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80441953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804891754 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804038062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804303696 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808620685 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805513735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806507207 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809327665 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803980801 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803692668 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81067879 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804741835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804844095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804668403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805797634 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80755164 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805567048 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806536312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805815007 seconds)
  done (took 39.650395496 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.80719739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.805294796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804751091 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806886528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804653623 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806985376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.80660519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808383259 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81002275 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805397363 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809064452 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808086467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.80476156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.805445821 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805137431 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806696034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808252337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804433588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.811402627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807528244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812374883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806343295 seconds)
  done (took 41.488018079 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.810627521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.80963953 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.807984871 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.805732816 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.809508665 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.806447627 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.810347177 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.810700157 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810942028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811066529 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809616777 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.810010536 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.817612428 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.815264513 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811059506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.808630213 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953646058 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.812940843 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809694715 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811595789 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.808177329 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.815859877 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808128608 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.808837764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.810372599 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.811694625 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.810535635 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.809786894 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.811512038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.811585437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.814988278 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809460697 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812855018 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.813920964 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.81139171 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.812517189 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.816700578 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81206 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.809337708 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.811401424 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820261511 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.8303739 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.811136972 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.816760827 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.81255676 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813431436 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.815927576 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.825410551 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.809497162 seconds)
  done (took 90.674087153 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.812590495 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.810396794 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.808827427 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810895126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813487571 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.812253986 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.813918767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813817859 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.809415479 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810394836 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.813679935 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.811717775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810738595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.811893175 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.811744865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.809941948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812108169 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809282964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.810192521 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.810347331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814189116 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814177748 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820114905 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.81256469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813031038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.8093363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810198013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.814229746 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809430648 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.809722577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815791557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814504739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.815790319 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.815601382 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811780366 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.815546859 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.813626877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809919931 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814646558 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.81020682 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.813736653 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81338641 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.813603901 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815397795 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813035077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.813102522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.815843164 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.812291917 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.811554743 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.814008356 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.813368055 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810864624 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813145757 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.811380417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813060129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816194865 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.81302836 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.813020222 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.814852191 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811924566 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.811894365 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814813076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.812151903 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.814422441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.814768215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.810234619 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.810886298 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815453414 seconds)
  done (took 125.001113674 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817018854 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.816519758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816226456 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816423688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816604583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.815363799 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814293501 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.815543842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.816946024 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815434782 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818573085 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818342516 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.817070789 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815867686 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817725934 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817962427 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.816235558 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816292854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816175609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817486212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.816254309 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815808094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818444327 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819435726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818042497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.819429112 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820015607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819319679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819001996 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817578919 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818162366 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.816400858 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81821199 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817521362 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.819525204 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.819109948 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81873726 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81818324 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819165218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.818958926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818330993 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818031284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817515156 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.817554476 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816382054 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818755845 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818561521 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.820707577 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819579706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819672025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.819548896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81919343 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818541076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818244047 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.818362227 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.818576678 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816851329 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818007381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820310143 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.81957315 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823023006 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.821140311 seconds)
  done (took 114.457827795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820285093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819560503 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.818080593 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81696473 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817803612 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816041252 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820632882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.819166133 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820087591 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.820433631 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820803545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82194683 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819225089 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819769766 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820448879 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816934086 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816857785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817202133 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819009066 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81569477 seconds)
  done (took 38.121191816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.820550745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827691743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81772058 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818799711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822105472 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816943985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.819368532 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819976033 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817493219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819975558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821181249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82240205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823524707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819440613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822656028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819776238 seconds)
  done (took 30.875305428 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.81930968 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.826092643 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821091854 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820626027 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817623832 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.818233373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.82189264 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821150649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820258078 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.825963068 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822188163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823290004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.823128835 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.822943728 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.818154099 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.821600729 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.818522485 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.822888869 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.822163737 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.822360418 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.821959422 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.823373558 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823467511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.825084979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.820790279 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.820873094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819334252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.819786937 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820030719 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.822478817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821456672 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.821067233 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.822334937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.822540633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825348938 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.822187187 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.824439321 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.822168941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823256393 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823987343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82272873 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.820512697 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822677013 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.82480468 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.823501782 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824381335 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822110865 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.821911046 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.821581532 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.819838434 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.823243312 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.823080797 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823775482 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.822435558 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.825501329 seconds)
  done (took 101.966453356 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826331548 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825246011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.824814196 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.826227051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824600361 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.823124041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824146118 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82072005 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820439814 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824221786 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822634237 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825666128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822913631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824934089 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823346208 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825961692 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823580127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822741374 seconds)
  done (took 34.580721436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822859418 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822670332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823466878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.82047868 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.823182129 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82617944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823530558 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.826305786 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826868456 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824730661 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823464887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826240925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825423971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823771456 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822407917 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822701796 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.829466527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828692791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.8233367 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823449487 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82732151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827158557 seconds)
  done (took 41.892683706 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.825057687 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.825259152 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841643447 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.847923912 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847031915 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862539406 seconds)
  done (took 12.798421084 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825049363 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827257813 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824960153 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830044066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826807154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823293826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824393923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823024862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826127426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824203015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824246492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833509839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828148545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824272316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828018613 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827365485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827229173 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824029128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824931488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826054924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824681837 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826487252 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825352949 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825522015 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826005522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825879626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827708926 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827526698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824762651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828414199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825967024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823978712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827908647 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827200383 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828480632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829755755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833494915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829283111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83046379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826531695 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829057901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829030052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828711693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824341316 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82869064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825055163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824633998 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825956068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825813319 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831468535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828971301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826654227 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830142559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831201303 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828854529 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831442224 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825577683 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826340663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829903513 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828308205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834341597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829337184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82816237 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82888347 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830544027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827913996 seconds)
  done (took 122.360643236 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827042512 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826251396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825616888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827683407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831377973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827569966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82866605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827199237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828654787 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82916909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831316399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827865906 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826978976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828204802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828068077 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827868763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829750755 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82998534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83700891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835500084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830412903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830054685 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827787526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827260167 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828130289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831493348 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829815907 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828923821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82982847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829966819 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831000265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830932323 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82914515 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829192064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828873875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829913621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829250565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832729724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82752406 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831954695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829944491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83302725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833148563 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83043264 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830106013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829887006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82944339 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829916789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833707462 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829160089 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829186429 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830009694 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830581681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832762017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830961114 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830532904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831739423 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831302294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830734587 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832932459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830777865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829235785 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834125769 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829495937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832255605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833488954 seconds)
  done (took 122.546085933 seconds)
done (took 2494.55766967 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.864635223 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.898562949 seconds)
  done (took 15.520242875 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.9959381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947647984 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831499368 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.88338393 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.831876836 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.851014133 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.84888456 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.834444745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.833370152 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.831629644 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.832518217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.019963162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.887437178 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.83693371 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8326935 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.926764096 seconds)
  done (took 51.786520923 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837629031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.837185433 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.84732065 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.839672626 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.83470362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.84830168 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.870501534 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.841179771 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870858518 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.851044959 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905579586 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.847213359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.840785827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.884443008 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.849728627 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85116168 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.930564371 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.910675185 seconds)
  done (took 35.256985421 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915984674 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.835535989 seconds)
  done (took 10.515676469 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.834270711 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.842910145 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.83361066 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861362602 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.838823368 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.869834991 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.858956132 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.856807256 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.870591822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.847629683 seconds)
  done (took 70.276656316 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.842125007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.837669512 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.837102742 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.834914351 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.8287885 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.83677961 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.835714369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.829396895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515737841 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873807449 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848390135 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843330882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838434398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.840536789 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835111783 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.862019191 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.981988536 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.834417045 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.832409817 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.843058549 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839473018 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902169195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.852446045 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.839447769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.86950608 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.521272186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.845198444 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843075969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.982330906 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837517141 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.836872855 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.838064887 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.841532247 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.214411793 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121620045 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.838032678 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847443764 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.845902771 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.834067664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.989792126 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840231537 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845442599 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.793025152 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.0970872 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.949044548 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884113166 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.226192523 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.841828258 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.839366704 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.870066959 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.842449976 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.841066276 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.854391102 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.354027405 seconds)
  done (took 131.014207583 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833831756 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.098830736 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991704591 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.838568165 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123578247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040958801 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833976235 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882893002 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8368999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066942143 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998120762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945002179 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834726725 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.831412264 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83597725 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.831118935 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995151809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908632394 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836722517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833763404 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866649179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080218458 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961328317 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.834878 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.85911585 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049524473 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965744106 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94511137 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.141339117 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832537741 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902742672 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837294434 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.835997884 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833904987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994516184 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.932221844 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925576362 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.837608985 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834870663 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835416373 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.508799781 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032841705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93317105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.978285243 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089187192 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040448218 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623542703 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.83451976 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.591441668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998311663 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074464166 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.068969616 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960094466 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837055293 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.108417536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836485489 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832832651 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071644943 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065849744 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939550471 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83863664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837828836 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834926677 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086928708 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.839971884 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931812835 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838174747 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837895782 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.933755165 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9431485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069254171 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05312202 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.874558349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.135195592 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.312115398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089178345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908430406 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073423264 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840326925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83699103 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923176453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.688274666 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997302155 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090400286 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093784888 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874954061 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.576746486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.835723823 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068220615 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.063361037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.097503578 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081314591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.991088691 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.04402752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.8374669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.838824484 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.126106129 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975518952 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840980566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201830682 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075855893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.430733294 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869548486 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151253871 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972687307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841356533 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.482061922 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.838438459 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067894499 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884724023 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.840877569 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840248516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.063093043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.828915794 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84619207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.682008533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90165617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843249227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076783897 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843677824 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109193725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844433899 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081146189 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.424732643 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873781043 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01372078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082523103 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.840893543 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112321678 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087683761 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960780005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117136004 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.770319133 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840021176 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134383054 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842606543 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.843465668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.011564429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839612239 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016862467 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.843526917 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132687557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865465021 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996030688 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.8467406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.100401444 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878276375 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895538356 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842721233 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970592457 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840584361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731381599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996522663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844648911 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840749185 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.381673417 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.843624191 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0028267 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07536787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866573567 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91655501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.512631385 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840486665 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929498526 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871212525 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.18921665 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840149129 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.99911561 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.843911203 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.382781961 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841046003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085385237 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081478 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845940445 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842690828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.760894912 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.841420015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844464382 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003566298 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.680983404 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840539187 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049361188 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845599644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97471185 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844110095 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.926279079 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.195838061 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843382014 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841336458 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842519955 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.844181565 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845206299 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054930857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873110212 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.39470661 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.983901207 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118989258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.163493566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096788019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890546256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846758672 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089824933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847309161 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.911716769 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.845312298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86772204 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079769004 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848149642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05696204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.126745821 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.776591747 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892968775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844925581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844060512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.77332874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996556958 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936399573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845268828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.843914433 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963107917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970821811 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.060563025 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.844638606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.000462086 seconds)
  done (took 897.028996746 seconds)
done (took 1213.157436461 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.845862073 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845298517 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.830748373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848090262 seconds)
  done (took 29.141524944 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.854328581 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8518291 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.851582617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.851844643 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.853370466 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.852267829 seconds)
  done (took 12.887166738 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.895292837 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846636362 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845716062 seconds)
  done (took 21.363033649 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.922575918 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255674022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.962934697 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.29184692 seconds)
  done (took 10.207235057 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.854611464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.85383096 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.853633171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.85493387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.855333154 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.858188172 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.856148606 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.856298732 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.856771422 seconds)
  done (took 18.473772967 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.265898557 seconds)
done (took 98.112461249 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.142797272 seconds)
    (2/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.978452741 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.786489463 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.412014748 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.877730332 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.83287671 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.87947472 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.974390641 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.633640891 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.857804214 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.94919736 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322481856 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.840108519 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.286759043 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.863592134 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.74082382 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.519780515 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.236790779 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.175820639 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.935621086 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.848553349 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.004551741 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.148138122 seconds)
    (24/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046242433 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.218175326 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.914933298 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.910186332 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.922347878 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.863953357 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.976819032 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176973632 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.76265928 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.941732075 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.912283238 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.958878026 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.192201785 seconds)
    (37/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.362800252 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.883027699 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.961393013 seconds)
    (40/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.109068775 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138867087 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.021680667 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.658268711 seconds)
    (44/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.038997058 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.848800465 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.888513098 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.107126579 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.839204616 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.069810402 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.936576282 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.91194361 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416590574 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.938555512 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.204415073 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.980481256 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.949349127 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.848982187 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.360186861 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.925082631 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.400436979 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.015117868 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.774653142 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.358949517 seconds)
    (64/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.868449689 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.228897384 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.053296572 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.851638467 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.236641813 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.85446277 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.775278377 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 6.856871626 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.959990303 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.853737029 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.183271546 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.572082564 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.063448797 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.050643588 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19356478 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.375035259 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.040253718 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.936724256 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852204118 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 4.311833649 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.017744972 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.981062497 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.330778003 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.806454917 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.952099942 seconds)
    (89/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.133630219 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.838508577 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.165334471 seconds)
    (92/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.419884873 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.149626433 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.706806995 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.957728942 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.09399501 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.202390085 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.167544415 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.059687864 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.443338573 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.841871176 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.251360602 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.076106077 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042379658 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.2132195 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.849218482 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.85275276 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.850465877 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.046027166 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.19189207 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88270573 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.814830766 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.26895858 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.187979358 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.880691378 seconds)
    (116/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.282723507 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.839663462 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.84811565 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.974964698 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.998379764 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.983512027 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.025027012 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.295245906 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.870731291 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.101237573 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.48452497 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.874507881 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.933236598 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.79190527 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.069502611 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.928678299 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.954417482 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120125248 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884012745 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.233005746 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.430196698 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.94057882 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876510898 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.886074715 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192933071 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.842565431 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 8.971462366 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.943690977 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.013844451 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.27737805 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.160159506 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077163855 seconds)
    (148/309) benchmarking ("sort", Float64, false)...
    done (took 5.644873706 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.564867118 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.477217894 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798445736 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.989811077 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.194885438 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085768504 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.984769773 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.8814564 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.839796366 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.732284399 seconds)
    (159/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.927016793 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.887211598 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.175614028 seconds)
    (162/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.001019017 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.958973322 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.872425787 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.659399193 seconds)
    (166/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950425724 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.9523655 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.448944895 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.949632127 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.155400482 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.156565317 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.495490129 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.914241181 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.705068811 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.875278837 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.969575127 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.053093807 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.843440034 seconds)
    (179/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.062172947 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.918787822 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.09308434 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0111692 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.55712676 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.155424083 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.983594206 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.117913429 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.8850263 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.347066326 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.939813913 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.97293406 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.297126708 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.993306518 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.894550938 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.128734677 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.429265395 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.959520668 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.890921099 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952312958 seconds)
    (199/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.110889833 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.360449249 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.842584922 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.39953247 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.885265758 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.936762449 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.851900781 seconds)
    (206/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.328940273 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.167552458 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.853771086 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.909954326 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.985143191 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.0436628 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228313926 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85197576 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.003932256 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934419238 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.928059407 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.154111943 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.498140649 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.732942213 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.060817529 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.071408501 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.991097373 seconds)
    (223/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.560967433 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.945946222 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.850939827 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.853589927 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.067935488 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.138147112 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.960548978 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.494568018 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884335509 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088908425 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140053513 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.157537687 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896860929 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.851309268 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.469099904 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.181025729 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.852678405 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.840340979 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.274069187 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935743055 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241616111 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.918769755 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853527656 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.059447853 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.792447941 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.943839246 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.368332122 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.099411531 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.177164316 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.856624738 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.585663326 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.034974827 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.971554223 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.087512561 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881634112 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.943562334 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.098821743 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.841580826 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.032121489 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.850487847 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851861247 seconds)
    (264/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.07041737 seconds)
    (265/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.985594014 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.868532818 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.878948832 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.971274747 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.943155222 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.220689088 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.261774431 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.842092383 seconds)
    (273/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.022192862 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.076899239 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.726888385 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.940383863 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.261946401 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.84245758 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 7.254082493 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.506782781 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.884979465 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.040997898 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232276023 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.842023552 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.397605835 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.938691092 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.78032259 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.937552685 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.200453251 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 4.878277603 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.002678111 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.044335988 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.95688044 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.625842203 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.879513599 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.880577743 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.965851545 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252345756 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.890729049 seconds)
    (300/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.444691873 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.872772758 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842889189 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363918345 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.886197803 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.839904719 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.623774051 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184378394 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.014157631 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.684671144 seconds)
  done (took 1016.564691954 seconds)
done (took 1018.419089621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.934790531 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900627954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.885183175 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.907950191 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.994248177 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909980392 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.89641768 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887668728 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930712785 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.929200938 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876698111 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.902233662 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879460156 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.88042706 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.877520673 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891706471 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195913456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910893843 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.895527649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.889122068 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.894015348 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876577836 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.928026187 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.902516574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.882585889 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87894582 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880435968 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.897264591 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.988709152 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879931812 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.87960307 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.885796763 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191411634 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.908829059 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.871213709 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.892002764 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.882184345 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.882146114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.878413483 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.906078486 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.341251819 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.876786655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.870462499 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.871958344 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871971245 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.872127797 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867044345 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.87502895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88156371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.882554007 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.33544637 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.888460931 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.868321041 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.866959581 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.876189013 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.863780623 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.867857468 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878113087 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.882879252 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.878117119 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.170830023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.899388226 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.864090772 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.877999675 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.868264189 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36438239 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.861987114 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.862982507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.326935337 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.871330825 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.361947962 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872437537 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.858914002 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.871794539 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.8897906 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.173683191 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.883442901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.854700501 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.860873464 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.852513378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.86792415 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858803539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.853468667 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.851013567 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863488086 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.875708414 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.860259317 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.849755243 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.856434081 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.864627426 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.854199053 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.858508303 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845992793 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.839097685 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.853030087 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.849339213 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.846261164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846935718 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.849970852 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.853949125 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.308329802 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865501147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.835707565 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.835329293 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.83944193 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.851100144 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.303300898 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851619125 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.859883019 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885541809 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.839548403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.142564518 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.876194111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848931447 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.84354405 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.835538883 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.830510731 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.141441398 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.327225565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.853333905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.834567686 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.830457993 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847695527 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.835593962 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.828641748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.146182301 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.864392062 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843884213 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.950403827 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.8387182 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860110864 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.825794514 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831794878 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.856749258 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843660912 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.85662012 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.830252406 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842152534 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.842235312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.823102409 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.832009691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.834543671 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.827654778 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.830983136 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.825043514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.851488272 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83363564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833951301 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.842862387 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.943788865 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817568352 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124800459 seconds)
done (took 292.033627845 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.888463937 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.818510268 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.91227262 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.814536027 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.894300501 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.899931515 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.808163569 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.807346743 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.808450335 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.187239777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.812875141 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807715208 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.805274059 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.803440134 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.890684337 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.806048996 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.804558082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.145534157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.804644836 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.877806429 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.798740286 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.79776225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.797984174 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.173183422 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.790996402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.792763846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.870773145 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.797570026 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.135934213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.79156046 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.794055004 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.130260383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.882811784 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.80990271 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.802095283 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.79649885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.873555361 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.793734248 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.868495985 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.868903915 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.888955222 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.829719201 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.789596031 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.781462064 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78684984 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.785151581 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.781179374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.812719445 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.775876162 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.782271572 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.119913746 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.788925346 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.785647645 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.776087516 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.776264744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.802335053 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.775810355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.779704523 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.870075667 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.780357344 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.8435562 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.151108799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.153467539 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.775933501 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.774549363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.773712569 seconds)
  done (took 179.240949418 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.842994401 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853200878 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.838849177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.775231108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.822089615 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.840189592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.773706597 seconds)
  done (took 14.440359304 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.777433473 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.77212894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.820450002 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.823030601 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.774350203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.927502052 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774969781 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.783450952 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.769822115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.825244864 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.77274134 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.774147899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.780259012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.765229024 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.824756988 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.785672447 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891346951 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.774851477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.773309268 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924954969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769310083 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.780856495 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.805787739 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.78473893 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.77386718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.780776925 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.367851463 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.774613019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.7713875 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.773760213 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.770091746 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.815542656 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.773796816 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.76957754 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.772513741 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890721758 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.774899826 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.771685142 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.775036219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.774401115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.772059278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.774459475 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.773871461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.773516404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.774489355 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.798472479 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.775069971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.77533154 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.773751935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.774832674 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807650338 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.774576575 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.771715347 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.773304173 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.829739586 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783141699 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.776459615 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.773436694 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.777921028 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773113019 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926939816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823943086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.774626831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8222648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776760583 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.775654128 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.774764265 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.776126184 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869859269 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.776448813 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824279785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.772984414 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.935931262 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.799271035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77634331 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.777542789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.77796242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.775364797 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.772978402 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.782328589 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.773450508 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.77861896 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.783478516 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774780917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773664516 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887872877 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.883709149 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.772155229 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.787185159 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.783669993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.775423476 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.815881382 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.777323334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.773639437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831359662 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.893152655 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.83061229 seconds)
  done (took 196.474508299 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.779888534 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.784249259 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.778460211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.793350552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.777872744 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.777414545 seconds)
  done (took 12.385179216 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.781093112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780646822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.777472559 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.777669788 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.777197623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.778826232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.777307492 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778288074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.781381505 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.779393169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.779720597 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.779406074 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.779798351 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.777624845 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.78034841 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.777225626 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.779157952 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.775373823 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.778789307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777400291 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.925095707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.779022653 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779145042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.784957779 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.785138708 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.77858159 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.786624884 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.779189962 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.779191558 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.786819397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.78051549 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.77971629 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.780606827 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.785145239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.783704386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.779403779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784458754 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.780829065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.776572916 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.780092943 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.781525422 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779005629 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.777610914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.780703148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.781040073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.784631787 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.786405907 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.788635905 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.781276097 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.781268292 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.782970787 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.780670655 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.780335008 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.781796143 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.782654199 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78507747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.785333643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.781083685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.780532716 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.783129178 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.781149067 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.78237404 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.782846315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.785657466 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.788042289 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.781357446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.781337786 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.784480207 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780793939 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.781451844 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.782770549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.779337304 seconds)
  done (took 131.08324515 seconds)
done (took 535.377458528 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.885754303 seconds)
  done (took 8.583774852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.949405662 seconds)
  done (took 8.745794703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.472179935 seconds)
  done (took 10.173674917 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.82717041 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.77523293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.787123103 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.780383792 seconds)
  done (took 28.884096247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.848353772 seconds)
  done (took 8.547600677 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.792342425 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.773568226 seconds)
  done (took 15.303825148 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.823439095 seconds)
  done (took 8.525390433 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.102629045 seconds)
  done (took 8.808644031 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.793787826 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.807051528 seconds)
  done (took 15.316932333 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.762262195 seconds)
  done (took 8.463804374 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.424110669 seconds)
  done (took 11.134303905 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.778713434 seconds)
  done (took 8.494934916 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.843361492 seconds)
  done (took 8.543550385 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.934068511 seconds)
  done (took 8.629802045 seconds)
done (took 159.853618632 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.774700996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.767780854 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.768940753 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.766931558 seconds)
  done (took 28.771719736 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.810050502 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.808149218 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.811435131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.820723328 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.81290237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.810572148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.803341451 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.803528844 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.820908997 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.810930054 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.809245692 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.8109463 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.8083976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.800222133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.812419609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.811694301 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.820440599 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.811258151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.802090574 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.812333058 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.775371413 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.82071956 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.812086754 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.775717888 seconds)
  done (took 45.092785088 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974587965 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.848107007 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.929284647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.834214236 seconds)
  done (took 9.280467193 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.828133147 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.831230449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.840212417 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.882275317 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.907090224 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.837125461 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.801142259 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.797977853 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.784832259 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.831078462 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.905746332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.826761638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.914365321 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.778148657 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.978150625 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.777647207 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.776506147 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.828848766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.885417013 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.891032963 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.777719733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.829640878 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.832684744 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.825041178 seconds)
  done (took 45.866046822 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.77287524 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.780208108 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.777342882 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.770034882 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.773676487 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.768377379 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.776352231 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.77080236 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.791887379 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.771890274 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.772785795 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.767918722 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.766238125 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.767487253 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.767732555 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.779788262 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.780427367 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.766922045 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.770558083 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.772711364 seconds)
  done (took 37.161725147 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.761255625 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.616135362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.113054651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.016475013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.761478446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.763256952 seconds)
  done (took 30.721450284 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.783192064 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.775513475 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.769465128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.827263526 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.908667315 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.776832807 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.770440701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.783457869 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.818765971 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836161724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.791902002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.800699923 seconds)
  done (took 23.332256755 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.765204207 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.764699645 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.770660308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.782309358 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.781460065 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.778501685 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.776691022 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.762057742 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.784912566 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.797742906 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.77519522 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.782687228 seconds)
  done (took 43.018494544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850373693 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.755925286 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.806475402 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482561195 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232805667 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968555331 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.28741987 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09450529 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.756459891 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027212029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868448478 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861793305 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008507143 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753099472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817718136 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240918821 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054082933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987079365 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783623449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556149643 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808434119 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40177043 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.633446958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.816919358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968719607 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.896471655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.016256644 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.714056764 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893020824 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794807951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767707005 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.757664693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031448561 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135846597 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862359883 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766029752 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410455501 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.474175849 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.74701474 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.564390217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.616180579 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891664602 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776111348 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766563658 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696550611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401044041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148410994 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.770836658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.475278872 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.76486041 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774212666 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851771988 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.765320937 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.57921828 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717837606 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045834054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.761680899 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771049703 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335523914 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926971802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449164949 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.745913613 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.960161554 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571921995 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16568693 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.918053742 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.771846164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770767865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700823293 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.576017297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822273453 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912987895 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.787370889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41669685 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068600439 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.943838008 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71220258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0571928 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697872397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.747393524 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997202531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724999231 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701615889 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.638450227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702083116 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070686393 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808640318 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.395317338 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811076059 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103753317 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780499985 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784754637 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776060475 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992267686 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.651411096 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769109647 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.662224121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914055282 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791101793 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104157074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704154813 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.773634005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025697898 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.980820183 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141522346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.297147785 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926602504 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769979477 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.850128617 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.771034335 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815318653 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.042791907 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831818868 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913184754 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837206736 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.737480247 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081316471 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80796819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.942562481 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.925672875 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908068767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.110727972 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068531208 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843667422 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780901734 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.778240565 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.6243346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333259164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.047628345 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781068704 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408576833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83354251 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.781846914 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716411046 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.402905937 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908625985 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.763036005 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005061161 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.780809337 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063116802 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713340989 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945637111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.895748971 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.00292726 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429262305 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.863485111 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037796186 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409950605 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.193887619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83403849 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800834572 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875865657 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802723619 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.350719098 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074915232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.785337476 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.785408301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.624706917 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78373129 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78403298 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.790901155 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582859754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071896909 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81771873 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.790875409 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67554559 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.799180583 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852726428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790967331 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795270299 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.350508702 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535155549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.797387436 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.436791773 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01113623 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796050336 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.611382161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90202334 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871467102 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065018334 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852889978 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.722802311 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.499974158 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.481592763 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78956155 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725027403 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.789932718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799295443 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800654533 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.171823638 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069141846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839812505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.611274408 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.836238676 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802200219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.796262497 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790988238 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.334901095 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960905303 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48615041 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84346078 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929785633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.805820183 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728826317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.798105941 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800658462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.795674641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.752176741 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847619041 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.599081028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178278238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054222504 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495780362 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81737281 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.70849727 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.859542651 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.817898366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699824632 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813415167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.909350029 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834875902 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.834231525 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.633980944 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.531991871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393374687 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136079734 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134832796 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270570924 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.467414636 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13260129 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162387448 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059153582 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353497473 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886491131 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16830657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768760582 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908856348 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489644663 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183053749 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842018119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052329122 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213128642 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.646498385 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974091504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035627479 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859681858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.825229895 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787365372 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.036258788 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966480033 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.687773145 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034600923 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158605943 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59301685 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.924129509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.825370728 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54535944 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913264299 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.540239398 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187261769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.48397445 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877433785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311170158 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830634043 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271014814 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183830403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298490521 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.952516194 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76124809 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836311753 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839055432 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826343265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.823545199 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.694948926 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.078343892 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83723322 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062304695 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.240248139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12854541 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.783286964 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.832113934 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826782862 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130690744 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.762263265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999645986 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.417793971 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.365785551 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831130296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767198139 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76188233 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.518614097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834824789 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.810176443 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055125001 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.018650759 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784461696 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460261248 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076042069 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081843982 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.841444779 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102381749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104412585 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564799046 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857558944 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.927596529 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585604392 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.941221681 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.09773962 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063851583 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628414605 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058666236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.87402124 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.611054641 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.829390239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04535597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098259345 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832181053 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068851328 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.55240182 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.929202162 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152394448 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905907332 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845021478 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003764282 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.042240741 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858040037 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931889367 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857747529 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.859027023 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858106952 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894391065 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855107088 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978942204 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.861744404 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936027856 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003418819 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.384999837 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.854863296 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127259371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207008304 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177506215 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911694257 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851592792 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847267423 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784466298 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985481302 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.294635495 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121964732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979461801 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.150612739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873849167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63509434 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372485257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096653607 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124811347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.744606905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84895971 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928698435 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.116541435 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860373991 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.061358287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080915864 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16963981 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324454474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.242033604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221821565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125858383 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223351725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851627939 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440798789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.990033789 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580110671 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.907741003 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857389783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135933444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875905268 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25098072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887021682 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062840359 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.380702811 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686703082 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153326264 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.854962894 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9298173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142858796 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2549023 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177642086 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935981217 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875091057 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.568313385 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0026345 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74988508 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136075889 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86619431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077607913 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.576289232 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875824648 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147339098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176579296 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.863816139 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.744279214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874327046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.876707456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089053481 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136889945 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120479831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878121895 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874466824 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.682966307 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142758484 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927126463 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804464097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.870946412 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96581853 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11470076 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888314038 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.383360635 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.577507891 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165733673 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.788166229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889394771 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516598976 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2426186 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1955751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416917451 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097185961 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.428942013 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.868755747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164387563 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871750738 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.522526861 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18222176 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872848017 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.62256586 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914862349 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.140594521 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190451925 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.00191074 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715247427 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.861064854 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106771779 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554541421 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82846604 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884795233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944943595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886788835 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015632396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895313521 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.764020632 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885947619 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628379566 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37665525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.88889525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.87021682 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.680046145 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.664150139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925658942 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028027127 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893876785 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.63022609 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.211189314 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139885929 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.65606006 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.896111247 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.890425052 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887324357 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81526686 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084819342 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.265947872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187399496 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.503916477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.929542383 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889678378 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.100878972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096892871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.86766965 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031743991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524560637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932720191 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.657730645 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.565438126 seconds)
  done (took 1667.08265857 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91242705 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.902158404 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.888235416 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.894055924 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91219711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939131716 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.935894486 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921093588 seconds)
  done (took 57.121350142 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.885501409 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.087382972 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.894325859 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887617974 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.898411023 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.8863024 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.062321212 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.897180497 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.896534623 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.897382148 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.887486328 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.885986398 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209269332 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.913451402 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887466801 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.873423155 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.89402969 seconds)
  done (took 74.664424886 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886587346 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.110427284 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.927660603 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.913207714 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.854839066 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.88741753 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.869949119 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.912298857 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.894687764 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.122936443 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.228331278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.920072933 seconds)
  done (took 90.345961893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898109602 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.89799604 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.894853501 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895750347 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.894744524 seconds)
  done (took 11.301821691 seconds)
done (took 2165.530730977 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.136357562 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117880297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.127530633 seconds)
  done (took 6.061984982 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.03647544 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085838546 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205910368 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.21164899 seconds)
  done (took 10.360553314 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.185796719 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.272998193 seconds)
  done (took 6.277437595 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.313740204 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.88864097 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.294628635 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.889573308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.88891894 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888286161 seconds)
  done (took 22.49087352 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.89353042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89629982 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.893597514 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.896321009 seconds)
  done (took 9.399399607 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.875754297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.601728049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.880002133 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.888605428 seconds)
  done (took 21.064025451 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.641480361 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.291012295 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.635731947 seconds)
  done (took 9.388090598 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.454347567 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.793002801 seconds)
  done (took 9.066788797 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.137871909 seconds)
  done (took 3.957406902 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.921985819 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.164196847 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.414530337 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.432881781 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512603761 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.787773811 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.231606778 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.159497641 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.315080031 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.352532321 seconds)
  done (took 25.111788572 seconds)
done (took 138.629243869 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.277113328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894494938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.091052876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.242352675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.126961082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095277991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.296415243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.227122476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.739269813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.738025353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.243892431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.123974654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.247031747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.136548626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.248336444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.135108671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.112771428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.288510768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.97350398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.171176391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.30599016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866892575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082818143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.8791849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.112611171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.039446469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.458644227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.133941179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.127264676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.464574197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.043576861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.328467458 seconds)
  done (took 173.073341721 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888300573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892850356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891734817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891740308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.263189745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893073204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.891256729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8914995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.161850591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.150482734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.892749337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.255141224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893839071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893238934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894465246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893018538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.346940254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.903423585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906924768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910040753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912856408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.132803447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914922819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.174365521 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.336290635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919438333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.894230226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.921551818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897697441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.903183081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903565693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892148452 seconds)
  done (took 209.232089758 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894094217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894841155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893642971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895228216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.90504209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894121194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897891863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.896034435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.667516859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.669629708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.903160711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901712261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898777071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895743333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899520423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.894129099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.902385592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904918065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899745987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910959781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.908137553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.54697373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905993501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.555196274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.900748969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.90147577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.897333926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905382731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902965157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.906769282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.906934207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896787218 seconds)
  done (took 221.488035197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097788591 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.903487183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.904155803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.84744323 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.903383019 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.901698219 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.840401817 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.09256395 seconds)
  done (took 19.340521499 seconds)
done (took 624.970004341 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.372365075 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223046174 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084312199 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927336367 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.157324491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.960927747 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.922626663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.987914288 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.644975034 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.995527132 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610472096 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.945320486 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.696214192 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949765769 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044295087 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980192695 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.507784884 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.606108538 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104175734 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983526482 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099337723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.878691163 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.005918801 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.668982642 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.719219778 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.926543975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089802549 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518044606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.934095327 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.088003347 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.689608354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298989854 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.937813673 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922507798 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.979263589 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.957484449 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.255218146 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.936181303 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.045420451 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.68715776 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98623785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.536280259 seconds)
  done (took 104.692846661 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.893518494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.891746488 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.89306102 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.893626805 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.895409819 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.894367749 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.89186095 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.89096844 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.8926572 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.890411666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890788116 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.893557511 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.893111721 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.894409373 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.894988204 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.893448139 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.893420228 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.894802053 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.891815121 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.893239201 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.891719483 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.893297685 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.906625514 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.89175953 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.893586206 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.893289685 seconds)
  done (took 51.069918953 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.907174008 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.057552246 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.166207232 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.928483363 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.907046695 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908433557 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.924143176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910440567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.908224692 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909494936 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.999860122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911630954 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925293235 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166850488 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.924785445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.905201523 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905621801 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904276855 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.06046527 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92286253 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926446407 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91101685 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.926087899 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.920735281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.908088034 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907554162 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.910463656 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.376209263 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915706528 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997119777 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.949837145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.92915733 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.330864113 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.178000759 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.96354935 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.913949336 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.908167053 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.000189798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.913053264 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.905941369 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.924642493 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.911274914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.163851642 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.408553659 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.923227891 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.908401869 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389579947 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.010211266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.949263465 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.918612211 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.168136491 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.926440428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.908226533 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.909322836 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.945529105 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919612445 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907870818 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.231902532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.920818078 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925332798 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.914216665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.908121867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068276832 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917215585 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.057620672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.919503907 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916361298 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.911170721 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.168739826 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927088311 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.41169403 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.92365312 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.909338034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.998913319 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.063055097 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.415190955 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.926101755 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.071345936 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.347990987 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935972729 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.917194996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.364697389 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.937188858 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.917480692 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.910689129 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.910981296 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.910813144 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.954092832 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.926570274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334438004 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.418538153 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267000151 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.938155707 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.924941328 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.910874981 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.231379188 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.919336747 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.910646391 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.162827203 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.425063449 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925790936 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.918528479 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.403078751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928106732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.928939237 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.918415258 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173873707 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.929178689 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954634282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.911571649 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.918972285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.91465621 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928883567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.91833087 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.911418578 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.392384612 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.020745784 seconds)
  done (took 236.853386797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.906844561 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.920723043 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.904973948 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.905998431 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905747847 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.912286039 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.905130465 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903924795 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911711078 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.905906407 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.905326087 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.906969477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.908640619 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.913311491 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.947041609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.913199204 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516185373 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.907372403 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.905774542 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.904664648 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.556587917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.9143592 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.905154953 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921626964 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906443372 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908033122 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.906105001 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.946266641 seconds)
  done (took 168.61273519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.911232971 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02832174 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.931516428 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.939959053 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.922429012 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.911926541 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93696974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.929191099 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917887811 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.914377107 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.91180981 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974635541 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.92415621 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.012148208 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.94267746 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.943610316 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017102822 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.921280177 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.911675585 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.912211362 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.942547897 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.909092137 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.975163628 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040811915 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.932266977 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030313177 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.920391514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.91477224 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914630128 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033627285 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.930895269 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976718955 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.944009957 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.931385251 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.035466392 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.030487241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019696109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.942742238 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.918693259 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.912636583 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.91448949 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.902986623 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031389032 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.936026688 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.915023991 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02082153 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.933437136 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.914699015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.92287668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.912771483 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.928710118 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.93342428 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.982286953 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.049182388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949079553 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.941851439 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938340967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19680403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923663579 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013549725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.907777722 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.034331431 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936013463 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.90276455 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.916150885 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.921357693 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.944527329 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945258508 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.019950523 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.92188454 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.015384463 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.950086653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.922064312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.915822714 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.917915065 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03423873 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.037070409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.952108219 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.953700303 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.947317114 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.910829478 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.91443226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.903901842 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.933508326 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.920042202 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034446137 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.042660852 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.923867286 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.917980444 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.918339154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.916719148 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.941648025 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040334376 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.951696764 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014120103 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.984010634 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.993034059 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9332091 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.929320019 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.920167311 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.980766147 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.933607981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.927424686 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246685898 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.988325879 seconds)
  done (took 207.389908601 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.36452441 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.969797529 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.97462677 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.234730373 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337138326 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.763992029 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.966436317 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.96604857 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.988414987 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.154526426 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.042497749 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.986702675 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.952749032 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.940297304 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.965912311 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.986105071 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977693731 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.287035216 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088814595 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.042447367 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.948957442 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.256859186 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291044365 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.363826943 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002538514 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.317032093 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.646190613 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.107903842 seconds)
  done (took 62.771198115 seconds)
done (took 833.21559915 seconds)
SAVING RESULT...
DONE!
