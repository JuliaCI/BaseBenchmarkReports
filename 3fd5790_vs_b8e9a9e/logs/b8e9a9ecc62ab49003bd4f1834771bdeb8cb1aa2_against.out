cset: moving following pidspec: 10081
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347086357 seconds)
loading group "string"... done (took 0.638272585 seconds)
loading group "linalg"... done (took 7.707400163 seconds)
loading group "parallel"... done (took 0.175884716 seconds)
loading group "find"... done (took 1.164578041 seconds)
loading group "tuple"... done (took 1.927330349 seconds)
loading group "dates"... done (took 1.26351336 seconds)
loading group "micro"... done (took 0.239967351 seconds)
loading group "io"... done (took 0.948840379 seconds)
loading group "scalar"... done (took 39.160865571 seconds)
loading group "sparse"... done (took 12.537404949 seconds)
loading group "broadcast"... done (took 1.022505087 seconds)
loading group "union"... done (took 13.058141838 seconds)
loading group "simd"... done (took 4.915467146 seconds)
loading group "random"... done (took 9.874235907 seconds)
loading group "problem"... done (took 1.87679584 seconds)
loading group "array"... done (took 23.101739651 seconds)
loading group "misc"... done (took 1.838638148 seconds)
loading group "sort"... done (took 3.755540261 seconds)
loading group "collection"... done (took 18.992244814 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.56396715 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13479284 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127272256 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126127578 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155702212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118646412 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13106044 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.092168418 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85470787 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154458606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122703351 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436669367 seconds)
done (took 5.530761968 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181761516 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08933241 seconds)
    (2/2) benchmarking "String"...
    done (took 0.089320497 seconds)
  done (took 1.329552625 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073241049 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131312988 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072158216 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072982162 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072602094 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074946576 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073474179 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074216113 seconds)
  done (took 1.724788592 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077770654 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077307847 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073568824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075552048 seconds)
  done (took 1.457165293 seconds)
done (took 5.931002088 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.804444254 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220430083 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19335364 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420206679 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141264423 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.166363054 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645290295 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.302553717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194750625 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086159674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11499788 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.332861033 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114649552 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65109006 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079815183 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096566582 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141207341 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467016519 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075813825 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088281824 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094523598 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133975062 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.095250122 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079572812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151827512 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073343628 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142659677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084777892 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072156144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21875718 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177466656 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661261997 seconds)
  done (took 10.512037228 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102270726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102683222 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074161342 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128000347 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10244915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075193603 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076337874 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072713773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091796997 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13436371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093658701 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106613479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070923631 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074895277 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091010587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210355111 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088635395 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090086844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078410648 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083579562 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113859294 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086574356 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088030837 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084604773 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135633638 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187857685 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10145714 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103429412 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075019164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087402819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121567659 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130290095 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071230198 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07190139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129576436 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1001325 seconds)
  done (took 4.82527465 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997603922 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154163761 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099237661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144095001 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.073689151 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.118355895 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07188683 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087346447 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.214532456 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.339111334 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093576801 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.61874502 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116603905 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111454306 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073507723 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07398889 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072566517 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.527408733 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102141754 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114438549 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086703758 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075677544 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074432347 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367444889 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073506549 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069557469 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074288857 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063220772 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130874595 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074196079 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948610034 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.161393827 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071696339 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106328833 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.300001286 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097603478 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070066848 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096762929 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148269975 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073667864 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069678971 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157745603 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075930115 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069697692 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071240617 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089291717 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109745919 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124708203 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071695171 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072729541 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167031702 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070485738 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085504822 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.081042316 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161248316 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085878952 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07236708 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267893483 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09766706 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076431385 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071742088 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183665217 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134266358 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075251118 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072323746 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073540501 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074578947 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366265297 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071477922 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.868434854 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076088282 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084640737 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075227362 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074816739 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078838853 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078046364 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093365939 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072277821 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080569963 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0714218 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07164932 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072415105 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088984687 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.385684335 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072493234 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073766795 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069849431 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.198333141 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101734902 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073028383 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072392956 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10565542 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073822023 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072380269 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113747176 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072864178 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090388499 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074751465 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11915368 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076225782 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095120191 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073040372 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10556725 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07971317 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104267708 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085272656 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074274314 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.429431241 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073317004 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.070664658 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073373075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071334032 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072784567 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072136435 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084251933 seconds)
  done (took 22.198913262 seconds)
done (took 39.689797839 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.26341056 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084053763 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082771087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079697421 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079407201 seconds)
  done (took 1.83286111 seconds)
done (took 3.064203001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127568011 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105147186 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070246016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102719584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06969429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108290144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106675675 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087592172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106081325 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069695401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103768591 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069985747 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070077503 seconds)
  done (took 2.442864757 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089883547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092188736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076126318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088650911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068525726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089177991 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087718118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094733794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087568196 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078431856 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06935938 seconds)
  done (took 2.14360058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087650784 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089318927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075354726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088433674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068872417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087416657 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087146036 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091906712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087781446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079905878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06958041 seconds)
  done (took 2.130229323 seconds)
done (took 7.933033105 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083697356 seconds)
  done (took 1.293406063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.596247473 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.127709413 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.087133672 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117391693 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195852857 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124257396 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279806276 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.092963229 seconds)
  done (took 9.011591262 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108276609 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075160307 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076994041 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07487616 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076938835 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073549723 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076515043 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076547398 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074479393 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074997029 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075031642 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077423874 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075414827 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07783563 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074446498 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078252254 seconds)
  done (took 2.525842417 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098436374 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096606902 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078659956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080159298 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077412829 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077758705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079841522 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078521471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.076764573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07764375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080337878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078620709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076861714 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070032967 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079252987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080208181 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075837438 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078986772 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079484043 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080371283 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080568159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069851798 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077175355 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080539729 seconds)
  done (took 3.22418117 seconds)
done (took 17.276130115 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119776839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076738447 seconds)
  done (took 1.411970249 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086610806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088932712 seconds)
  done (took 1.398031952 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087685175 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07069852 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09548924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083629482 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.071813482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070746916 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093393141 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071505152 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071163601 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07099842 seconds)
  done (took 2.014218894 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072935496 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084005828 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075440823 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088876766 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081350748 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071789655 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080313679 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075549126 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085848224 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07027437 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078113575 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088215934 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076954879 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089793882 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077405529 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073369864 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076348198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073020849 seconds)
  done (took 2.650236134 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07102757 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072596492 seconds)
  done (took 1.3774042 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07279076 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06888488 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071471981 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071998921 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068775525 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067815581 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068959075 seconds)
  done (took 1.719833807 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389418633 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118665846 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325264632 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079582784 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088929551 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267125386 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072485042 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076904564 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076293232 seconds)
  done (took 2.767130963 seconds)
done (took 14.569719262 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085087367 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091280777 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101615004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380411127 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096876012 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071778039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119664317 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197797934 seconds)
done (took 2.391126905 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220099611 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.653666454 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.416356859 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216487058 seconds)
  done (took 2.520433281 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351152698 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096617853 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066694019 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074900546 seconds)
  done (took 1.829605261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072305196 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075683804 seconds)
  done (took 1.388344385 seconds)
done (took 7.199941351 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073542602 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093679456 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073649773 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07185892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073714635 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071153172 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071193551 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070987952 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074009377 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073339753 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073964419 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.07421407 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073571258 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071233609 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071182721 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073246688 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071093071 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071409951 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070997993 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07088462 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07364008 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073395798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070800971 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071457538 seconds)
  done (took 3.030846487 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090492972 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07187344 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077258475 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077073571 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074255163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075946343 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07812543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072448715 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077610746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075634886 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076087436 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074953187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073226861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074654966 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073228515 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074568148 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076565704 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071839462 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073797275 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074570762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076261474 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071194497 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074722942 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.188306191 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075110765 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074264166 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073271445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071488143 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076698141 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07439059 seconds)
  done (took 3.62126076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075739402 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068512262 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069855421 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07626966 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069200451 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069576958 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068644239 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069283402 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069234935 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068531103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070175828 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068175902 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068858939 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069587856 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069514848 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072472228 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085134735 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069114709 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069056624 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06912985 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072420921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069177628 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069108602 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068638664 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06845282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068258403 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06877617 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068516427 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069700361 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068620251 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071276055 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072772978 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068548964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075744822 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072541945 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068636167 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072913885 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068373035 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068994041 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068172219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068324798 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071112308 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06826548 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075727528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068976772 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07026848 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068788063 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070992841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069078961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071156252 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068560104 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068698079 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070558773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070226355 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073015601 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068413316 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069308821 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068520367 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069262453 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068363179 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068886414 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068516457 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071551844 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069077379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083984544 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076150786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068983965 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071908639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069568557 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071601019 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070288123 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082798597 seconds)
  done (took 6.339318007 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096019929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093477504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070822433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070634395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06699395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069426702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074938085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069198426 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070820052 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087483371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069332537 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071272501 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07091289 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073093349 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071860289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073064239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079936195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069964795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072127647 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075398168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071818567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077532502 seconds)
  done (took 2.911087922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16190585 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075586508 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110461462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080039431 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07524716 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080483104 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074917053 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075106845 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075250247 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072579351 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072510782 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075096554 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075073095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072679548 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072819025 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072950162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074914901 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07319873 seconds)
  done (took 2.725654911 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083313323 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071449942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091543109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071573576 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071708669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073872463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075697537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078979048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073404463 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071244931 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079851691 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07398203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0740412 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07117553 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073791744 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072282705 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076369896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073498493 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081848008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077975448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078031223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08153015 seconds)
  done (took 2.932078601 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087996993 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074218926 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086934746 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073535697 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067089451 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069383103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075979218 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071637827 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075519612 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073343975 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07069006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069363982 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073708825 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071307515 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074214847 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071007064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072877861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071013431 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07306901 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066927839 seconds)
  done (took 2.730002204 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093702275 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075018647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073629882 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082033773 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073448085 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074959458 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081814736 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075579247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075353175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096558294 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074349281 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074270125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080800829 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077703546 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073584038 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080951049 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080636674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08009532 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072999748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073227325 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094241642 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073344624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08060204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072708751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073335109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074092094 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073213202 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077948851 seconds)
  done (took 3.450722979 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072784464 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072192399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069378774 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068687248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069217936 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068515785 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069168591 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069237777 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072640993 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069650816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074144302 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071415671 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07163477 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071490397 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072603728 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072198899 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073505458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070947595 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071609033 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071242876 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073750434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074633932 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073871354 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071251143 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071429695 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073435086 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071736266 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071505045 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073952325 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071096771 seconds)
  done (took 3.412937607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081969593 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078833662 seconds)
  done (took 1.427578332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068184922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085433089 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068912267 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076369994 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074711067 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072748883 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079193752 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074644002 seconds)
  done (took 1.858381857 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090746556 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085306048 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.075888885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086380413 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08287809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090818351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143916271 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073457384 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078312781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070220895 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086337273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071675311 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078647765 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072340722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077939901 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078893019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069702104 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077944225 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074244046 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070668579 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074039355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081344933 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07489626 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067542788 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073713556 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095004027 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08322697 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07380949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075484455 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079542465 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077865399 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066019116 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072239975 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072608077 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070007111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08187325 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087418644 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0752015 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08068679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072862479 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081914143 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066876026 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077343031 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07851106 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082346354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07275084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072349767 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066923253 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070331037 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074887896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06762151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07252284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066858486 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079747718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075802382 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08251679 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071481409 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074008833 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074618603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075246163 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078316957 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074398705 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074722524 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071471502 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081821002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076632785 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080608074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066975354 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065753667 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069902496 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081493447 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094939696 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07873716 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072588739 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072687362 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069719709 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075944147 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07306014 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077461861 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078607683 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071874808 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077961147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079272548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072555086 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074461308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079724693 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069923595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.074734218 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070439726 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088463318 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.070412 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069762566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069395021 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081554167 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074966104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071557812 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06935267 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078548773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065122169 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071710991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071874283 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071789018 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08071576 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074923882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075457486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079735443 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078107824 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071239628 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073260396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067296917 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07194402 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070263606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077919056 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064939276 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073632039 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071746889 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071377834 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07905946 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069019214 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070147283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079811697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075939685 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069617325 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06744438 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073801683 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070383572 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073243794 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078148351 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068773227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065369014 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06543348 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074166586 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070091448 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073943637 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074720998 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073386841 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06528169 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068205802 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07530646 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078910505 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070728841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071226599 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076626514 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072316451 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070020799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076928552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073206463 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070342897 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076104902 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071939719 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065955206 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072938174 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073729255 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069148847 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073213646 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072209109 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072133705 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069792034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068063542 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074175584 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06968593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068771244 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070113765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068035601 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078764578 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071487919 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065323975 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066543325 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07648568 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067570795 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068494338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069376624 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071514108 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070262175 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068063165 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069218961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072048015 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077998092 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072538938 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069829285 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075019263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080652905 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06989474 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072292983 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069214475 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070083603 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069681914 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078149907 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075483953 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07436012 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072117666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066372438 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075027461 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077175921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068994942 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067255624 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068928932 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073100607 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075510543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072891029 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06978796 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068986189 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070060766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072027805 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072170149 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069257837 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068984589 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074309676 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067146022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074402944 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070380206 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07871052 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072478211 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064156299 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072395963 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067998846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07604023 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064839686 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06790799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069541537 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070450623 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070651584 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07276837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.292550863 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081079357 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081484506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074561679 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07444193 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074426965 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082302659 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076062494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07853408 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079182623 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079987067 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085534966 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072985577 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077898898 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085002088 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074626662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067661467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079479684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072673168 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071875321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073170039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071827994 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077371568 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082064626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079740916 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067312823 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075958871 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072737719 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072639507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068807746 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078039039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076810881 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074266336 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081659081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074275335 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073861771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0774037 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073453216 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073797604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074884448 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077214509 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074574931 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075242216 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073208452 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076285492 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072496005 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072055615 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075783702 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073433478 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079186557 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079728016 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074232253 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076087239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.078340247 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.075912374 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075541514 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076046838 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075090496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078364736 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075875493 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075270401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.077402553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06991803 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083331337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.074572516 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082410769 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073485253 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069808392 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079472919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07460829 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078115765 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073770998 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072968791 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074278804 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072313755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075306516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07984834 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070259881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082947982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07965818 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073128518 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075544695 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072829997 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074105622 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071580804 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073690145 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072845754 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072905391 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072028305 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07661663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074869049 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072749623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07401743 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073059492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073100923 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0755099 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.069874745 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074740715 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073922815 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07464356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084746816 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.075432634 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074084475 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.074004804 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075842641 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072748528 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070742009 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.081660339 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082165315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.075131519 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081150361 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073353747 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075854539 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084664299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067635385 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06990345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.202464823 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071591452 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082170038 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075728445 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083190446 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072720948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072362578 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069262492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074511652 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073103213 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06865616 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072306487 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078364488 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073628384 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074008028 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.075102997 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076933532 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075307245 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082564992 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072463907 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074083415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073078452 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069670447 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071746706 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071881639 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074938224 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073528777 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070525706 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069186775 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072382226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073427812 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073258923 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071401683 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07428402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079614416 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072731809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077178293 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076783114 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066980258 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075389968 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072858932 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071441523 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071833985 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077483508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0773897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075235597 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083705431 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074785176 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075995867 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074557423 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07246103 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073497144 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073872393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074595638 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073279903 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075258113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082403354 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072043679 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077243769 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072704998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073415316 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080388526 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075304112 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075773697 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079347279 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071936445 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073826949 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080243567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076102288 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075458216 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072830237 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07373538 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078259924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071540972 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078342401 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072456952 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072706917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073519243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070242793 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071567571 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071709797 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070980236 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.078401077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072371953 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073999558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071718897 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06982988 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072784979 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075972842 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080913194 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076397575 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076626154 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0689923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.072071249 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075835982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072540899 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076577484 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076360207 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07821679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074962304 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072560989 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.071066908 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080498726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07772684 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075407433 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069786729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074860925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073086656 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073832876 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072958688 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0726304 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073278712 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075848533 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073064991 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070915438 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078096329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075594157 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.205275397 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075172942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076185371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075377093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069796419 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075291359 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076733822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079065807 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074877956 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073475089 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083337093 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070278496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073035799 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075481608 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071879063 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078115594 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068032207 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074050557 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073444424 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073443086 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067930763 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071973456 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070973718 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074552828 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072039316 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068030186 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082941962 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081565293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075727016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071949006 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071326004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067587558 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06796566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071153641 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07311879 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074442824 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082175272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070717389 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07155981 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067493264 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072158279 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074946531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075385889 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069489695 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067831405 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073292455 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077528517 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080220316 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074276847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072337839 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075174478 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075134123 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069645454 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068742487 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07609838 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084794644 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072499969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072938706 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078088163 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08014437 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072526485 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06734215 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073254587 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075479431 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072867325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072968909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07286656 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08730617 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075557159 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071397417 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071113501 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074733866 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071374277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080216261 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073096694 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072877146 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076872659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073848491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080690573 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075052216 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079662333 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075262854 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075815659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.071496634 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072708782 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069919018 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071013929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073011873 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072772691 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076743605 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080318685 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071802866 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082971572 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081859522 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074176231 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068816612 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072086922 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071615758 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067420363 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073064339 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069893434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070412362 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070094747 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.07075025 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072482915 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077203164 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073489798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071773296 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071518529 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065494394 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073812396 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073793941 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072474207 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068761956 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07175536 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.203366226 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077797722 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078294528 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070127372 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073806857 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074531366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073140894 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067200698 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078840183 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071373308 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074004483 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071384066 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072769883 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073128254 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075620166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07668437 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073476616 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074408602 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075978262 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074076957 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069359774 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069873332 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077857522 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070087888 seconds)
  done (took 46.190997786 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108745855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070979992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070086184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070392343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081740517 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070943877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070085606 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071071857 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071539028 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072905506 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07001798 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070315657 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078952299 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085918711 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081395365 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074680092 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069361771 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0696955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067619518 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07029712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0769713 seconds)
  done (took 2.960810324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080682875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083735034 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081398586 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087748217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076585999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075848292 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080882207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076139663 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083794016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077740903 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083848331 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07615542 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078169545 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07839077 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077891927 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076305069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083602046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076645707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075722261 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081126072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076396279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080910715 seconds)
  done (took 3.120888123 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074796333 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071679674 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.076247179 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066900936 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072332594 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066791721 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075264649 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070464624 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075003219 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070727624 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07113952 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07175313 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073698027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067137572 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072398657 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069385275 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113802208 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075089676 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071623995 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072677882 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06703617 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073552812 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067551104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067369242 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071343765 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074809561 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0721389 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069880005 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071687772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071338272 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071632501 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069663208 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073326901 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072480933 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070985274 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071005519 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072197138 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071638576 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067234698 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069620238 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072529114 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067404132 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071974732 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072970845 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069871227 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069373663 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073090369 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.071610955 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068237314 seconds)
  done (took 4.905741246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085887835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116961355 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074460043 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094987887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08659729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078204767 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075413905 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095135466 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070098809 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070341896 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087208302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084460551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071290415 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075479834 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078556152 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07092731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071916136 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070303558 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074988689 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070309841 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075106577 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078247684 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084963732 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083763063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074787848 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069864384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070156274 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075327424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083323619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075278474 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075873323 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076340281 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085985855 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.076971157 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070496357 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073306999 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086919139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.074395835 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073498406 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06920813 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073356256 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075624435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078017071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087313248 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071299073 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076025994 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071083147 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068360528 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083488665 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073477492 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078897741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085053082 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075174117 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071463453 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075854074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.0856247 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071369265 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069556608 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07426627 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082772049 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.069245162 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075132339 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084298157 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073222169 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077871505 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085298568 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07669612 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075347736 seconds)
  done (took 6.794420273 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083873714 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103402012 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090566796 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088437001 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081228482 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.081878792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081467005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080937229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089643655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085826099 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081372963 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122179724 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077364493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084152746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082146577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081517048 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081726364 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081358847 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081565872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081498855 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081274355 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088470814 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081387059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088496837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086240729 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077135072 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081958987 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081411416 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088812731 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081128569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085409615 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081414288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081413532 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088573755 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085442716 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080928084 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071622703 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080969709 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08127229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081820133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077088378 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088387012 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08117061 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076783811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081445691 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080727947 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089483864 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085337842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0833216 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08553463 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080991031 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088921519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080702153 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081630167 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088561039 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091236683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088349252 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088739807 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081286221 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088194493 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088432981 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090938186 seconds)
  done (took 6.642845097 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089586222 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079532452 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08769002 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067178639 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070032836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077315162 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070183643 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069964433 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079483309 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079450271 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081530701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077617818 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080043115 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081851718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077496379 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080327405 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077149442 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077747097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079370686 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077716838 seconds)
  done (took 2.95925737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081247153 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088522783 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072913457 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0782833 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074951992 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07689346 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074372483 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075306738 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07243373 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074930402 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08157652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081890205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072985437 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076887716 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081993241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076801583 seconds)
  done (took 2.632877654 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090305523 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078520477 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085719778 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072254584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072499487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067995026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071222898 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067048639 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068190191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083753523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.07135708 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081930913 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071995811 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07082639 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06830435 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076822684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06784518 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068857739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071402821 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084166778 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078557205 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070091825 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074596689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071255507 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07421959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075985698 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071086239 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071786604 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068843713 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071806629 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07468965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074979604 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068563814 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069824846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071229603 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069438667 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07139116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072075633 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077174849 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071476904 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070302697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073704339 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072302284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072436589 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068174033 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072500298 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068045347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073583084 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069288912 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073883279 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071365634 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073959557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07212065 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078503847 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074333834 seconds)
  done (took 5.417291058 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085072419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075373236 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067034919 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070101411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073074109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075006354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072913318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072846625 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070010082 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073128826 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074605143 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073049891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075225074 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072692386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075073507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067641891 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072863467 seconds)
  done (took 2.725834177 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077457315 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072271725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080114367 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072665522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070957651 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074517237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0674221 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07011085 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070108502 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071859779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071662063 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074051383 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07050628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07380854 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071370323 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071758578 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074015546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07002882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071761155 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06845996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074188197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070638626 seconds)
  done (took 2.989896096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.1004131 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088539771 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145930343 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084353494 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090019585 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077241702 seconds)
  done (took 1.986287312 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096680039 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106196157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072101547 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074922865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08079225 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075795809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075298294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075510619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083670878 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081264273 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075791253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084201299 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083738369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08273155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080908396 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081235792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075767134 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075744627 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07191028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088729395 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075853751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083801106 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07611071 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075754526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075659385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083207198 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084400074 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081226124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075354932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083940854 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08122025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075266075 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083750335 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08135198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07504046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083630009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076089001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089674798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081594981 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083398585 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075793926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081473556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084843962 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080093165 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08429174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076064697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080412135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076105004 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075948183 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091455436 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081233188 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083278931 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081914997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083820821 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084115363 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091639352 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081825538 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083826047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081580045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081858562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083558855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081436497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083111209 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081787061 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081312018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083457018 seconds)
  done (took 6.769112856 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109696934 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072121505 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076022559 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081618383 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084831956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075797354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076481251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075562983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075700128 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072504889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113953468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075526032 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083618549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083810679 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076050128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075257286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07626665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082812393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072662154 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091734893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075415039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082615247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083072589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082721099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082103012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081771477 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075913869 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075556061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075806105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075359858 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080066379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0756796 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08307493 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073156477 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083117207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076178992 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075655759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080428213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076092573 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081398795 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08334501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089522948 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075843009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07595539 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082477719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075775315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075540105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072903745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076338745 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072468233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082040747 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081466528 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081436303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082771868 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075698306 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075981889 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076143668 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076073068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075726723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081448515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082928638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075799544 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091958785 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075837651 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075916179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083471493 seconds)
  done (took 6.681171916 seconds)
done (took 138.459961485 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191655875 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171178305 seconds)
  done (took 1.759664177 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075135681 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104619099 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085411538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133559613 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07179902 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105825538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104983621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084081653 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072126826 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071453691 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071597321 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07439147 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137177157 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07196021 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071522832 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074249194 seconds)
  done (took 2.820554276 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105064747 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169618812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108672284 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070976841 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105546493 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079079821 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071231151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081717594 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07710995 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071095667 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078753306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076497115 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070535078 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076057283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076605755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078116413 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070867642 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077758823 seconds)
  done (took 2.959949118 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106261125 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097934056 seconds)
  done (took 1.62069942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164201585 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.11236068 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152228748 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353577698 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16561939 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154136603 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151889958 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153778817 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121624769 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145403672 seconds)
  done (took 3.084704839 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105698081 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158739248 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273128112 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122771618 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078679456 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098705798 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125008653 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084876998 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085787002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085986101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086042522 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08199976 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10498143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079078327 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079470643 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081468941 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109080246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078504456 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080279992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08196704 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105968341 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07139666 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078257532 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078734351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082895742 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082783448 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071246234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071208625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080978238 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08028008 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081959241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098226245 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08300646 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110877214 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076486682 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112622829 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082127601 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081166824 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079949965 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078873757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083775416 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083371373 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078983622 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082074156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071825884 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082496309 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071952757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071607225 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083574154 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072713537 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083447857 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082620225 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111375834 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073566869 seconds)
  done (took 6.339130382 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108220734 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112653883 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078167164 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117981752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108128071 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078005725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108868419 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101215878 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109504698 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075667674 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073975975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076022472 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087816191 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088268497 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120136299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112778009 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079919954 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077397724 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112154654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1105135 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074233703 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102902104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097285654 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109282452 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073119322 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076033144 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073812383 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076304702 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082597698 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083836186 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075761273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086030792 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.09051641 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083624259 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072730347 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073709659 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074064623 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085293336 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084798408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084859452 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083082606 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073886487 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073541847 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075822771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076337209 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073784164 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084425496 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086423816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084462481 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076040054 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0761764 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073788207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075918259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085988053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083229387 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086476969 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085497149 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074299954 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074650417 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078634208 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086613214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085014389 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085118183 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07524818 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084759359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074361918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086149346 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090339616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074810687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076203833 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074309075 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075784248 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076291037 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083533403 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083930627 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075243824 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075853631 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074565531 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086057667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084194384 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074394427 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082635905 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073575996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074553485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075571859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075447268 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08366951 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084953159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075575469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074067652 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074792201 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074460245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072663262 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081954765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085071554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084382555 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084486005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075347381 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.212384965 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086208984 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076531658 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086374048 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075340523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076522237 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075855851 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084627826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083576215 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08620337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076167392 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074190597 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08437921 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086880476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075370731 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083781681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087035282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084830786 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074033735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087503413 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074862647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085665472 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075767212 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085925379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074576609 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085219322 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074841348 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074442797 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075074658 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085476975 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076339238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073996647 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076018462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076788261 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085141278 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087183475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079408636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084227193 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084543027 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076469357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084948779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074588823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08466165 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075799379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075962098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07280313 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086944038 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074241945 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07429374 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07517928 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0865644 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074177949 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084830489 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083738655 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0737622 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087728403 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086241314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0827057 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085367373 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075212216 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07398671 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074216399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075962603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083883569 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085479234 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075929413 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074026579 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083073522 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084651223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073101894 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084051968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083451906 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084319977 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073997005 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075079251 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0858738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085776068 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083784628 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083720928 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083724451 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074509838 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083872923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084701853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074392689 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09083552 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074336636 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088921879 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084473058 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082709313 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084602404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085682094 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085294649 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08549338 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088112856 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073671059 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073810759 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.084052548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073798043 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07473494 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083128608 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.20523434 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075879403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08971144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074833011 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.085952953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074209138 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085308344 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074177936 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076993427 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08967977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074269671 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076771812 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0863105 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076059148 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084077616 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086792469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084572616 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074897954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07713514 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086465884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085279932 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075250207 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075834407 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076623349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084898571 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083199013 seconds)
  done (took 20.041853719 seconds)
done (took 40.050460372 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220212472 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160061801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189061152 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123598205 seconds)
  done (took 2.200824522 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127081894 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114939431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098183609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070866022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104445297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070812545 seconds)
  done (took 2.037336491 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319400916 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216875 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19411693 seconds)
  done (took 2.174921216 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213533895 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201150793 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425867436 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267998269 seconds)
  done (took 2.668045706 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15586424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098395459 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075761905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090833814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139404897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166505684 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105872726 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132012155 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085313361 seconds)
  done (took 2.552844804 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155480537 seconds)
done (took 13.237872732 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.108301095 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.123167727 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097210528 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136462655 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073074513 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083136217 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079300692 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.24979757 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089468124 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177353432 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083818362 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073038382 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204902573 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107293397 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080432607 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083933238 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107111922 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103622947 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.247144354 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093603624 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101977262 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080865782 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214710496 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.196227791 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180055928 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210996399 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.163077003 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099777041 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078949022 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.153030195 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.180614476 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077792367 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100568378 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119017522 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.078127478 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079410689 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068928091 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16040574 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096869165 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182415691 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.107121425 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11561478 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149372239 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084002694 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079948722 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110174037 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077875943 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.247417302 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.211120304 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.24037364 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079339643 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.168701045 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091644063 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160853686 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095993594 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096998325 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083863064 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119645905 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073627668 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1815541 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07225504 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098564827 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09789542 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071411248 seconds)
    (65/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083188428 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078196262 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.414461008 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069544082 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072142652 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066662959 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088994206 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077833917 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193138022 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078840063 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180519013 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.088043403 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129590168 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094842803 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186378451 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.260460711 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18425509 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079465522 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.073193982 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120891692 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.078814895 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076432039 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08639957 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078547922 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058287875 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149027834 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071237187 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160141254 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083186413 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 0.139302249 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100518946 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17950325 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.163497694 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.163343073 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056429558 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121156787 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132527327 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079710909 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079274885 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097064952 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.159849708 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.056598729 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081882451 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15034888 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163368604 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134615015 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056572234 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08076252 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075031535 seconds)
    (114/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095492457 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056553086 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.142316723 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079238916 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073431543 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078737905 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074694522 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16923848 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.2033471 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.187342773 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077887332 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.056758423 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078023615 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056675564 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093084341 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075808498 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071079359 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078367844 seconds)
    (132/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107200325 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.14687558 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07918223 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071337154 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078001752 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072801334 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070987758 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078877917 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081406996 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083069204 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115873506 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0823861 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160809336 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080229921 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077950796 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09555812 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057981498 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0762605 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073618505 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 0.147384714 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104343448 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082482595 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102068949 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079759328 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092812766 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057658967 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078778132 seconds)
    (159/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08584565 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107619026 seconds)
    (161/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07724545 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.161763893 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071335208 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057354034 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075806883 seconds)
    (166/309) benchmarking ("sort", Float64, false)...
    done (took 0.136725733 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212452497 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126927027 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.106694788 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067691797 seconds)
    (171/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077985283 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073852309 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160971972 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187227559 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069467055 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079139495 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.16741788 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079571472 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069622431 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076954122 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056415959 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.223050515 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059614805 seconds)
    (184/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18463478 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058235719 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072256332 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14509186 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059550093 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057583971 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057946986 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06976684 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069892563 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096010387 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075088974 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101621622 seconds)
    (196/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057461823 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05789941 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096561078 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153232708 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098721314 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088163174 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079464493 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074950274 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080291052 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056647729 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056593711 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126452852 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071194822 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057153538 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070962922 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071903426 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079187439 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080498633 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057810484 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080102999 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058571075 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076984647 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057663139 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056798604 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076566214 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072406772 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0565899 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069786199 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.190940958 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121044161 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135625865 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145632041 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0886014 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093656565 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056486211 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082218376 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145852785 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067653584 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.186216115 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071378295 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072684084 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057468578 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074435253 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189024773 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056982831 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056939229 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05695395 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.116218246 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056700252 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07085492 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07110422 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069262743 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.113616499 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071227756 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076794211 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084877966 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193169465 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071772329 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072674764 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056364825 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081816466 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072486975 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077903068 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094276187 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075901071 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079417614 seconds)
    (262/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.113878521 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057061921 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072140626 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201840897 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082131595 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131659553 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056937347 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094808593 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058471233 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056672885 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072901184 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071443305 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057942074 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07282278 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057739615 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059317392 seconds)
    (278/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068162631 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078233751 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139942077 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057957595 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058230315 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076675206 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07931577 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056672434 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084419413 seconds)
    (287/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071095192 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069283239 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057774173 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069307527 seconds)
    (291/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12006766 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070552799 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078001814 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093283414 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093152045 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058442869 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071854318 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076247737 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057607064 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.058422515 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092212888 seconds)
    (302/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067111548 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057452257 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072980427 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070657315 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076667255 seconds)
    (307/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057181701 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057032831 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070167976 seconds)
  done (took 32.880799445 seconds)
done (took 34.344851647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095281505 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100681236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082151105 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100252563 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088193761 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083568681 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079068435 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085387111 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087048526 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088876852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085316481 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061034286 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081164528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083497518 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081579542 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098398435 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085278223 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080017145 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07920281 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070780741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079385611 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07162569 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073671003 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060049211 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084883706 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078252623 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078033133 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080166669 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07133844 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071727056 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075373544 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079458579 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071410666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084421385 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078374766 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07920173 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080610291 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082262209 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073349067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071769591 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080542269 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071431963 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078880703 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080192367 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077611397 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077429008 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078941152 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083929564 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097084329 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073371395 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080803361 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082170148 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081439031 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078615106 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074949521 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078883516 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076673171 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097634817 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079667641 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07395095 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08080953 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080332623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077453518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078485748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07886153 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080855009 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081751207 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077309565 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080810668 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077954924 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07081576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079051433 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074944825 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071987815 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082370416 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083177272 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069916314 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077427705 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078697083 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076802197 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070611814 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073364689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073090597 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07793482 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072561058 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059889852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075576748 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077859549 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070593592 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079604815 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078273232 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078724383 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072633237 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082000716 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070879061 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077116697 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071565565 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071566685 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072960768 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075402761 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071449767 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073543337 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080722605 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073092794 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077324388 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084982818 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071544782 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078435419 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070008791 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070940933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085684339 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081029444 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071002537 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073746876 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070419887 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079317492 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071216196 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071049997 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070594316 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070583795 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076553601 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070369107 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072398429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.21162537 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.085716896 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071552056 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075518989 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073700426 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072287814 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078030045 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071375912 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071100717 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073148592 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067645428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073364722 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071833697 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079448538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073471098 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079341843 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072719385 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079709868 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076115999 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077564789 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076972429 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070485004 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064711125 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073511127 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073303833 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074414992 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072190788 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072725965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071472421 seconds)
done (took 13.470182631 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074990073 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147316374 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103508825 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101509698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091825108 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07239235 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081511918 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106669763 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073361553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10732647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093616739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091319898 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122123218 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07008874 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071674789 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075156193 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072830767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087575495 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106875473 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092745958 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120893808 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070634601 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097677796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095564184 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093698724 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109174861 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07258212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075523318 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075373592 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098751705 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094355713 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075472311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072488787 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104270973 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09923219 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089308327 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072062501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088912241 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071893894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071623605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073399922 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105276937 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086233432 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086742564 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075716937 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075992182 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072557111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089888785 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096003852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085030926 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091999298 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10732284 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074818584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.071329063 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070259923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091908745 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.070791811 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074258002 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071840789 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074399932 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071766786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075038337 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086845797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086230539 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075976448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085677123 seconds)
  done (took 7.236211586 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092929717 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100308738 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.093327667 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091964386 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07190689 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072185949 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072227831 seconds)
  done (took 2.145842137 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073907394 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095036563 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096076503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094515614 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087692315 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09461717 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083135239 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07327103 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09330437 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072961158 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093754902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106644027 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075668972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079876284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096713585 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072010776 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096156065 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072287253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075154218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096560605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074957954 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101142511 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07566171 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072483855 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086481482 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07232829 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119868185 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076972831 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073692284 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075099779 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07032663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11352677 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086601857 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080584744 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072160604 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086902572 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087246189 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070747798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.089493476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081751287 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086851316 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073158137 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073951481 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07071144 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076439503 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083483629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073237442 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073069289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075720918 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092749339 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0734673 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086121006 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075432112 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077794562 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07430029 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078528465 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083105101 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072741637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092550469 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07416209 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089644541 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088781769 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086394276 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088990859 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074345427 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086328224 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086955428 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075196186 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074198096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075652074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088514226 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071148536 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074311033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084185509 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07412836 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095377236 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096000047 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074493354 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086189466 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073003648 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072717225 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072853402 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096481754 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077874824 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072215753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076544576 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076017114 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071141183 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071824548 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079153302 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070421357 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073813785 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075637212 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075637499 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07526874 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08986401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074852492 seconds)
  done (took 9.454419936 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075302399 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073481563 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074525185 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073263894 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073068392 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07384523 seconds)
  done (took 2.017227852 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101932135 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074542856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086108053 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077416349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110669578 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092806657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09289189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083993135 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089691012 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08410716 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.092051453 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093696473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09824724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078180374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.092591828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077032799 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09287756 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081335412 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08410121 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078231225 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09210398 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077691895 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078359375 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087460963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.081478332 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077664351 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072547372 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083789957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084264915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083916795 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077502692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081641661 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076100631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084265012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092450909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076582476 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077549049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082432569 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077732135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081758935 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.093969153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078175701 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080078941 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082767006 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083982656 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076652505 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082600097 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080745164 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091962861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083506608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082882207 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076726195 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081794917 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082977909 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076189981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083581501 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082669728 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092613136 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077591762 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076378458 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074572269 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.081664747 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082995563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081207192 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084620096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.083131656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076291684 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077904833 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078823974 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077404048 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082791624 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074730152 seconds)
  done (took 7.545167912 seconds)
done (took 29.941047575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542598317 seconds)
  done (took 2.082294115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622783346 seconds)
  done (took 2.189469045 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.489934241 seconds)
  done (took 8.056833187 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407493748 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511411443 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728440322 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138054668 seconds)
  done (took 3.382912962 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712310595 seconds)
  done (took 2.286626754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220121846 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.208891406 seconds)
  done (took 2.010310376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382742631 seconds)
  done (took 1.949353238 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143685148 seconds)
  done (took 2.714270468 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265499528 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180250326 seconds)
  done (took 2.022556344 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48173492 seconds)
  done (took 2.05113667 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.881528491 seconds)
  done (took 6.451140727 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217582571 seconds)
  done (took 1.829670305 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241708247 seconds)
  done (took 1.81251966 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733563557 seconds)
  done (took 3.30739051 seconds)
done (took 43.719592926 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08627098 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085735052 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087206425 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083939313 seconds)
  done (took 1.901852873 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084280064 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078306003 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081628681 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078164025 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082205379 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078430847 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080246421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081124717 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078017644 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078486187 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078159202 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077785672 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080936091 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079534563 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076868635 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080712912 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081443095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07837513 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081235566 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078307113 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075729055 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08027513 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083022497 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077056814 seconds)
  done (took 3.486963169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084289139 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078816534 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080094235 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077287648 seconds)
  done (took 1.904318811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085826605 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097465608 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095657807 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08313982 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098037648 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091941612 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074628111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074612824 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076392497 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083371045 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073943517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101926994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.094310129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082855857 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085818726 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071930493 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074113019 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093202977 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083747729 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084421652 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07577447 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083785207 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073423017 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094424324 seconds)
  done (took 3.615877684 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095676707 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114239732 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086459547 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093447922 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09629189 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0707395 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093359019 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096602699 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131644561 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070929185 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076178284 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070784615 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078555415 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070902681 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08680321 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112829971 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117710141 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074182353 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103141412 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072159011 seconds)
  done (took 3.406452884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080936272 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074758032 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071133651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074873768 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083280492 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078382572 seconds)
  done (took 2.054085228 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076998284 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074643117 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07367392 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072311892 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077397324 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072357796 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071184923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073268107 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073467539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072695258 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072966564 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071934278 seconds)
  done (took 2.467322628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209657905 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073998149 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073872029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072078082 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076510682 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071970083 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086897712 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073463885 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097295337 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072471413 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072424575 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07436642 seconds)
  done (took 2.639939943 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217288224 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082274 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246441838 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156991437 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117147247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121609901 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118868598 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120146242 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148090802 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106590626 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174607414 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173499805 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113350745 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142834046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094831165 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111952464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160544424 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169171456 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111294798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173546694 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151646445 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13244891 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154537675 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108178675 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111812065 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127739939 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077407974 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086249058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175974023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139802352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150533762 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116497307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097581259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183476489 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177728222 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146795341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153088079 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090336806 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11056775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14082844 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205879077 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09458069 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30788035 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117449406 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089193778 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138686938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126052137 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12652876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111048233 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096222342 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150297663 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190064661 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1423809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093332415 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129093016 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118616716 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119713427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118181511 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18607251 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167207875 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133885719 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076679709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11428541 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158978987 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1386994 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114144606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132515705 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098617244 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143858287 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163497173 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126779916 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150326351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122257526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095305637 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125533666 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146928111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133706994 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166259168 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129117609 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078633657 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130182317 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107264409 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085988866 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152009574 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080625406 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181289333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104561391 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114131394 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130418277 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115083013 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114097947 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306206763 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151152225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109907991 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072427355 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110438747 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126518996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153187691 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092260642 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115162878 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124304501 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083157319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142508187 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080360236 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128623404 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082896838 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130622734 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135636847 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082326285 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12759376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109149286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106583391 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137594696 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16599391 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093676906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086716912 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17459868 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127779782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108225055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150879836 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162469501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106199656 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106415409 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154809869 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184783012 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095505609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16956189 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111452939 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088871366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093626069 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130887549 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117612102 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128946897 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087180011 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12325365 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174340563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080530844 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100489294 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138135548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083778885 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085740358 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110009932 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110145426 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100878795 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105454523 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.250399308 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143712365 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129779868 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111260312 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130248703 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104164421 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176882383 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093243411 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107496989 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109252315 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075916944 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140514419 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16352538 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084922998 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169996865 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129658528 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12156765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124574665 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089550731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147119049 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084951593 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075876619 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149494407 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116785609 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115663445 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15659892 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120791259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130943636 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125204061 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137650501 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135240721 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135237792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110605492 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093981373 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117439308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132851373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078894769 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096258397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085552824 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110078397 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101285645 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088356373 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146406092 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129734237 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115120773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117698783 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100999941 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152700464 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080787652 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13230909 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124471191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100397389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157506204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301733523 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13809605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104764824 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142548808 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075961913 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080127218 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094620775 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130491922 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088368872 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089619346 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121358749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153211621 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135948809 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142195353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129725518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126449594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162450641 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075412113 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122632188 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152969248 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129036716 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109507661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09537781 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104377562 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147746996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112945475 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187103676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11919422 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128808552 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158815186 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106474274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084512541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109138605 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141632283 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109466576 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150315987 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10527444 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093693106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115935453 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08027229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10405166 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132936929 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123960727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14115694 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120436681 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136847344 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082169891 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119999663 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126415833 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126244348 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069548676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125077951 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.310511939 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100958578 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124276014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161234462 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085297098 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140335768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182429475 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151437513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090646752 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113506562 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125199417 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13411263 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126265443 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146327775 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112757826 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142328886 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115549906 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091210914 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092582873 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10297526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111204544 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100019153 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112034287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11865877 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100901472 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136850414 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109433348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115380375 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12332799 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103778175 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096121677 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101531363 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182326803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123300719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17618645 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104647591 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149988101 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168622691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080250076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084215747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083411618 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146695584 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089776976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135610972 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112497584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122778025 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127959411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14693647 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100345034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073803301 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113740255 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137198236 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128458663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245582808 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109054621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170379829 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107126229 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085354765 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119141094 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12128599 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109140763 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182778633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067822911 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111865237 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081455493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086714313 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13343504 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157539386 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085065862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108878337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124948609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117309235 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134302858 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10644744 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116892948 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131843569 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154694166 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13332982 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09480877 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116988313 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135235643 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16180381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109401394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101690282 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177125087 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158273678 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165962949 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092954363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120468867 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119701922 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114190011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144208181 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089453768 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169024654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087194848 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141688423 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10812201 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093888839 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133776108 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113422678 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093304479 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153074211 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122162302 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230194872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083298038 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124003859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125186457 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111328591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081056914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145501763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079610355 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138158573 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166737089 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086796021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110837207 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103308436 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084961469 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112430425 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10780387 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092172737 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104636269 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177307277 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092869243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157260279 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139902888 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118351002 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140807687 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108089898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645609844 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083287095 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157839599 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122395091 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182375913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106844051 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124335773 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116614626 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129301274 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149788952 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109788537 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182976782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137642162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121440209 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085124674 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107853869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109207266 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092939373 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113600807 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119267952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120084613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098224107 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12070434 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129602083 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087439564 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100504745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161304476 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265594736 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149700835 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147175337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091409971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128379502 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143221456 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086112526 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127475112 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15792571 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112070026 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106792189 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086361573 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106155664 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164983047 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078828887 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165632865 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125148975 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115463459 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119334349 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118081056 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135630156 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112531826 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126171256 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09765935 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115427345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119083607 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086703576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082979676 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110559831 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115887111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103459243 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102982844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103757395 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157630453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078039993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104804772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120949007 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149443408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179550422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094434815 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08833473 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124050994 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119860684 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118088818 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127097368 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084196124 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087641247 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086262933 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082924306 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113940955 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117917374 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118528818 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115259978 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31217419 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089120079 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234983324 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100797352 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111193813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075391641 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083716063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101242023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103750494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113231365 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114863932 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165818259 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100603065 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095733374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096999635 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079749789 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089396194 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134439256 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116291054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123592053 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104984943 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068022361 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11379969 seconds)
  done (took 61.831703289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117267343 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08748932 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09936149 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149821954 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127068014 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20748393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158951103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193391195 seconds)
  done (took 2.831734759 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076302626 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100927072 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110525495 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.090176559 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072284229 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074098816 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237902964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087090956 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072182948 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104784622 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084040243 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074469544 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435277396 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074523606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076271446 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067513068 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072475015 seconds)
  done (took 3.591102383 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.402575783 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620555575 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357134894 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07822904 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.946830704 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091235571 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.16125492 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134598467 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079160758 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543226953 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412223543 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134013109 seconds)
  done (took 18.654033628 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084479706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076506081 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093453099 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093643748 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08099282 seconds)
  done (took 2.119889057 seconds)
done (took 112.117098187 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090284845 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.624005496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059105347 seconds)
  done (took 2.403867765 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092679574 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094420121 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.09536134 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092975614 seconds)
  done (took 2.074358503 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081910692 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083179604 seconds)
  done (took 1.857875827 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.241510172 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169765024 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105044013 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091762004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087183409 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087701299 seconds)
  done (took 1.96327787 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080674757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083961243 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081032895 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084780636 seconds)
  done (took 2.019613426 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08574692 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060242821 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063052332 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066492001 seconds)
  done (took 1.966621125 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096001833 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088341218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0875422 seconds)
  done (took 1.962915995 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111369649 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095247731 seconds)
  done (took 1.895953402 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.09083352 seconds)
  done (took 1.782548408 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104550846 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110193152 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.141091881 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119546657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149718817 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119707471 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093858849 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.095296238 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08506813 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095260938 seconds)
  done (took 2.804806612 seconds)
done (took 23.032248213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087473729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.471720981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369303673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098115281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674960785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363209718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98695742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09823537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120543404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072769318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089740051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654332047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978471755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419684668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964145628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328442868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656313459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073902505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073233257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073202342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973036391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072773568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073438215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073982573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653429452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377662757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073990498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329272833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090731987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075302041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360531445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073778524 seconds)
  done (took 16.559649118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079858892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126462414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078363285 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089524417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076143505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074569018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077529019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075281435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128094042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.079297474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094815985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076064943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080478299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077295702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097736046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076869213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077437424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077459956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077421698 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077285912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096695764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076678452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076905936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07795053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074612356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086069229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073804575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073596414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073868262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075650433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076544491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074675889 seconds)
  done (took 4.337462743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122818658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129353332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079256132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108516211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116516645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075328004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148216211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09958811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132129509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074342399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092944169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075184566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109464125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077380433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096079077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077145723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076481567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076637246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076569498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075729066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092955276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074396262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074532916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074380808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07385516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087377807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07416186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074496596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074534259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076172241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077398837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074634406 seconds)
  done (took 4.553119355 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.08217461 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.084152535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091606728 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093367473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07758559 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080113845 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081441982 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077723734 seconds)
  done (took 2.377578373 seconds)
done (took 29.529941576 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.088506754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077870343 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080849325 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091319937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081918046 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085787344 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074490839 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080676307 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077977919 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078290151 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080437732 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072765162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076842564 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072541591 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079996183 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073050051 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085453627 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077420919 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084940045 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085046137 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07511044 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078859804 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080231975 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084899907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084859217 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085350322 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083172621 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078598007 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07495715 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075823328 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082401221 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08932765 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074210426 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084704013 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074171238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073078492 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077419704 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072954746 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084462158 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082573955 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075272599 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082039947 seconds)
  done (took 5.042411223 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097023933 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102344733 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09388592 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07050864 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075340697 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072438314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095917888 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068213385 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066455068 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095582229 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063516703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065803658 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069711375 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059226253 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065682702 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06232994 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067755445 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06081682 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066027128 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065926806 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094620621 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060699036 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087152129 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07161748 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063316488 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06797279 seconds)
  done (took 3.644787001 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083005086 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093227349 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095780418 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137226012 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111478992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084976319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084374637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101244758 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09392193 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072241261 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076972654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098197575 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095772635 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079803229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073488269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091690729 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088694607 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074364401 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081454729 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09964706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092736847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091917954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101510336 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088671489 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07277408 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075506349 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076790391 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086821865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078127423 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082284731 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076758899 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076452283 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075131471 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084740826 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077941544 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077740613 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.101093695 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084783082 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08552133 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074117556 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08133848 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074192115 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098324622 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131893221 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072489156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079649025 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076912623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082614094 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.08490198 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092956883 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084335273 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072885481 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076050875 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072547713 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073291525 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086634644 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075340854 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075221683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082190227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078585568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098155789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077964183 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089024559 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072964251 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080973159 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072170888 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074214325 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071990775 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101704978 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074298853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117532326 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074129809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073816666 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082016039 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080895649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079307524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073646112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088625444 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084523225 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076695741 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08196729 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07638241 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076682483 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096856285 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075147338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07486488 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074082173 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079412239 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075869199 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074792248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0864316 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072937999 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075932856 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090464899 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073008036 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074219235 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078557531 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07760047 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073182277 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084580728 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077917086 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073613081 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08290028 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073640271 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076627287 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085975528 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079384397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071847745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077526609 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078815551 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074291937 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074908191 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076400198 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075125378 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081781462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079497961 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077398827 seconds)
  done (took 11.383755814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17701658 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168123097 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076573029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154539574 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082155085 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086170867 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158317624 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100877051 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073295084 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074054412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074234507 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117829837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112736046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129765692 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.088593241 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076367256 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093606973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120683071 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158808126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153448536 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09085225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08271715 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075964332 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075022595 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07627871 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084179073 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091547712 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082824699 seconds)
  done (took 4.690090771 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089186381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113964434 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083909222 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.098625941 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09662551 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07397017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076294203 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075039128 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087373038 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084128095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072923437 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078403207 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080620959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07677149 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074333392 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080446656 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080454017 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075241873 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077170304 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079094189 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084683376 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09907408 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.079706976 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.078937725 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081730298 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076388433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072860404 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093249867 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077276407 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105407316 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.075096462 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082253172 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092117013 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077794249 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076839232 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076622996 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.077051858 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077061987 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078594015 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074900592 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075302108 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065883296 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075375894 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08803669 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083038257 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062393625 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078643973 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078983231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078821645 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071673816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076609525 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076439297 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076791663 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083514938 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080868485 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081883852 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077549143 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.083115602 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083295421 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073021413 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07054537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07288739 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077854595 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07132988 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082100279 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077802278 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0715244 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072903248 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075552165 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080693764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072942841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077637072 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071861245 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075398957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078273996 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075464896 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074825306 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072008009 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07363536 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073738666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060900664 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073313146 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05884307 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076213965 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07267737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072496715 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073883861 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.079186853 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088857787 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078291691 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081504173 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077375303 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07567456 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080223314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069371712 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078853752 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088886347 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.092046566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076464016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074314696 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.091055537 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081010097 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074992025 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062222048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079071193 seconds)
  done (took 9.999117129 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099570016 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079635152 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093828586 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.1002681 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09655376 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084364781 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086793762 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078460586 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092551953 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082941773 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085840489 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077172615 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087438629 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086175027 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077907875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085054176 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078355968 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091421043 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088513705 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073819941 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081888692 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086375896 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096065594 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087734805 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086571464 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087952714 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095800583 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083594765 seconds)
  done (took 4.189567075 seconds)
done (took 40.65445105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.813238711 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.973665177 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.797396901 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.165468171 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.959146785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.813268646 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.975531968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.79803805 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.116012165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.824949835 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.997915555 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.918824024 seconds)
done (took 66.014396351 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.809744065 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.935247254 seconds)
    (2/2) benchmarking "String"...
    done (took 2.035395718 seconds)
  done (took 5.699169851 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.056720878 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.37339025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.047452255 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.799717075 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.801719464 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.13152622 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.600293304 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302483585 seconds)
  done (took 30.785362904 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.971397653 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.023750166 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.468158703 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.492718178 seconds)
  done (took 15.731082603 seconds)
done (took 63.891579374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.825898413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.835409253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82643249 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.781252252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.856512591 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.81185654 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.108929399 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.815084898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.794434917 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.78320572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.801441126 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234906461 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.79660165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.136217525 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.800525016 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.803455973 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.812807597 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.349758661 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.953596633 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.808351951 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.799375691 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.825994316 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.804616726 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.80473184 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.846758344 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.796130403 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.235323498 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.798561435 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.416647259 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.801604218 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.828238305 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.239814397 seconds)
  done (took 204.863189443 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.800760031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.915599404 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.934714508 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.835586267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.32089749 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.974335359 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.919749944 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.496013501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.801069719 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.812049141 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.056064773 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.797056748 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.106621438 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.744431334 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.830601508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.806400643 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.059857833 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.046171592 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.837364806 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.969838246 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.824592741 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.964981324 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.903943532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.959135405 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.836270946 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.917450748 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.822818552 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.942877362 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.996556348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.01291326 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.840002733 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.845221227 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.024854692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.675983752 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.822262649 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.829835058 seconds)
  done (took 172.015506327 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.966215964 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.802140271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.801397584 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801317678 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.816087801 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.80107284 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.926905532 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926313542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.422378368 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.412924534 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.806686137 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.853099322 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646861795 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.798097851 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870334394 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.811028896 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.801275128 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.819029053 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.829028189 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79846092 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.8031094 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.9295858 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.814456683 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.004073155 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806686181 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.800960454 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807385112 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.174831323 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800770295 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810181246 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.066578824 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.80209351 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.803899117 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.70352978 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.598217085 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.800498799 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.805634212 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886706655 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.803411998 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810676222 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.803770988 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.025944645 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802854877 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.808075884 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.805739974 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.809503986 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974835034 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.80581627 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.929205217 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805297811 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.315890315 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.805303214 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804522128 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.406404513 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.49375015 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.806928101 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.804212796 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.809520495 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.805845105 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.804448003 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.811104624 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.416459201 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.879729677 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.803823422 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.808965735 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811478362 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.805268808 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.897207942 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.810942442 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.303649838 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.867072907 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.941275591 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.928932011 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806936278 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872994028 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.896180323 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.803227289 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.806850418 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804335255 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.806932233 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.885735476 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.803377038 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.932986238 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.810126045 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.804252425 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.85624403 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.875013435 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.802968073 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698663614 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.806385669 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.806592069 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.140378184 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869697011 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.803174385 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.806512015 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.80608171 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.931201216 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928102907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.583184802 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.809165819 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.461271052 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.808645634 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.951151899 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804464052 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.996144786 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.808815589 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889742704 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809075324 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.807074981 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.806586652 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.837938862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.808555669 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.864053768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.804241865 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.182298884 seconds)
  done (took 406.035121527 seconds)
done (took 786.666336257 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.480089806 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.443066932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.547450261 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.463783197 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441335595 seconds)
  done (took 14.110723757 seconds)
done (took 15.850059857 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.894957898 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.900564461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830169563 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.896444635 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.82813639 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.896277684 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882976692 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.831526305 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866814273 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.831447342 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865519391 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.83219939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.817345271 seconds)
  done (took 25.911441648 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.040997739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.043473413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.880456798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.043188421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.856042774 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.047256637 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.970485891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.959785058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.959388348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.824780802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822952616 seconds)
  done (took 23.189259807 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.045485324 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.051855879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.88447794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.04758788 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.861270831 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.046591542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.973941274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.963433995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.962402929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.82514015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.821681756 seconds)
  done (took 23.222325953 seconds)
done (took 74.06148189 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.818238547 seconds)
  done (took 3.556090193 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.83953044 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.001158292 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.822557637 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.822939879 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.815952013 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.819080191 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.820069102 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.819125412 seconds)
  done (took 16.498638403 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.819212205 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.814559101 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.817091525 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.81494012 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.819958039 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816300495 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.817759173 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.818006353 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.81549228 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81650843 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.815747105 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.817158762 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.814861326 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.8182198 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.816341566 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.817960127 seconds)
  done (took 30.810125202 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.817152388 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.816296674 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.814317684 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.81534176 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.816848047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.81616912 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.816839168 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.816310498 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.81605603 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.815900493 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.818029382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.817245733 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.818494633 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.816945086 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.817595763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.818877935 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.817215502 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.818086846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.821473645 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.816933427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.818534771 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.818424165 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.818749981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.816865342 seconds)
  done (took 45.357486327 seconds)
done (took 97.960861659 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.70767071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.195719184 seconds)
  done (took 8.642810784 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.822139311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.820158959 seconds)
  done (took 5.415295039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.820060494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.822371391 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.821892717 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.823842623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.820647162 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.820961609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.820557796 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.820920078 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.819169895 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.820613765 seconds)
  done (took 19.953112932 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.820446535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.821411937 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.818538638 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.821205371 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.821623747 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.820127751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.820033849 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.821901601 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.821917275 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.822324713 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.823056394 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.819400454 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.821821152 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.819009227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.821947444 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.820481803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818995909 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.821486926 seconds)
  done (took 34.51732266 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.821267109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.823670299 seconds)
  done (took 5.387837732 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.819383045 seconds)
    (2/7) benchmarking "second"...
    done (took 1.817593928 seconds)
    (3/7) benchmarking "month"...
    done (took 1.821638529 seconds)
    (4/7) benchmarking "year"...
    done (took 1.819483918 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818767515 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.819213859 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.820052642 seconds)
  done (took 14.47769234 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.825341904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.985619237 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.06051433 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.5102104 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.822961672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.826351717 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.764723619 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.824883558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.825452658 seconds)
  done (took 20.188558794 seconds)
done (took 110.324316099 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.642808301 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.814498625 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.169363756 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.903451251 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.831290763 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.112047651 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.849544854 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.118993961 seconds)
done (took 43.186843215 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.901132478 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.351880219 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.382052573 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.038655548 seconds)
  done (took 12.517060126 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.799556754 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.356567205 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.856528483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.480873806 seconds)
  done (took 20.411354246 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.186265964 seconds)
    (2/2) benchmarking "read"...
    done (took 2.164918529 seconds)
  done (took 6.098912002 seconds)
done (took 47.676007655 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821315665 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.824493917 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.822532432 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.819110135 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.824758513 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.822713702 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.820377605 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.822855456 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.824088241 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.822969098 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.82241906 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.823917838 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824451967 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821975294 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821912457 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827094657 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.82362099 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822670681 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821804821 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.822825822 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.824087276 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826295642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.822748169 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.821805353 seconds)
  done (took 45.498205704 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.825552848 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.822905199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.826991382 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.826657017 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.823382352 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.823322272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.827548498 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.824582466 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.829490398 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.826406602 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822154895 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.823045529 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.827100113 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.823225809 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825945279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.822479637 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.826661585 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823513473 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827201277 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.823999098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.823166985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82450057 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823824752 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828228863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.825606527 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823466986 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.826293173 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.825150063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827441532 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.829072536 seconds)
  done (took 56.505346317 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.830787061 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.835714041 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.82733598 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.832324815 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.828979931 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.827968911 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.82846465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.826021489 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.829094321 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.827828713 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.8285163 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.82792497 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.825721996 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.83111977 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.827667215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.82918339 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.828829877 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.827545652 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.830126367 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.826549019 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.82846887 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.827547881 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.830513577 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.828305434 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.829235367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.830184641 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.831768301 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.831077756 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.826449172 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.827863466 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.832854703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.831453645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.828133823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.830448695 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.828654116 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.829366931 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.832631546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.837376723 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.829781723 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.826289308 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.830084876 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.829366037 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.83028344 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.831627804 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.830300126 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.828022541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.828118968 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.831043652 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.828023923 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.826412305 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.82769201 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.829668717 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.832655047 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.825279854 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.82734628 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.828166147 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.830948563 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.828388919 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.832077806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.83119051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.828437105 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.824443068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.828620853 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.831172444 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.825947596 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.830028146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.828743725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.831530891 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.830657849 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.83160838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.831821324 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.828925612 seconds)
  done (took 133.464341253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.828104404 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826862751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.827308106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.827939657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824279794 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830495754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828243957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83095309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826851486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829893271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831313455 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827587863 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827370909 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830734781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828679914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.827506964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829812294 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826404807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.833023438 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833694318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830973593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829454496 seconds)
  done (took 41.98665101 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831373452 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.833530025 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.828354851 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830565218 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829500152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832434431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832244344 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.831522135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83215903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830267066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827886533 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834934833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832737864 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829087201 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829927511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829523101 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831288218 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829419495 seconds)
  done (took 34.708181401 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.828961758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.82996847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.831160844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.831123894 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.830655091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.832878553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830033476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830726051 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.832642078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.831807333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.836114914 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833195346 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.832722865 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831090479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834579429 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.831847204 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.831691237 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832060953 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834214406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832091805 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832350717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831978499 seconds)
  done (took 42.057487551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83247106 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832462369 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829068298 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831812678 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831140736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835563875 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.833986104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.83330686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.835163096 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.83466585 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830726478 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834465158 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.828954709 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831172641 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.829413649 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829156751 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836513789 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83407816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838220631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833769996 seconds)
  done (took 38.410886836 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834635073 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834912755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835630777 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835024743 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835569521 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.83452256 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833312045 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.834644923 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834586376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831645202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836462902 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833613325 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837560303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83730797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837049771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835006801 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835005024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83348895 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834107637 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839574307 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838113632 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838788591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839567886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838892093 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834949612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838635154 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837649319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833540628 seconds)
  done (took 53.162727847 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8349636 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83835972 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.836105708 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.834946086 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.83406988 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.836962095 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.837821325 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.835037088 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83776297 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832490779 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.834344838 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.835918613 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838695838 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.836558372 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837670808 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.837653858 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83641894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.834316584 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834420254 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836145729 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.836537815 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835042847 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.833728208 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834243498 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834072345 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.835096261 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834620669 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.834525632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839886383 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.832368307 seconds)
  done (took 56.826866979 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.855036317 seconds)
    (2/2) benchmarking "in"...
    done (took 1.856225581 seconds)
  done (took 5.469575409 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835291872 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835873302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.834931633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.834826324 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.836528883 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839841728 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836152655 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834816558 seconds)
  done (took 16.445310853 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.838250781 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.839455934 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.839471339 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.838725388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.838446708 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.836269875 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842136659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.838151706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.840906915 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.843261095 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.843173683 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.849196697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.840548406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840127091 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.834338834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836649002 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.836241988 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.835598071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.840555572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.841249062 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840680577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.840329332 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841013459 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838597831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.843974726 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.852276233 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.84048356 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.839593666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83856759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.844492988 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.835715746 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.838809587 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.840109812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.840892422 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.843169213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.840545014 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847000354 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.840090975 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.844198473 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837753794 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840230468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.838321401 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.837146808 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.84209753 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839846497 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.843014265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.841358282 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.841320464 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.84089531 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.843658076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.848809047 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843340629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.836755569 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843130728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.839293539 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850801385 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.846943791 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.845135584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.854209354 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.850616337 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.856016763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.848857192 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839254284 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.842263744 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848453601 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.866749843 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842558412 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.842813495 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.839491725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.841402043 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.849498699 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856347134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.851724587 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.840522813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844091147 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.841539175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842570801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83885155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846299929 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.844849747 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.841847494 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844376706 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.855566675 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.868743024 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.839304188 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.84370773 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.842285509 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.841005822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.843275042 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852274593 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.843059958 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.84395339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.844334932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.844243528 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.844773827 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.843502515 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.842809957 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843958047 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.838873616 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.842586704 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843623442 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842545126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.850523541 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84645324 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847361227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.852854344 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.846926368 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845754614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849528272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.843295419 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.844145469 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.841815328 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.848803513 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839649526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845855724 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.855284575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.843677456 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.846667966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.848105402 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.844981475 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852509235 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.871339704 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.84320649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.842951382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.850514288 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.857805406 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843564741 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.848076631 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.846298152 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.842115109 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.843592068 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.845850969 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.84687013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.845662174 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.842977066 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.844712165 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.842886388 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.843500052 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.84343706 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.849837437 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.847809044 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.843893972 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.846345523 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.848770232 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.848556101 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.848131523 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.850344566 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.846806583 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.849237346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.846269759 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.841522497 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846577774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.848529687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.849056711 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.847725118 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854737568 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.845211033 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.845279721 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.847499969 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.845868789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.845842394 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.844576578 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850197639 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.851181687 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.853965527 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.847590957 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.845387732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.846679452 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.84757278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.84416838 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.848533823 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847649573 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.849227504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.853743856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.844632898 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.850929713 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.848783502 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849901644 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847347729 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851415459 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.848179155 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.860194062 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.847102005 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.847660129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.847836309 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.84564335 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.848346345 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.848834849 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.849213786 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848904601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.851813262 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.858128873 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.859838788 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858233395 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.847756676 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.851466939 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.848479758 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.852302895 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.85011646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.848463481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.849734378 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850994884 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850214254 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.850099215 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.853122407 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.848031153 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.845499056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.846444326 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.848719433 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.848941814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.84820623 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.851042523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.852499956 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.846115556 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.850639744 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.851226872 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.847763964 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.847468232 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.847243974 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.84801754 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.84771037 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.849739969 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.856120997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.850338788 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851637726 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850664211 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.849304608 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.848905521 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.849127223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851212696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.848817118 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855314182 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.851836115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.851326022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.854633624 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.851258476 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.851772423 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.862045841 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.852659319 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.849109032 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.853172031 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.859739681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.85030737 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.851945992 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.851327158 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850921597 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850671549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.858136356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.850122484 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.853141755 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.851564849 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.853317949 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.848688869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.851919791 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.850734805 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.852484788 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850962827 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.8512015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.852474933 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8538172 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.852031836 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.855115994 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.852923154 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854636546 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.860386017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.85416398 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850141098 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.854377734 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.852857927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.85417013 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.854215725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.855036185 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.853403608 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86875292 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.863513043 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858278148 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.855098635 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.85455799 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856425867 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.848028896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.852998311 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85042542 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8511742 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.850579961 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.853603174 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.858205299 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.855971645 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.853008156 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853727621 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.855447996 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.856885559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.84962796 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.851302718 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.850712112 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.855695295 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.855347632 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.854297625 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.855554074 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.858131721 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855639292 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.851213685 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.853245772 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.857048851 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852748966 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.855298857 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.852245726 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.853895172 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.850572723 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.855450031 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.854434213 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.857711444 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.861916154 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.854446157 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.865823144 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.852061246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860263898 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.852404615 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.857102993 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.866946336 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.852257678 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.855615299 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.855731821 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.856565048 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862336246 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.855222817 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.852661311 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.860250934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.854623968 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.854736413 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.853883932 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.855622705 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.855562851 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.856511765 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.863974496 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.86336649 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.857825941 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858132953 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.853705481 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.856850029 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.854781747 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.853866384 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.859245912 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.856242104 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.856672422 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.855640322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.858139756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.860679814 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.854340947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.857299126 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.853277903 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.85319201 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860552122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.855343496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862767174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.859682922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.864313284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.858735249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.862255275 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.858286628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.856672545 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.857911195 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.854477745 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.856396862 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.855014843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.852656729 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.85654711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.864894488 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.862660937 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.860518142 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.859465589 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.859388427 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.858484985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.855863656 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.861266864 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881454612 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.854052378 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858090018 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.853634353 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.859240014 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.862579042 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.858324854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.856949057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.862609298 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868110219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.863875349 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.855510473 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.855798059 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85668352 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857580247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.856776893 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.859542677 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.859838373 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.856532591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.859570834 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.858960971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862250902 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.85350731 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.858354225 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858050694 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.858089727 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.865761353 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.85838446 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.86158837 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.861809783 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.859870301 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.859748479 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.860963271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.857921243 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.855689584 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859069756 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.860650052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864820596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.86812068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.862700819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.860021536 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.86443094 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.861267858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.859231956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857583616 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.858577215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.858928998 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.858222721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.857320773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.858503984 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.855371199 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.861308349 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.861422516 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859558011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865120779 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867746793 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862639069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.857898279 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.860534597 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.856725605 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.858637738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.858901537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.867646718 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865012261 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.870799491 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.87004519 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.862645664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.859474416 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862663016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.869443879 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.853870266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.858286354 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.860769824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.858434365 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.859465953 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.864075065 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.861570643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.865589698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.859931281 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.858689436 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863725503 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.859516346 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.859870885 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.858304677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.859820605 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.856321736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.859555573 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.85973052 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.861451441 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.870022698 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.86129835 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862573777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861819535 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.859187126 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.861788643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.865508236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.857749909 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.862937122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.857805259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.859521258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861613155 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.862742306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.859182924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.860286639 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.860344389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.864243207 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.863416973 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.855752169 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857763328 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.860580358 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.864591552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860934803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.861056791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.858237561 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.861589884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.861287313 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.860869056 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.861399662 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.860801245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.858746589 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.861219652 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.863634079 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862286277 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865043974 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.872564367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.873177773 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.862133172 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.864065683 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.8628249 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.865120323 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.857985313 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.862029677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860372453 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.863685417 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.862199768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863688242 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.864764103 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.865531256 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878179523 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.863499173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.861511108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.861863598 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864494844 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.858725995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.856531039 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.861445812 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.862412444 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.866916898 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.873864508 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.863923098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.866949372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858927024 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.861357943 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.866594442 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.86506195 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.872582884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.865122377 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.862714861 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.864079773 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.867761894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.884099686 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.868197789 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87767053 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.891828334 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.86334711 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.864630276 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.866288972 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860501142 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.862782213 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.864276933 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.869129914 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.86466581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.865583183 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.866639605 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.867748295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868394758 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.864650355 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.862443801 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.863744718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.867652662 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.864353085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.861506608 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.867773269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.865978084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.868078028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.866666979 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.873166332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.864868894 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878547831 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.873888943 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.863553748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.866606498 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.860901107 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.870652096 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.870783606 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880435041 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.877774673 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.8667912 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.86811093 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.868193968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863849035 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.861448005 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.867628607 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.864265183 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.86614218 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.861706324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.880108502 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876368422 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.871481735 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.868216968 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866977012 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.865156064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.866496673 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.869402553 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866223038 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.866954763 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.866729133 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873046889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.869980757 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.867152434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.870507736 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.877637991 seconds)
  done (took 1107.299655978 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86465084 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861622211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864272282 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863495094 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857606105 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857791215 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859179406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860669398 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.860838632 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.860821005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.861335535 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86281187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859636803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857781742 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858835264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858264896 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856402398 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859981371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859985336 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860550233 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859680651 seconds)
  done (took 40.852685888 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.862444146 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.858721106 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859295762 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.883190014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862768576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.865746663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.864196049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870583184 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868356411 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865732539 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.866172165 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868714129 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.862594618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.864856106 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862848069 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866794064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.865187135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863862343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.866599513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869097464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868311901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.869106372 seconds)
  done (took 42.837832124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.868907932 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.868194967 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.861824397 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.859696436 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.862806005 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.860546033 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.862274999 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.860639864 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.856980055 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.857147906 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.856022542 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.857507912 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.864835406 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.862569635 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.857695149 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.856076658 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.997935732 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858901212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.853640488 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.855570176 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.853439999 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.862176666 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.853935512 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.85856205 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.855829114 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.855698296 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.855677743 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.856347262 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.855145582 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.855140723 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.86038019 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.856006256 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.856208335 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.858665675 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.858623731 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.858506703 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.861627605 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.858668486 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.854316787 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.856315333 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.865762812 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.879757304 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.853383509 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.86127426 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.8568647 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.856845736 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.860160881 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.874714238 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.85528628 seconds)
  done (took 93.035196073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.855381913 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.856323696 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.852930649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856540518 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.855580069 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.858567018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859599316 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.858035071 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.857488085 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.855605375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.861837221 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.855123487 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854801869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.855779122 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.857116108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852923036 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854446694 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854149941 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.855454215 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.855943566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.854661003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.862341558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.857570528 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.854213158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.857728791 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852738057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853737222 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.859196562 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.854853913 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.854556884 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.863956933 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860116962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.86112295 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.854720214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.855223841 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.858272842 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.857667934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.856363479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856714466 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.8532322 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.856005979 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.858486202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.859041574 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.859283118 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.856097336 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.855791495 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861206314 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.852635561 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.856275518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.858254177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856547892 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854216543 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856475288 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.855687878 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86106438 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.860331542 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.856692323 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.85593084 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.859210675 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.856333331 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.855735792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856675721 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.854610691 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856576111 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.857611818 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.850478723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85196055 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851971675 seconds)
  done (took 128.021873704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853194973 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.859582741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853657955 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852711066 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851619603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.851039568 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852848804 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.852308354 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853974564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.860437768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855054754 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855226224 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.859448802 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.854462335 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.851645374 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8514539 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.852710426 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855138508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.850830795 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855161905 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.853211636 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856131924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.853804779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.857393572 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856059427 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.856858721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855326081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.850852218 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856073447 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.852725497 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853337757 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.849523004 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856055122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.855877065 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.854809278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.852618104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852778545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852938938 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.853963267 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852151443 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.852350081 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852312454 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848907105 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.851355887 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853226903 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.852050624 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.852548619 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.853459822 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852936265 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.851411858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.852696212 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852640966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851161455 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849881995 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85066093 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.851315969 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854114203 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853781088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858357956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854305313 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855694555 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.852377977 seconds)
  done (took 116.696379637 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85024268 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852156373 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.850816924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.851027963 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849238293 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850051905 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854039436 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.853864863 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854157649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.852286897 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851909893 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847135403 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847380756 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851302917 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.84531917 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845352333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844571698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847389066 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849373645 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84882212 seconds)
  done (took 38.766216107 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.847292216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84809489 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.84608068 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850053348 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.848469032 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846062861 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.846348037 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847918479 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84623895 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84919058 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848353876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849456938 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84376152 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847154877 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849355291 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843554549 seconds)
  done (took 31.32533298 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.841910973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.846490445 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.846299709 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.845941785 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842603622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.841964357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.847315142 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.842096436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.842863832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.845175533 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.842656628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.844108487 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.842528877 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.84603802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.840751686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.845910834 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.842985949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.841515952 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.846109316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.847529409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.838944089 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83856252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.839969829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.839536841 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841632707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.837792048 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.838312059 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840598067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.840024809 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.841609021 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843320039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.839125707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.838365342 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.838821084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.842252676 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.837588644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.84174335 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.840355815 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.842229556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.840500397 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.840935457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.839683744 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.841593521 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.841976091 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.839952726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.841415695 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83854136 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.836257299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83565086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834385052 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.838639946 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.84329501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.839127782 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.838546428 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.839551985 seconds)
  done (took 103.03810299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837352314 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836984031 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.834428544 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837614523 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836861942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.834051039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838404908 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.834492897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836503842 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839451572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836972848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83948092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837265212 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836572439 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835257541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837072261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.834118431 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.838168511 seconds)
  done (took 34.820184649 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835868823 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837809123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.838117991 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.836605048 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.836156131 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837117252 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833069965 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835181355 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83665102 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833334145 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833619338 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836249761 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835533679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.8370192 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834926622 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835453544 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.83749248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837772994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832031678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831575361 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836273091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833602388 seconds)
  done (took 42.138078357 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834378933 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834329667 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.850028771 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.857612933 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.856355484 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.869135957 seconds)
  done (took 12.856638443 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833787854 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836672524 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833294266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835919964 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834779713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83379774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837664805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833024488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835053499 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833290361 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835539008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835020737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83887023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833496462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834552388 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835048135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832378588 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835145542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834012175 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837335847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832677395 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837988982 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834634228 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833380074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833062601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833189687 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834846746 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832482819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834756492 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834546669 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836952591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833260479 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84224978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831493006 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838056939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834190566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832692137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835173502 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835401121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833026477 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834781853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834608226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836164996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832998413 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835420654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833269844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834842504 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83165701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835095592 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835797088 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835038196 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831616028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83257763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834142311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835340613 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836411968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8339679 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83327636 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836309166 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836033664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832667737 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836426565 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831429103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830901659 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832739951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834141115 seconds)
  done (took 122.839615761 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832336697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833015401 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833003892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833875835 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833505548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834926257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831909458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833799446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833808779 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830839863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836245193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834112313 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834397378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833836765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839672243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834129327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836240666 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831075366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83211799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834177926 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833704645 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834168342 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83298795 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833315927 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83493005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83725727 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833496303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835529273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833149646 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832425973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831593406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833168819 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837642363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832694658 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834071555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833966699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83518386 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834158545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835245405 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839328565 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833596627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837182658 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83482356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835742331 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833327781 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834514263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83509397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836675531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834449392 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835381863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836505575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836404788 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836304461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83588576 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833988921 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833992861 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834502905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834460881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834396259 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839893737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834320231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834360125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837695727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839043836 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836140422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837153691 seconds)
  done (took 122.85134012 seconds)
done (took 2563.662647564 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.858085843 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894176768 seconds)
  done (took 15.507371468 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.000881336 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950519093 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.835918935 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860381359 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.833747057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854645578 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.847304321 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833513248 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.835793195 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.836520795 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837668428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.028764682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.844990041 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.83192939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.838283738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.932196397 seconds)
  done (took 51.766973695 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.839215595 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840993889 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.852474999 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.844644154 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.842363021 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.855034999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874388853 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84375918 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.888749036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855379108 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.914307134 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.850059915 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.841166445 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.892145541 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851427926 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.857951612 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.939884246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.915483099 seconds)
  done (took 35.357750979 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.917804435 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.846885707 seconds)
  done (took 10.53257206 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845153852 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.858057825 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841603049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861645962 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.851960787 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844178111 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.860946802 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.855529674 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.872259848 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.851764909 seconds)
  done (took 70.304371225 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852544169 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.84031382 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.842071401 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841003928 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.833656942 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.83371838 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838700057 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.834534278 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.525288544 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873918049 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846249221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.845725523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.839926852 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.842765425 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.839047685 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863918747 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979612386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.839723244 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842988428 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.845808394 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.840653445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.915069952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855043794 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.843358834 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.869562629 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.520030937 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.845940717 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845699887 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.986651954 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840410823 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84155468 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.842278696 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84208966 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222836192 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.133924833 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.836681633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.84739569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.849791944 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.841355931 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.989841813 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.843368827 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.846533379 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.759286281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119551483 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951095976 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.888925015 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221400374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.843351355 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.844066307 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.876409344 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.844395944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.843032528 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.85356185 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.349964431 seconds)
  done (took 131.161461503 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837370152 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.107820825 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.999596297 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837168066 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123435439 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045029985 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836713082 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89596932 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.83783292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.069693302 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001076207 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94878731 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835977063 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.8401744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838074197 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834845998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005451326 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913664608 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841110157 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.83942776 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877787092 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088599781 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.965043151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84226844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862321698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053103561 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965850344 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943725089 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.13186004 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838145524 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907325374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837121232 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841961131 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.836845538 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995098665 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92968445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92380234 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.838141682 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838712823 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841748462 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.517580109 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036658512 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938849963 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979531167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08689708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047045593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.630321314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.8413518 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58683521 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001811006 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074728765 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.075101144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962203339 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841037722 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.115857394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838995243 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839185476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078645681 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063590906 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940481703 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837850288 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841599087 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844605387 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089573978 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838335304 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935492167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842519811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843910962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943152714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942977894 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067951736 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053155902 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.874975726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.141637714 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.316696179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093048193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907777197 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072211747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842193578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844496568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930571161 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.677001347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.003478892 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.088692503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095005192 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876482702 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.582779146 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844004883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072889704 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.063982764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094166506 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0852341 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.993371136 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.041454696 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.842641044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842259352 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.147364932 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978914453 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843175135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214229349 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077648989 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.417606745 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87474697 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155387772 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973546041 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845569729 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.490954713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842936597 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073068983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885870655 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844329039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844612099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.065929555 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.829587303 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842479742 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.668055059 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917219252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84585323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082625216 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849830961 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114587494 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848010188 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085889507 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.132480117 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881362612 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019923167 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.093645393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.847881291 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092574308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089892756 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961720488 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117981128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.776678628 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847285637 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146293241 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84438434 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.844093567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.01934155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84913825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993398792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84273662 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137388964 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869505127 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003144959 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845856357 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106748542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879290242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901295606 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845086269 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979424348 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852309231 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.879582374 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005393349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850112244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848396491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.394171564 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.848962647 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005312033 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084005367 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868507358 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921194482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517988469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846076716 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937948584 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872072083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.193730518 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.844429764 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.005293615 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.844799205 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.3761968 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.845518253 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090239464 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081475744 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84728014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847377899 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.769012755 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.848488507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848497592 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012091207 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.14667202 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848679997 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053803595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850019559 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988055426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85351545 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.926720167 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202430735 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846082522 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.850263183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852550779 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850500106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850682435 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.87710716 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.382528794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9890421 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12760063 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.168435894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.10442865 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893240186 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852423672 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094668417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852979987 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.912644523 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.84761358 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875629157 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084294486 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852820056 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063809431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128009252 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.800468551 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900512151 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.851045786 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851260459 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.772989835 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003855871 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937825575 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849729928 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847769512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972889314 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976318648 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.061205058 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.851411454 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.034170683 seconds)
  done (took 898.241598727 seconds)
done (took 1214.631437395 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.852218876 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850657761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.836615887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851957525 seconds)
  done (took 29.167630436 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860016235 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.862483827 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.858434951 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857405194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.858901414 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.8575714 seconds)
  done (took 12.931886989 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.872456076 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85287894 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852164366 seconds)
  done (took 21.359973297 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.925842481 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.262068366 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.963649887 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.290009492 seconds)
  done (took 10.218425696 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859548404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.859485797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858878706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.865576713 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861298762 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86169705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.859693896 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860703278 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863781993 seconds)
  done (took 18.529377083 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.31358088 seconds)
done (took 98.299221053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.874404349 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.629619435 seconds)
    (3/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906489528 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185371609 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226498369 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.961323395 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.874875933 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.839404125 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.576668025 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.916626074 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.892229527 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.943481944 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.192224063 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.742474796 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.882659353 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.975310545 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.22830054 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.918961087 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.453366537 seconds)
    (20/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.988866806 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.853608237 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.173557922 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.946508436 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929834946 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958192547 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403355126 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.981790928 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.537488712 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.048600525 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.200774757 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.09647321 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.095690066 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.495539761 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.857771159 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.031487774 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.880831144 seconds)
    (37/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.125193394 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.340975641 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.04007146 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.875265341 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.917224643 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.79362358 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.853396183 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.854333164 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.002861781 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.657761859 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.946002708 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.842366342 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.875727334 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.112192399 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.969825075 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.068389914 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.113713683 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.053051856 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.093417603 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.88840113 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.942090489 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.93030008 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.915246052 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.037447511 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.326215669 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.660347771 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.753944584 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.555991666 seconds)
    (65/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.863910353 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186650909 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.234096491 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83974825 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.859691372 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.780258961 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.021243167 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.88604778 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.217738309 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.881254981 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.091866042 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.755923175 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.401422628 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.301845737 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.158647224 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.118040199 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.858247325 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883747945 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.543284925 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.999595133 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.194654125 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939320467 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.524183201 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.890421471 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.845757093 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.861298651 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241777661 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.953613852 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.156223858 seconds)
    (94/309) benchmarking ("sort", Float32, false)...
    done (took 5.626507754 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.963504545 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.859146089 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.845028673 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.03554363 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047016062 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.9330645 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.935682335 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.941755558 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.060847579 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.64104308 seconds)
    (105/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.196492568 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.481237518 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.740721015 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.955382126 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.144108845 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.962457517 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.928206278 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.373391904 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.030678895 seconds)
    (114/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.943867962 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175087787 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.303324729 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881227134 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.968384134 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.128667832 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.928014824 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.039908037 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.474172646 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.184963265 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077607533 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.027466587 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.122063859 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158846574 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808966672 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328661228 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247703934 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.972901503 seconds)
    (132/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015760923 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.84798684 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.243582028 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131450526 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.886151382 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.993221296 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097216568 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892019553 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.483875039 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.989978284 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.429134301 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.938490405 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080437302 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.882687962 seconds)
    (146/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.261086751 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.957929967 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225812674 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351104336 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056257846 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 4.849219361 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.926077408 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.967361918 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.869462724 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.87179026 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.757564555 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.330533522 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.991336381 seconds)
    (159/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372485835 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.009857074 seconds)
    (161/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.366541445 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.862541196 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.18915949 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.911019457 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947028673 seconds)
    (166/309) benchmarking ("sort", Float64, false)...
    done (took 5.639859631 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.042194878 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.929966358 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.009760751 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.200467308 seconds)
    (171/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886757808 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150801196 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963668973 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.86466645 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.848192312 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.919925623 seconds)
    (177/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443882586 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.893846972 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.968350648 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.019907866 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.461199353 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.800894321 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.015860072 seconds)
    (184/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.861995291 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.151351369 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.205209426 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.868078021 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.850716476 seconds)
    (189/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.304333923 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.711186063 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.072232194 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.922648558 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.975408785 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.92673571 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.850150114 seconds)
    (196/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.047516403 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.345988471 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.255028979 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86382767 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514631247 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.432458249 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.07989647 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.241990641 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.79838482 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.055373725 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168593526 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.861682097 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.118361676 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.197667631 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.95066543 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.866302973 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.902418 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.950382569 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.858774557 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.881696094 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.438613115 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884725745 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.208993531 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.225776178 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.888495283 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.161314151 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.170378529 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909465792 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.166192838 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.976666363 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.97370587 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.865730347 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689756727 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.885705949 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.232538457 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.861803226 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.887164832 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.148901969 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.839194816 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.003308129 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867944273 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.228492778 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.929812027 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.867569901 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.298116533 seconds)
    (241/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965759679 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.155585084 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.15527531 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.966760067 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193607214 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081731934 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.41001696 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.032711429 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.958234796 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.88556566 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.376330783 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 6.868010581 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.507993808 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.983042981 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057423722 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.953415313 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.865961674 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.98358679 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.787180165 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.853089757 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.855160592 seconds)
    (262/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032432859 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.796734531 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.469351029 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.00886154 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.869348047 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.947604831 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.041561289 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.086540328 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.438938672 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.288290689 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.866531539 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.261747751 seconds)
    (274/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.00284711 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.979104964 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.852904591 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.859622691 seconds)
    (278/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.146888741 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.020887003 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.978204413 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.855114454 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34003656 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885804071 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951259072 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237717805 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.5479416 seconds)
    (287/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.874861645 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.97792222 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.256157128 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.012047528 seconds)
    (291/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.179087546 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.967931113 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.625345086 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.819234967 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.025254037 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.905429797 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.043695911 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.902032734 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.375406484 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.854570738 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.463338002 seconds)
    (302/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.067721972 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.000751104 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.870082493 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.512612878 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.894645112 seconds)
    (307/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.998772373 seconds)
    (308/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.01510417 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.277767286 seconds)
  done (took 1016.349847924 seconds)
done (took 1018.207510802 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.900555579 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89574139 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.876687635 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.901387289 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.992672871 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.904580886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889846554 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880838841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.927760486 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.927854744 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.87861131 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.903231721 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.877928832 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.880782528 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.878829967 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891086808 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.18735797 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.899899797 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.897538677 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88727824 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895808698 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876440592 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.928653562 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.906066428 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884970921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.881965388 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.882277257 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899490772 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.992158464 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.880926154 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.881496681 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.891727792 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.187694198 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897549723 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.874423621 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.902536989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.888910326 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.889105779 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885475658 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.914594253 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322450904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882189583 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.881508347 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.879863563 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.882815606 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.884058543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88222972 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.886219253 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892464748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892671317 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.322271949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.899563047 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.885644772 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882533788 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892927056 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.883175955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.883702157 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897658695 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.899804089 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897956759 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.176606461 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.905609112 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.883807244 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.898306901 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.888945891 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358184457 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878226156 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.884356892 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.325310078 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.888223443 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358172105 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.892357589 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.884333343 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.898153998 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.91439677 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189271989 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.89689557 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.879574804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.889114365 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.881759565 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.892568732 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896516658 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.889264391 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.883275904 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896942514 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.910039904 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.89127679 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.884714912 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.891456191 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.903105131 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.891005562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8951358 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.886650256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87934495 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.892483586 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.885553929 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.884679238 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.886678356 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.887525653 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.891904984 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320115335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900997627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.87839924 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.880521183 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.882872124 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.89887884 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.323825645 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.885713487 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.905422289 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.93040435 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.884033278 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.181129026 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.906772545 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900585263 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.892546185 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.886479892 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.879116195 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181850761 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341710904 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.900495646 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.887400036 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881373639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900087944 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.886108732 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.880901039 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192886153 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.905411438 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897439198 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00742258 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.89459917 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.916796286 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.883592845 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.888633164 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.917421347 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902708016 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.915366612 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.887370661 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900153451 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.901157995 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.882822036 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.894991787 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.89478581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.885955266 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.890889554 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.880483718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.913018006 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898108261 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89885813 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.910472856 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.008659599 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.883633955 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.183363879 seconds)
done (took 295.784308999 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.955628577 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.87756847 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.983350857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885726735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.965279352 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.983045898 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.880888423 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.88277599 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.882256803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.256084687 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.882892612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.881670868 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.885670904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.882460318 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.968626312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.883768606 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.883687176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.262350659 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885935834 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.960035112 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.880705058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882430779 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885805167 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.30959318 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.878022965 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.881895449 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.964106547 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.887443429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.223763063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.877081956 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888105108 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.268980639 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.986546933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.904200562 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898540686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894552649 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979555397 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.892501574 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978919546 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.967486557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.98390677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.926497521 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.882947282 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.880689167 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.892034189 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.887828172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.88365631 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.915177303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.881547371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.882593538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224401234 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.896659888 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.884658981 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.884034916 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.885417773 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.921671285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.885399439 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.89120455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.979845484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.889606754 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950484323 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263046292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.310535357 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888227107 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.881944621 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.885277267 seconds)
  done (took 185.601669937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.952474861 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.961535712 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.954558777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891126093 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.937567746 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.952885037 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.887823837 seconds)
  done (took 15.339801965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.893282721 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.885394064 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.93502248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.935301515 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887796424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.03756403 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885523986 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.898451457 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883460273 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.939120911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.888129012 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887642932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.892838944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.887840448 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937144334 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.898346691 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001610717 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889947327 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.888366459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.037727452 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882142843 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892604522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.942646638 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.899920294 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889897533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.892598737 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.473007638 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887257846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886563343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.886265726 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886302605 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.928428723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890256496 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.883941793 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885361227 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.006842742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.890171047 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886483976 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.888782226 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88475077 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887238085 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.887638454 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.888331495 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.886704558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.887798849 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.91037242 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.887409632 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.888468317 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.887895738 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887462153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.940556792 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887829079 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.884390358 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.888150062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.942603928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892632218 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.88764926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.885801699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892698029 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885628229 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.038989107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936345296 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.888584921 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936034966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.886065442 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88884984 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890639025 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.886335794 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.982809901 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.892393305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.938185019 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.886180016 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.049116108 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.91431606 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891226045 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.892163852 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.891934656 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889772345 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889663207 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.897162308 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.886789472 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.889840318 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.895603511 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886813603 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885199979 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.002017655 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998947176 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.895037246 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.901411166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.897584082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.887175199 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.945189273 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.894349261 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.887420356 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94566869 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006474441 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.946870628 seconds)
  done (took 207.665469096 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.895028225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.898865703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.890794225 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.907616512 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.891042278 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.893641373 seconds)
  done (took 13.184883086 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.892119187 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.89058481 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89001171 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.89323163 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890752631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.893128376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.891688557 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8913946 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.896743698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.889595994 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.892437944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.890218114 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.891892461 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.890223038 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.892115442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.88900324 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.892641273 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888367678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.891025897 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893186421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.04460996 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.888892043 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890575996 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890282119 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.891782654 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.890404849 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896657629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.890524639 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.890451847 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897941665 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.893587907 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.893273903 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890853695 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.897647885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.897604884 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.890959184 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894083852 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.890907606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.890353388 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.892677661 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.891384079 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890995969 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.890345417 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.890839475 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.892465406 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.899331081 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898870773 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897475583 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.891937777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.8950965 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.892320355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.890099582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.894695081 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.892585419 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.894807352 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898496568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.894568086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.893587792 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.892351572 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.891339539 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.893305951 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.892540698 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891848121 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.896874239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898943881 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.892086761 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.895712474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.896523797 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895732778 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.890412664 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.893586395 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.890984098 seconds)
  done (took 139.245714498 seconds)
done (took 562.853080467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.020100103 seconds)
  done (took 8.828429274 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.964913221 seconds)
  done (took 8.87765377 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.247689336 seconds)
  done (took 10.065107805 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.906399545 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.905927503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.889314968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.897484913 seconds)
  done (took 29.423291909 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.053705821 seconds)
  done (took 8.869169644 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.9056837 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.888034316 seconds)
  done (took 15.643508859 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.907285948 seconds)
  done (took 8.723868573 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.000439806 seconds)
  done (took 8.818729715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903094508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.920629004 seconds)
  done (took 15.653182148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.87641702 seconds)
  done (took 8.691324425 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.643079948 seconds)
  done (took 11.465237868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.905836431 seconds)
  done (took 8.734029282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.944378788 seconds)
  done (took 8.760038265 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.110974317 seconds)
  done (took 9.926130006 seconds)
done (took 164.289819947 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.89424539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.892289375 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894600404 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891680824 seconds)
  done (took 29.385950557 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.930688857 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.934142897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.934732264 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.942577537 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.936713804 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.932339828 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.924628637 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.926187761 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.943016745 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.934853405 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.933800048 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.93462503 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.933222794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.925464496 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937641243 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.938886634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.943910565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.951257012 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.926736467 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.937122102 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.901232516 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.944522949 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.935493967 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.901468839 seconds)
  done (took 48.20314349 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.100638787 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.971114952 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.052544319 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.951587081 seconds)
  done (took 9.891107441 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.952135646 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.954222436 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.963916656 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.002562328 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.036524089 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.964114565 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.930630367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.922153433 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.909186864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.955033367 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.031741629 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.950143894 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.038628132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.902528807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.082515314 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.902815057 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.900997306 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.955056906 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.004919477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.020612229 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.903385731 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.952254053 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.958159136 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.949931217 seconds)
  done (took 48.960264855 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.899806212 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.908662922 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.907505929 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.901213578 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.901626356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.901673215 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.906498652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.902509292 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.921713523 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.901601143 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.901502549 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.900846589 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902416834 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.901901281 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901459735 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.913099932 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.913995557 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.902431625 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.904938796 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.907667345 seconds)
  done (took 39.92080205 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.894276536 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.75033714 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.247311505 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.151171947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.896878341 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.895265947 seconds)
  done (took 31.653554829 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.914342943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.905838504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.902915542 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.956735634 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.034149862 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902668647 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.902015403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912394069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.944177421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.961124246 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914315604 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92764174 seconds)
  done (took 24.996580828 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.898413533 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.896471354 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.896091444 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.913841377 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.912677859 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.910601544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.910273109 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.897195283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.912995936 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.921018371 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.909549306 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.915270399 seconds)
  done (took 44.717487274 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989957407 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.788183087 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.988590029 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621075618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372260844 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10649004 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425718657 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242161906 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.903946827 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171287792 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135346463 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999540224 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152078356 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897255359 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902295385 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.393464125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199361005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133018958 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924561619 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728029069 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945593241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332609422 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.804260841 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955046888 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112595179 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.036221979 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161688323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.864567963 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039426825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93416169 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911135796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899748239 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174045076 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28749217 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003238211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910894604 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557860127 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.615576917 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.957085184 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.740423152 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.821405457 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.0291737 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909146848 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898723691 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833657001 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337018698 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268324723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.905932918 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615207797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901021449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910761033 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992059048 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.904946091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.722451255 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856181137 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180110492 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.900107526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909556541 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467803308 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078301432 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367294818 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.864628933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.095194373 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782686698 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298296026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048241732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907197312 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905998984 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836544584 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72015614 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950577213 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049089384 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918391069 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553536275 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213552344 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.196132202 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839464726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190607273 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.604514627 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862105397 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131108697 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859438545 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839764931 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.759477953 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838093945 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177822594 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937980904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.546693915 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938801774 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24220267 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913711524 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918756861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909992306 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127081174 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.470618847 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903811042 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.890462735 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049686589 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921688206 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244183321 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83990401 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.905316714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158050189 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.113850225 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.0593867 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.419384464 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066860214 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952169096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.912825192 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.745872576 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940230122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.187978692 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962863129 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.087811416 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959316105 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863851182 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211858879 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979183959 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.002705161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.166361396 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025207608 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.234674927 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193975475 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969229203 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912989077 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904344318 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.755884152 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452857881 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.170700321 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.904937715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321515833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939874806 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.906848152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843758102 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.520473233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156096925 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.869027356 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131597412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.790455339 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20553891 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842647417 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056878019 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019411098 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.125351564 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.582284783 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.989710777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163146711 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31140609 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.074374965 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942822937 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926396279 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002349233 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926678995 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.24336084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185728063 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.909665856 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.909056361 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.759361181 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.90125545 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911557376 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.911585735 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.704459953 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192517931 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929951652 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913597388 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.797429634 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.92179485 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974711609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91382633 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916528541 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.460091937 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651999744 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.917972897 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.551217309 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132170952 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917593058 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.746278414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01762779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.990154366 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191326286 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966095026 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.842094478 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.620321092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.6005706 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907593793 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842948551 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908603551 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916515224 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918487699 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.286713048 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196323583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948845284 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.738240195 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.947564607 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921292034 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.912572845 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908828015 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.446637555 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.098016126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377621605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945514723 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047678758 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.923138772 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843712919 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912402681 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913545846 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909598001 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.864142 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961953484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.748676297 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290799773 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163543389 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603157 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923404844 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.872698638 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.968133341 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.928967626 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762375355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88334367 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.939976928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027436712 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922171716 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.753898259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.603967265 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470392905 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233539504 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228246145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360546481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.315727758 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203566284 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254384389 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147800912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440679851 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968099768 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25114242 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855063802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98921764 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.559205375 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267573084 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924752386 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138674584 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309268782 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.828243043 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057235118 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122871508 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944976743 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.733929604 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863324167 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.111878794 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054211416 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79244252 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120030966 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252215846 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764897895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011133912 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.912509372 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.642329307 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996625988 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.627213723 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.273612905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389000706 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.016414576 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398438275 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912359919 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358526491 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267970218 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.149207822 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.024731423 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848845622 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92374426 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925670515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.913435332 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.905731793 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.75976071 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.164282719 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921608746 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147193185 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.10309635 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198856134 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.818617103 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.917983059 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915090575 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216260281 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.637281326 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077896716 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.276034993 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.428658914 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916806798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.845747631 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845311482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.604319739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913164168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88972101 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144836315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.096814323 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864832211 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321115775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143746326 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16246437 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.923749952 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19262174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183885565 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64353733 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938366697 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.007594087 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720786884 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.030231035 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18221971 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149338906 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711272865 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139588808 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.992271388 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.73287108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.910996506 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126425849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183459339 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.984104171 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149143616 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.634234526 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.914812223 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355836291 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972832266 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.012453648 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070542739 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.103855794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923902789 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999472315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926992839 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.925711258 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924352942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963753183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007833212 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045494002 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.927663793 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006525069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098590276 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442822044 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.920583028 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206446585 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29007735 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253344259 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979105658 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917992393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926828918 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851718021 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05004783 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362468327 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191396284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047766465 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.21035511 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940787008 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748022118 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.206369056 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151813142 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192261655 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812498317 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951157225 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925743661 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.183214498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925577779 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.126648312 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151334745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238313892 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385557957 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.084590688 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276456189 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186445687 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286302709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915223649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505517319 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.915628596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.739219276 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958203838 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003445274 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188252629 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929372495 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306173736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937012476 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.118974124 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.436421053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794026333 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20624356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.913715307 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984017316 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205281526 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316207467 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230982842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988930787 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929193547 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.627121539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053569075 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.785632011 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189138789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918894189 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12940136 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.626858178 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926782036 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20576438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227138216 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.915650985 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.785049483 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928911284 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929481117 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147473663 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195773301 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173492394 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931843061 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923916374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.736923073 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209554706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983170234 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856055405 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.92496439 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020970462 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1656722 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945874304 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.610615974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.633306749 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2225706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.83755143 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942585334 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418900167 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291402454 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259042315 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.463570796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161579186 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477173793 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.806728793 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218905273 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.927481144 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358817798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222465467 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.927105139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447410177 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952544371 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.201749107 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23726031 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.932024113 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863888403 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.891390759 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149664899 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522989605 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862776893 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932620299 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.984493738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922790881 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052294934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930198442 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.805672567 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774315605 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66361677 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413695898 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.927061007 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.91724738 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.789048368 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.492544267 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952781019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073558297 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928021318 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.663626844 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.251727481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178236049 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.470100924 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.923882527 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.92932884 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926219216 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854172596 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121320874 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.300461884 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227886555 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.314405435 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.953590934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928652822 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.139702787 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135503678 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.009882691 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071027254 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33074391 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957574226 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.697047496 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.609063551 seconds)
  done (took 1707.648820601 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92300452 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.955171279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.937186576 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.929060077 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948201296 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01428369 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.96988602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987557454 seconds)
  done (took 57.512836536 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.919242269 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.124605758 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.925432119 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.91456651 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.925000797 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.913252922 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.085755877 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.918110301 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.926412154 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.923692404 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.911714388 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.907897397 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226458925 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.926618113 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.909446526 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.89974153 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.913828703 seconds)
  done (took 75.12286695 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.911476456 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.101424243 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.945664485 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927029825 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.835533888 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.908773501 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.914799048 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.943364277 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.896745116 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.10533921 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.228185064 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.897575754 seconds)
  done (took 90.447151187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902088048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.901761343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.896566398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.896990654 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896687244 seconds)
  done (took 11.313623383 seconds)
done (took 2221.619147828 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.144350217 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118362804 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.115474595 seconds)
  done (took 6.045400334 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.031871384 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.076289872 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.196695253 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.21668693 seconds)
  done (took 10.330776417 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.175297209 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.267889764 seconds)
  done (took 6.246309653 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.274339375 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.88062606 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.269401214 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.876225243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.871742112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.871936368 seconds)
  done (took 22.424780945 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.876899921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.876197656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.873347148 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.876165777 seconds)
  done (took 9.297266259 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.857234984 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584827524 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.855542173 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864346498 seconds)
  done (took 20.954373309 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.620611389 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.266735271 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.612307376 seconds)
  done (took 9.286443264 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.494309376 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.777466829 seconds)
  done (took 9.05878599 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.122443787 seconds)
  done (took 3.918391998 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.903368532 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.147042228 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398692254 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.413685159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.503412299 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.712236283 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.183253454 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.109137845 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.299737775 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307923426 seconds)
  done (took 24.775507881 seconds)
done (took 137.722518792 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.253198112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.236920331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071751877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.219036244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.094744647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07316131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.078013155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.204857973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.714872367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.71358384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.260760994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.092027598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.029427415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.234813855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.034368217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.108992982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.099966922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.261892536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.911878186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.109088133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.083757196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.846384875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.100280116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.855168878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.099243165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025332409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.425630736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.112368457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.082480269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.46750169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.036831426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.306022813 seconds)
  done (took 171.042000682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.875283593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893184277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.875165532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.874504942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.279644605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881557767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.874948071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.878087646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.921426095 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.907681688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.894203888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.270285141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881680213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872899056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880341363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.874199922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.078772904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884071643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886923378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.889018009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.889039989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.063317769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.887206802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.106629912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.073648877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890766301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.868316548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.886262528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.871789622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.871826925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.867996336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.858118827 seconds)
  done (took 207.631351098 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.857917783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858474642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.85122377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.851149627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.848742717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.8460214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.846640334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.843246556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.477136676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.482148027 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.847392528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.846611289 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.849945688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838359012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.837044723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838376658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.840723644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.838766693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.843261651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.838424477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.837120096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.663737774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.836360328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.660500297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.827546161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.827583243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.821790702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.83242231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.834178399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.834448161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.839671055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.820562263 seconds)
  done (took 219.611789113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.018217714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.831449115 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.830388627 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.772771978 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.830380755 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.829404394 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.790610402 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.030079714 seconds)
  done (took 18.701527463 seconds)
done (took 618.792703741 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.266146971 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.112080997 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.996879072 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.851789437 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.082319584 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.882480528 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.852459717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.916724056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.569373434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.91312621 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534326244 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.863204016 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.62837282 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.867078603 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.972028518 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90995168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.447709993 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.539777316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.018859632 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.896442097 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.019211297 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.809574914 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.925860674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.599792542 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.645387695 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.845675418 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.026735532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.446949168 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.855200918 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.01159961 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.553074088 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.22030814 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.857200661 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.844494663 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.905604826 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883414828 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.199991316 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.854496389 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.968200942 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.618675246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.899228695 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.449887223 seconds)
  done (took 101.309854152 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.821294552 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.820168132 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.820054917 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.823040042 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.821442087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.821883256 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.820427875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.820261616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.822013697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.821008493 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.819264021 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.82158196 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.821377726 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.821305724 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.820305896 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.819157161 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.822409798 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.82334473 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.821300762 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.820631152 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.820441332 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.819387427 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.837360051 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.821624482 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.823626157 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.821398216 seconds)
  done (took 49.127018502 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.834304306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.983507578 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086820194 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.852752424 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.833302211 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.835933541 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.84946885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.837208096 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.835941944 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.83691119 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.924942914 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.83788757 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.851533433 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.09030408 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.848025743 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.833509153 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.833920171 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.834479883 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988429203 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.850271119 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.854491571 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.840460611 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.852397381 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.844863368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836647823 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834481655 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.840751603 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.307576442 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.841990962 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.929133897 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.876369557 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.855854138 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.253831833 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.102772417 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.885046728 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.840899986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.837083674 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.93084376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.838489239 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.834347888 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.853140513 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.840199971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.089948116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.334393634 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.846439437 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.838229713 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.321906624 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.937263801 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.885187543 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.84297779 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.093597684 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.847656902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.838759123 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.837099205 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.873197457 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.840512399 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836818468 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.154935466 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.844558395 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.85636469 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.840518098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.837269796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99860142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.843950211 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.991193406 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.844649378 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.843842929 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.838088102 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.093510553 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848538673 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.345957238 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.851001144 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.838366068 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.930089385 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.997743058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.3473861 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.848890154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999843469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.277128729 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.860354045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.846140487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.298139463 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.862946758 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.844277071 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.842035545 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.840208412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.841137414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.885059686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.854443796 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.271026102 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.351859575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.17257464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.865338215 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.854961171 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.840386216 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.153321749 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.846710151 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.840168066 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.087057407 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.351028525 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.850680871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.845550198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.334136173 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.854588542 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.85558953 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.848337064 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.101680401 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.853467846 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.884495103 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.839827316 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.848620995 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.843014263 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858618998 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.844802397 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.840192632 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.326584457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.948578473 seconds)
  done (took 228.292937199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.834437806 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844552125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.835644653 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.833771076 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.831002367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.840761117 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.828573909 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.829272818 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.832192183 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.825905494 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.823411386 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.824612215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.823208706 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.82799507 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.361582352 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.839294776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.445821986 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.834484918 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.833637122 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.831594244 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.512386545 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.83965703 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.833713565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.832296621 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835348433 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.835243608 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.835000895 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.879383372 seconds)
  done (took 166.944731654 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.839154703 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.022127472 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.856010277 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.877586267 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.850234976 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.839060006 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.862356742 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.857514112 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.843347231 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.836198912 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.835762838 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.899790172 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.852044195 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.988537652 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.87270908 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.866246346 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.946925744 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.843315644 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.836132182 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.833614253 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86409747 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.828294922 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.89587949 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963135046 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.853277491 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.956437657 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842038284 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.835445556 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.834440225 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.953048628 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.853757702 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.892693842 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.862667512 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.849537247 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952093225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951999334 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938623127 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.863317056 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.836885037 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.832756148 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.833437243 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.819815575 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950129635 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.853400373 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.835189707 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.941164983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.853807549 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.833070111 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.843799232 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.83121436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.84719396 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.849576161 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.897403417 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.970246259 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.870033239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.856055846 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.858370488 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.107728284 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.844788833 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935667091 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.823953996 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952354212 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.856157344 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.820658542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.834070973 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.838983009 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.863636098 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.861804028 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.939738743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.842471914 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.933283702 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.8680171 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.838719677 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.832678633 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.83912626 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.953476752 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953212115 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.870747679 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.869929673 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.864649166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.827882786 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.834726766 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.822440795 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.852590376 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.838778808 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.954681128 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.956115932 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.838938206 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.838291988 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.836925456 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.8335589 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.856550755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954056228 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.868042344 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.933081652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.897783966 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.904531334 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.843720257 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.841132417 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.829668684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.894184698 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.841817989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.837272246 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.14589531 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.895022256 seconds)
  done (took 198.947406692 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.297230122 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.876600948 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.882581763 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.140633915 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.261018597 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.656734524 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.871259242 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.870350228 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.892713115 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.063480395 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.952377079 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.894194215 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.857510981 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.845890699 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.870847609 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.89075274 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.87929619 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215878119 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.002961497 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.938257025 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.855048127 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138223042 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.195361828 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.321918464 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.910037809 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.198470437 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.557838513 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.01526981 seconds)
  done (took 60.105088648 seconds)
done (took 806.47783031 seconds)
SAVING RESULT...
DONE!
