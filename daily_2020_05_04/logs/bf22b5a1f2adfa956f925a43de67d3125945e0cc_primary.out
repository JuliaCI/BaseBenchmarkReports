cset: moving following pidspec: 22946
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.338577105 seconds)
loading group "string"... done (took 0.574693969 seconds)
loading group "linalg"... done (took 8.02613484 seconds)
loading group "parallel"... done (took 0.167359917 seconds)
loading group "find"... done (took 1.209983804 seconds)
loading group "tuple"... done (took 1.848549548 seconds)
loading group "dates"... done (took 1.324137971 seconds)
loading group "micro"... done (took 0.197864961 seconds)
loading group "io"... done (took 0.984627878 seconds)
loading group "scalar"... done (took 39.397945153 seconds)
loading group "sparse"... done (took 12.211571476 seconds)
loading group "broadcast"... done (took 0.961190928 seconds)
loading group "union"... done (took 13.486368906 seconds)
loading group "simd"... done (took 4.810888651 seconds)
loading group "random"... done (took 9.101364832 seconds)
loading group "problem"... done (took 1.809570444 seconds)
loading group "array"... done (took 21.374758074 seconds)
loading group "misc"... done (took 1.786742014 seconds)
loading group "sort"... done (took 3.350863109 seconds)
loading group "collection"... done (took 18.04627792 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547566195 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125668124 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139075993 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121338568 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152405918 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117554531 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124617272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084647973 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.868268743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151183574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114207595 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417074685 seconds)
done (took 5.373177096 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175586354 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089317855 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079428928 seconds)
  done (took 1.233137115 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065457065 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128075865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067215265 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067821215 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067432526 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067161791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067341405 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067494102 seconds)
  done (took 1.595747084 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073515522 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068555493 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066023891 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068456365 seconds)
  done (took 1.338213284 seconds)
done (took 5.484949947 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.786300666 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214677018 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188270442 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408266692 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135368883 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178093481 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651830546 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320030426 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192582952 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094229323 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113351373 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390735452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126680104 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644184626 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080186879 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095768735 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140152917 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460036622 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071485778 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08481103 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092903039 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131619012 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080765136 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076783747 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149595782 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070829963 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143472997 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086374476 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06927625 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256596041 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175476937 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668027741 seconds)
  done (took 10.478216493 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103998163 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099635465 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069264928 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126097571 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098521327 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070643091 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075764287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068419261 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089966561 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129361798 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092074216 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109265613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066745173 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070291864 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083588599 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209043495 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080400831 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086203625 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068853122 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079526121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107768062 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078417361 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080191843 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080538778 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129142912 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180023213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096606921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098157552 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067754646 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084793646 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115467178 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127057267 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066960008 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067679852 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125731983 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095222734 seconds)
  done (took 4.59148401 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983951482 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149999823 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090409365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134152658 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065491327 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109975269 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066168598 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083571527 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234370435 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.394092593 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.627882714 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137960834 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112843307 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104784183 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068918236 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069768438 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068296739 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.276050909 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098362185 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105604906 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070276359 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082746598 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070407212 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069010649 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071938505 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066423333 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068807209 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087732791 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06534697 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076051965 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.401142302 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124693969 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069043702 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.949055396 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167645666 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0690792 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102319328 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167868445 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090173891 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14086821 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068531862 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06430336 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15934023 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063731425 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.206013744 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068395812 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085681042 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105829731 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121122129 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065930859 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066276064 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168699009 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065049237 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082192235 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.146764747 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155748927 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068431465 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296853742 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09164916 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072411431 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06547818 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182004489 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121746594 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069116332 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068540985 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069812273 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068675575 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367902747 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066905001 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898585782 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071371051 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07675792 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070801744 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071902391 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065061455 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074979426 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074952769 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.0911114 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067348236 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074315805 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067410507 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066910187 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067744946 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099542378 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.394108513 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067647926 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072679698 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065353498 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091707498 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097495897 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067187268 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066418701 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10090024 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069015411 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066568076 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068283067 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092054409 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098962227 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071286087 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112669424 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067279772 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192462057 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067977791 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098563955 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070221407 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100090916 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079246387 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06916516 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.464615222 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066210717 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072645461 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066126588 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068899235 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067525474 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079726192 seconds)
  done (took 21.734349959 seconds)
done (took 38.85236599 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245298655 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083420988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084105091 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084664397 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083795197 seconds)
  done (took 1.739875552 seconds)
done (took 2.880156755 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126455227 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099064484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065071001 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097871331 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06505179 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101313152 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100320655 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083827301 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102965027 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065398155 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097696298 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065075027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064947342 seconds)
  done (took 2.289281577 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0848481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084627453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069678775 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084814224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06321633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082033665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081242455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088130758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080995291 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072417322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063036509 seconds)
  done (took 1.987055526 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082897832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083668103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069322636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08145932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062853893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081426654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080988206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084848023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081849797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073929201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063112112 seconds)
  done (took 1.973795483 seconds)
done (took 7.378157574 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077494019 seconds)
  done (took 1.192657096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.534353398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.617183616 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078860341 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100933745 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192451533 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109491006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237404557 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08316074 seconds)
  done (took 8.246032879 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106041252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070633579 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070773858 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069273955 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069267744 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069630188 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070643858 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069675121 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070437902 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069181268 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069966578 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070370511 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070196751 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070617349 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070015781 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070722211 seconds)
  done (took 2.364559855 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099333821 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095206523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074127682 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075137154 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073378941 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07237698 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074476278 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074299228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072156616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0729933 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076245612 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07366066 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074014635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064751837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07494595 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076634386 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072039647 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074514478 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075601913 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076075831 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075315687 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064449412 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073937382 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074945791 seconds)
  done (took 3.045521934 seconds)
done (took 15.979183061 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107534106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067989668 seconds)
  done (took 1.298804378 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080475609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079895761 seconds)
  done (took 1.292556824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079479444 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062456641 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084243647 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074179716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063738107 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063195969 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083424557 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06384412 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063795877 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064278491 seconds)
  done (took 1.83609193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067366678 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073071503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069407096 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079392277 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070998525 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064770433 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068957139 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065553698 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073585598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06414192 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068803066 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083381435 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06798144 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085238053 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068492406 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068433134 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070261818 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067228472 seconds)
  done (took 2.413649652 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065311035 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064163342 seconds)
  done (took 1.275630534 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068557263 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063622392 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066577246 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066660473 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063652502 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063622621 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064132184 seconds)
  done (took 1.598684288 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399951851 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121415756 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321535928 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070641364 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079414057 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257238041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065333862 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069522419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069872359 seconds)
  done (took 2.638561384 seconds)
done (took 13.498864982 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082279256 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086033538 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097376856 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383366427 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093811794 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06866003 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114318023 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180155842 seconds)
done (took 2.26115973 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220568531 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.813316469 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481930889 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206509875 seconds)
  done (took 2.645824462 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342168887 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081267529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07727688 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067163009 seconds)
  done (took 1.727438435 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069348795 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070810503 seconds)
  done (took 1.293297598 seconds)
done (took 7.041885514 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066873571 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089187962 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06540141 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064871302 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065050612 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06483485 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064714088 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.065339251 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065721267 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065297243 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064674017 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065580828 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.064873082 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.179298834 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065039627 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065133397 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065130798 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064799996 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065144122 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065135924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064990559 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064578752 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064950607 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064989354 seconds)
  done (took 2.887230851 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083412485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067158091 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068477424 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06851985 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069303325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06833438 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068728396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067585894 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069000476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066660712 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069720227 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069154545 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066749915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069324975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066827906 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069917676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069097039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06768486 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066736916 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069107392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068750319 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067011324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069171547 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068648069 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069156691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069160274 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066705569 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067533766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068830222 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0690967 seconds)
  done (took 3.224181682 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069646361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061495653 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061888017 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070391466 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061897883 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062437568 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061267192 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061630692 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062594946 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061498737 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062339718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061272796 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061048419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062294805 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06201746 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06648971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079635823 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061665352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061930085 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061994274 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065954128 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061587116 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061369625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063768229 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061434214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061510259 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06219724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061379296 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061932717 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061307926 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065947756 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065839876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061396825 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070011056 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06604816 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061279019 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066213643 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06154681 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062178598 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06106767 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061284861 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061974837 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061646448 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070324742 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06169873 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062734748 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061542552 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062500213 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061654528 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063321963 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061188211 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061197595 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063394422 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062626614 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066512423 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061024628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0625765 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061420801 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061878816 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061189213 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061244224 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060923682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06451188 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061908333 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078718908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070752288 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061394339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063543864 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062476476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065387522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062835679 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077425885 seconds)
  done (took 5.743260776 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088631351 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087881108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066606674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066989781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062317557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061963799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070044436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06229391 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066548523 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081128529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062126377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066775871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066982557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066644935 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062710105 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066902697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070519113 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062439412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06206661 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066468861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06220347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070760148 seconds)
  done (took 2.672794491 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148136201 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067905522 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105881373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072910322 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070867895 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072941128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068409218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068630683 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068263884 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068955894 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068909285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068054642 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070605567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068456516 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068589128 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068393838 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068207077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06929033 seconds)
  done (took 2.531466933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080260384 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067220116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08625412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067303875 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06748384 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067126404 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071629046 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072333186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06757631 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067378084 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072906722 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066927526 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067099703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067526478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06689296 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067539695 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06791133 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067688103 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07229383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071507482 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071538619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07244756 seconds)
  done (took 2.715648883 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090978971 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067405255 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082223976 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069370317 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062710781 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062098766 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068823947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066737246 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068412897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066495648 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067099938 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062081106 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069840358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067049597 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069198051 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06682663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066471554 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066865905 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06658208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062258878 seconds)
  done (took 2.535153956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085164138 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065058037 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065788996 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071658684 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065336655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065128683 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072306147 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065106985 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065190623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085989549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06554333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065538078 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071766345 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069905053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065130426 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07184786 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074376998 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071872279 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06524553 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065254558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086074456 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065162131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07186312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065262907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065504643 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065193386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065103518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069181873 seconds)
  done (took 3.112994578 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066827069 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064216533 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064506431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064796099 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065749824 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064856097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064931315 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065499957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065272959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065064412 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064827752 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064728244 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064667414 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064766209 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064598045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065442613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065116245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065016664 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065009404 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065318185 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064629424 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064560932 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064811475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065247638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065099292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065944784 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06615485 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06633248 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066011908 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065069423 seconds)
  done (took 3.127191977 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077040064 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07318837 seconds)
  done (took 1.322485438 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066010045 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07921825 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060963099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072300965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070788784 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0652878 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071604025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070910091 seconds)
  done (took 1.723577065 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087442465 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075625101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064661472 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075968814 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075008688 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085041053 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125841636 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063979159 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074328344 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064950484 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082113723 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066179106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074350035 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068980628 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074912508 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077595011 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061772799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068753458 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065451518 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062305427 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064486518 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077623095 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073500472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062133254 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069442637 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09152303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080004788 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06336089 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070776682 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076163718 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074643297 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061145212 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064449444 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064338958 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062156653 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074907885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082328006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071279541 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076658922 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064930342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072159625 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061830002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072479187 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074387303 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079516816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063928988 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063789974 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062099317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064888719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069851164 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061762308 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068645668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061118067 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075617767 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071689212 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079180747 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062762186 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069716359 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070316857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070593354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075315709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069888664 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073128937 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063274082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079290172 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073317217 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075325687 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061526133 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061439369 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061930828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078179368 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092144764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073644265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064208517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064796302 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061777252 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07084425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064260843 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073004423 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074870419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063764526 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068101847 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075765304 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068264573 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069834948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070011597 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062171612 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067341381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065136686 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083290088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062308803 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061978019 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064914601 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078577518 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073382895 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06319563 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064821902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075115475 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060853946 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063998854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06440631 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069624923 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07704075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067588117 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06812912 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077356383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07306472 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068997242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070387677 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061040954 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064337112 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066064051 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074762504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060637247 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070865191 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067707609 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064039474 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075518222 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061827258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062669766 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074823485 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07412076 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061383069 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060005331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069683473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062462955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06467328 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075980358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061464018 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060274347 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060842676 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06993614 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061571474 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070102256 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066067869 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069269617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05998858 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06082029 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066244887 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.200244727 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068214875 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071012249 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075240478 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070618828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063552799 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076686072 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071123507 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066557612 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073618653 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068119331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061972116 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066170169 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071026818 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06277955 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071224791 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066343562 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070570376 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064311033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063386308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069842124 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064155518 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066075768 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06924487 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062531418 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078690437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070651772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061862505 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061700422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070672637 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06542709 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063167816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066317147 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070503385 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064498265 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062663805 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064238633 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070041488 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07141341 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066796735 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064324956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073391592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081307332 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063545885 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071125843 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063706886 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064517897 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065153484 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078094391 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073944638 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067793002 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070482446 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061293052 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072956903 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075870023 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066335955 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06192047 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06634293 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067356502 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07597634 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06812563 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06437761 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062629789 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069801004 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066121553 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070549432 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063294792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066122993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068978568 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062236878 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069552773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06450885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077963315 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071122366 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062173849 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066058468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062252299 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074973433 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062614163 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065045208 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06693906 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064348733 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062821438 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070744525 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061248277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076393155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076755556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069806192 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066272525 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063791671 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075625535 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069437487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071715709 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070865658 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073377199 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078647271 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066224816 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070249805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078559327 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063321137 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060928864 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075773239 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062268761 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062562962 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062700364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062548454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070819338 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07050944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073692363 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061332248 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070258338 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06284514 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066345693 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062215274 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072039533 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070273207 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067646066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075594366 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063951739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063966168 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070963816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063031478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064192305 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06415122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07100754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063358835 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068697334 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064971746 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068178425 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065154452 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061642942 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068505115 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062549854 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067909045 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071106219 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062029041 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068116136 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069242776 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062227451 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068477651 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065669898 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064670534 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06945146 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06786238 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067047327 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.198277201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06265076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076554118 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064190504 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077052432 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069370151 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062058746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069177615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070567155 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068223942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065302881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064486834 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06924111 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063519424 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070588239 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075710046 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06498583 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079000944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074918859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069597611 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070479596 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068957796 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06949596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065885064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06824961 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064585567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069464194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063447101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072210874 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071234986 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068898582 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069792205 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064346517 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069412114 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064606736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061575534 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065996036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066555247 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064359798 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076423607 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063869486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066531374 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062955483 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064474448 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062783158 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061108175 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070963898 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071489576 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064432889 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074719559 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066377939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070341525 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079711687 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061821991 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062817594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06281896 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065420344 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076512298 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064449709 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077335057 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069361042 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066382407 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061998536 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064413205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062767932 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061580894 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062076231 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072261025 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066131987 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06283065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064047319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070954241 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064422504 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076631345 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063384391 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068370493 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064172728 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06171227 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06661319 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06643931 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070497775 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064631361 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065470624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061379027 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063305594 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068217362 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070087101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063398918 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069322736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075904582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063967923 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070833905 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066344258 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061567226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070844766 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06313101 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063665319 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065950543 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071405983 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070791853 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064817706 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077732718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065587233 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06940636 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063539058 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062224175 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063153865 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063566075 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06338322 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066249305 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064287725 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076478117 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062045462 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069788354 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068545845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067294061 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073593809 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064366814 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06973304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069014743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065381175 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070409525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076952103 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067451921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071091588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064386334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069447223 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072906842 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065535354 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074408537 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068123527 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063747204 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068743527 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064493833 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062689846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062299519 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062045771 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072368166 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06323495 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064899293 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064810917 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060601966 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066287215 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06444105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074725718 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068709645 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069200634 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.194229258 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062383557 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065008484 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066547554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070250595 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071367181 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074700269 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071261286 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067762178 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062681059 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078733728 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073683567 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071603271 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06513161 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071441738 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064799777 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070564434 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068075329 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06843741 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064987335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071556935 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069960745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066757363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074408794 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071563082 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06475171 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069278617 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070010681 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069043357 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061903452 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063852395 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069778744 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072313853 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070740536 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064288496 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079468769 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065112801 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069167235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066565714 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063426762 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073380767 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062060114 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071026884 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064109563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064933103 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06207465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066847225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065375545 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07072474 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066657614 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062574553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079385241 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078514243 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070299079 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063527703 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063388567 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062737874 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062414962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066769815 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064908727 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069672168 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079087583 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066230967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066184729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06221528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06387444 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071061468 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072019143 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062236334 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062243922 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067089782 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069932206 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075849343 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062938542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063938873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071310487 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070759896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062288569 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066905952 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06174113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071761479 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080466698 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06435135 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070398874 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073820988 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076899393 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064017159 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062444445 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064300718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06999665 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069590639 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064772158 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065126893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083348131 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070824002 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066489494 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062770299 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070550525 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066541578 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077199405 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064335259 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064528731 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07501578 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070332704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07047326 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073778104 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075267526 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069725209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070117217 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063322635 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068634445 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062910947 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06630358 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064316258 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064205112 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067852811 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070034306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06641243 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079441701 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077156475 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066499519 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061213221 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068872041 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066524754 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062100584 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064592739 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062465533 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06236214 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062323285 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062521285 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069613995 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072302672 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067569426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063420709 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062818048 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060224553 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071919498 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069782014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068497636 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060255839 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.062982954 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.062989096 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070840971 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064954267 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064286963 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069214746 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068169129 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.200908904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063497755 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076513127 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063759076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070541536 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066835035 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064559878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064816641 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071490308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067981926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065163984 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07113902 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070974866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065704986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061705188 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061943353 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072981095 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062175665 seconds)
  done (took 42.348065667 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101305144 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063908656 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062495406 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078679965 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072028573 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063395394 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062488943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063806019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063804867 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065499274 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062167055 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062420235 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069760234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076926595 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073052188 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066821506 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062872715 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063635989 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062531477 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063459564 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069841286 seconds)
  done (took 2.683100572 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071792558 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077561149 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07458396 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079252091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070718352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067235989 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07528012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067264162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075461363 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072885879 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075136763 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067409761 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072297505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072512809 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072630408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067892276 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076000358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07137189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067786286 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075455043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067850249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074954819 seconds)
  done (took 2.853402326 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065050812 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062956655 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069607845 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061251781 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062733384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061561609 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066084567 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061748839 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065905084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065426752 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065809066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065962764 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070224391 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061876933 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066775539 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061927002 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107151303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066095139 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063720374 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064543131 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062115872 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070729127 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06196551 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062433341 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065355406 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066227117 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063990083 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062036522 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063397394 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065945661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06334359 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061287568 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069818259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068820245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06581247 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065384916 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062831269 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06281925 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061668433 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061837363 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071570187 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061966526 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063712394 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070253888 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061965779 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061531217 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06978477 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063555833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062140071 seconds)
  done (took 4.472191252 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076022776 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109908349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068014451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091360955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076830861 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069279521 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06804819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092374156 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063621757 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064818134 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077840293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077594178 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065669564 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067480295 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067762196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065616628 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066436904 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064604056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068712461 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065064577 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068768667 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069511326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076117892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077657899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06653923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064565852 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064918704 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067091694 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076921303 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068952454 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067374815 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067759659 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076964462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068127616 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06488646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064984203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077359299 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066212486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065154492 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063363528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065075984 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067001621 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069819722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07776113 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065590498 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070153151 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065412109 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063213806 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07660919 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065178294 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069931726 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07782705 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06625587 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066063011 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066917675 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076657285 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065172722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063976487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065437357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07613865 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063006725 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06613246 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077346196 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064394626 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069357558 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077626828 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070252202 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066413619 seconds)
  done (took 6.182515759 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073413698 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093476761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079151849 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079434804 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073052435 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073323205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073228872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073207634 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073459288 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077280305 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073768772 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114125691 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069511637 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075000987 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073364164 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073640739 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073194451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07360099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073227699 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073053804 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074029727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079186302 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073488059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079336845 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076388234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068913799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072916818 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073152543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079398747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073750857 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076180924 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073154385 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073224153 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079440944 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076870944 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073525864 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06304316 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073075408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07312524 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07313948 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069129873 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079844327 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07294416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069351767 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07345975 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072793593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079201371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076401259 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075048517 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077181054 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072949416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079485823 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072730703 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073515904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079324827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081963307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079327305 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079471861 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07313693 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079687664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079333349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081831479 seconds)
  done (took 5.992492539 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078554292 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069612983 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081517856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061980513 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062071119 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071869446 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061890206 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06441429 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070273676 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070787886 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072444249 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07230314 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074494749 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072169842 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072289965 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075009716 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072235866 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071874496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07042743 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072218803 seconds)
  done (took 2.705049887 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077494811 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081662495 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067523587 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071713758 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067089225 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072052685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067344501 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068399598 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068029095 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067687173 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07385144 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074098881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068305695 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072423444 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073486984 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072025256 seconds)
  done (took 2.417857213 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084206902 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069929359 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077341204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063617233 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067190852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062752334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063234935 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062092355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062435385 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076348048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063399001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074681277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063530671 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062357593 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062848812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069145698 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063172894 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06394941 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063300971 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076403309 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070297287 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06484628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067097349 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063879118 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068747066 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070966273 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065134038 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067212221 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063624421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063655642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069123862 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07016466 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062937293 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06391008 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062962449 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063822684 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063359674 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063671338 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069604776 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081396589 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061968571 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068266969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063330298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064773069 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06257217 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063890775 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062636744 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069122577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063818134 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068708351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063939703 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065778598 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063770338 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070857823 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065676649 seconds)
  done (took 4.942106476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079840318 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067261963 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061936506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061628562 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067351792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068362669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067607047 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067321994 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068692719 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062117445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06801305 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067210475 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068257618 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067833278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068188482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068070981 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062123936 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067925 seconds)
  done (took 2.498036058 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073688957 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066852294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071111781 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067491205 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066585735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066866357 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062299835 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062287648 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062234115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067148017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067208351 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066365664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062305131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066447837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066888697 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066763358 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066438847 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062758721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066838758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062674546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066922857 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062419542 seconds)
  done (took 2.730427497 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096441373 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083589508 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139708881 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079598769 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086308146 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072247738 seconds)
  done (took 1.838925827 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093584171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098000762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067037725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066944654 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072517626 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070445279 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070289554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070402406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075429329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075629844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070565729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075381474 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075174719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077164327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073351643 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07558671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070611528 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07073964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067202438 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080044999 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070953494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075450606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070833109 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070848979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070823947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076870288 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075173863 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075417982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07070108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075078664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072879678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07062863 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075780322 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075400877 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067607262 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075663046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071288306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080276337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07285279 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076909959 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067416382 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073274299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075080344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074325347 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07560017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070807851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074887611 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070653696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070929484 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082052847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073250205 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076642961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073040623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075522357 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074976969 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082148326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07573533 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07709181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072989923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075286343 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076800381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072877989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076582715 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075808648 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073434853 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077098872 seconds)
  done (took 6.194725128 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105857321 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06782999 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070366811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075336029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077224945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070896484 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070984884 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071052077 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071278335 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067955383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10579522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071506339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078050191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077696478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071804477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071309612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070984198 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077527392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068426456 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082084407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070799836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077399046 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077246702 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077025053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076188386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073517601 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070746941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071100184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07110941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070844428 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074893069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071562574 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077875745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067827901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077028855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070989547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070811456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07485987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070556722 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073601557 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077793523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080639555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070741343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070714185 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075527502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070401674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070561898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067914579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071109996 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068039373 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075451653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075226047 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07586243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076902446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070369352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070748163 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070341606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070396257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07047736 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072651035 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076725731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070330872 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081344919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070413736 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072279154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076881452 seconds)
  done (took 6.192805844 seconds)
done (took 126.803791149 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209724627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184631276 seconds)
  done (took 1.661694095 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074864654 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104873867 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083106685 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133317844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071398638 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105945551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10466218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083880486 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071329881 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071527518 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071196152 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074023272 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136826916 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071201562 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071547338 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073947536 seconds)
  done (took 2.691320447 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105720779 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165692047 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108406715 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06940603 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104490672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077013653 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069637493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082245212 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075776428 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071184394 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077924834 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078052253 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071312768 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075846594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075980347 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077613886 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071165803 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077289444 seconds)
  done (took 2.826112253 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104822863 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094573597 seconds)
  done (took 1.496350679 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172631778 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133655143 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201527144 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346522387 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154042283 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.422242148 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138908089 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139167616 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112859747 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135911197 seconds)
  done (took 3.248367195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104653385 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16821594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292467638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120375308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076192147 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090924664 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12199836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081917102 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083231282 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084096443 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083036482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078794691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102864622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07657639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075996945 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078535451 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106706447 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074953887 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076325458 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07842244 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105848383 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070243545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076849288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07504127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081016016 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080752626 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070993225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069822768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078265293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075398546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079004362 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087418882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081242849 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106114187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074109596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106669406 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078355585 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076469441 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07571366 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076393372 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079949568 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079928871 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078283849 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078267823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071313617 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078270573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071231526 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069580035 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080776102 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070838645 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080112717 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078686199 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105639392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071186963 seconds)
  done (took 6.095142292 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108863785 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106420076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071318259 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112556313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104306263 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070986736 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105890364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098916948 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107856739 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071157474 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068867513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070809091 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079844067 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081173526 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11634947 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10780541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072883399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070475901 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107856247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107547736 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069634419 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102035388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098011779 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107247536 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069070764 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070577039 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069680298 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070777032 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076191146 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07789657 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069841603 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07902172 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083345795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077106545 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068769006 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069106165 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069510721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078596597 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079180755 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078550214 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076351542 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068155202 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068978214 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069905268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069983216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068329818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0771084 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078862806 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07711011 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069451643 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07100977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069092345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070087302 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078531255 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076506726 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079461834 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078781309 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069664811 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069312125 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071879693 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07954614 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079298135 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078201514 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069808249 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078724398 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069247063 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079233412 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084811479 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069192069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070309764 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06893014 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069096608 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069623812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075900544 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076030587 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07015197 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068647701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069013368 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078618795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076601564 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068338058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075381544 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068045604 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068986729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070181217 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070445833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076042597 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077914516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070115879 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068827847 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068739769 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068523334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067552787 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075871244 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078250444 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077687395 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077053784 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069759868 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077684683 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076646377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070095966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077487219 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068619753 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070294025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070137685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077488914 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076514841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078325147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069168907 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068891311 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076624084 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078893365 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068940621 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075096866 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077075665 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075091066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066934184 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077935164 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06787448 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076335691 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068275078 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076781682 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067914103 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.207607371 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070451543 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069566716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069852393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078319934 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070680552 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069408211 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070796919 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069264439 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078500223 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081139112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070702194 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077414166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077579354 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070545886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077464182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06914482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077819386 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069495269 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070491491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068800777 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080577178 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069321256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069136497 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069267402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079054345 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069164115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07953318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076642322 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068673787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081169031 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079174644 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076576782 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079593036 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070445213 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069578208 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069201539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069452095 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07633312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077734004 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07125834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069302463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076367262 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079470936 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06869445 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077199089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077175482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077605866 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070028889 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069678601 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080100985 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079393099 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077353797 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077288757 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07802398 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069832678 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077080552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077870967 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069623429 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083541102 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070079626 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081407516 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078572186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076236548 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078353063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078903625 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078803079 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079339882 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081595896 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068865087 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069377667 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077720122 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069049268 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069734599 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077227587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070710143 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070644426 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081980842 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069594266 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078900345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068506835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077838416 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069367798 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070572866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082123619 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070067732 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070226745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077805116 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069311475 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076587179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078703805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07946019 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06902412 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07061724 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078063542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078440843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069040583 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068792124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071122941 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077011586 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076509814 seconds)
  done (took 18.439767757 seconds)
done (took 37.766128466 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204189199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152877252 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182098206 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114891733 seconds)
  done (took 2.048265161 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.109711597 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098862518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088181939 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066382245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094292992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066324049 seconds)
  done (took 1.852766749 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284173828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194837517 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177274658 seconds)
  done (took 1.984923476 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209158205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190604878 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461962739 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28246146 seconds)
  done (took 2.57211105 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140779036 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08275726 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065045545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083400408 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1244479 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149673536 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093372575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118345852 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076515384 seconds)
  done (took 2.316596897 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146920769 seconds)
done (took 12.280189219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09784395 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.234492652 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06951142 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085627024 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091980082 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077375759 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.204859306 seconds)
    (8/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.197510535 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181990034 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077314672 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.213514193 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06685261 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075895891 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066971178 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.241533935 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075300278 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117783824 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075793421 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198957037 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.148119484 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080351554 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075965816 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204088812 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131253284 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078760985 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.223494243 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130098457 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123258841 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.463426835 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.239492527 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152107035 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076307317 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085548237 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140099702 seconds)
    (35/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118930211 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.211315904 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.231357523 seconds)
    (38/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079011383 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175111129 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117024558 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074706433 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124190816 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075071575 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210635486 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217095369 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178169415 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074823203 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065067327 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173206441 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168408424 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170407836 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243619037 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132131518 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150145345 seconds)
    (55/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123371813 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128155141 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.14450001 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170269055 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083350104 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080563397 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130748538 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086935361 seconds)
    (63/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165008028 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077140604 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066513643 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101509556 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088773283 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 0.06755285 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098813338 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171362779 seconds)
    (71/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080691037 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.081734526 seconds)
    (73/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086946114 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065038922 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074179655 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087391538 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.169668384 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.223285495 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065181867 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.225051588 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070485381 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078750661 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065412269 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066430536 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120939913 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133494959 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072851606 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.268809648 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068462477 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068389293 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121042136 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079562135 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068127055 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141744912 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077620634 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07918439 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.123863783 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068165764 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066035088 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066465714 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191330562 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070922624 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079565974 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069691355 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135466735 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219614102 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076251254 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088763333 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067728551 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066867058 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067569692 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066523302 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091585551 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085277909 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068911711 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181331503 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087781758 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182561303 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123521728 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068309359 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093179549 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072854795 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067636568 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066602084 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087474247 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066432397 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132091005 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102167352 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141566139 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092501834 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067339084 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074734613 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149642609 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075789526 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075179832 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191710271 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13504421 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091755998 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067672824 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169352163 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132959253 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138301243 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066624396 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076161891 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195547967 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0675341 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084120962 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07713501 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066634262 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067428426 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073608463 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089781746 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07529462 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079687852 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092879505 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074663279 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121674986 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066395361 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066993239 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073429963 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087683488 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131280369 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077380227 seconds)
    (164/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067173244 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.131185862 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065477894 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193732223 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07616867 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066787757 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113829388 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078221781 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06616363 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067114655 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07775884 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090833625 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143037148 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080130539 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072842908 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131243064 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.158280241 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068916532 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074172838 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068603314 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082199199 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066527481 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137387273 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074020605 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070521336 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065673264 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066886675 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08933195 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072410785 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078534721 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065322792 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072896951 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091093772 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065463772 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076996842 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065900452 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212597629 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078744646 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08971683 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065477849 seconds)
    (204/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091322248 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065472011 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069025061 seconds)
    (207/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068987995 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110055086 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072082247 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065275996 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072931345 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066975017 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072120443 seconds)
    (214/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065773752 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178502637 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 0.298146205 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080297988 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078139702 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067856463 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143805098 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089674129 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076962417 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075899723 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068577165 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067781883 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067877651 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168078669 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075336224 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079168821 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 0.146929844 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06749361 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066477905 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070075671 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072390525 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066658371 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06712455 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073569022 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066902722 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076276176 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066948172 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069008028 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070251793 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076569618 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075290532 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06637752 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066340956 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066541442 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066843156 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074673505 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066638998 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171334221 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066089887 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114695241 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076367754 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066885971 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067595203 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193221037 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067579449 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066497551 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087143277 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067350844 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066968209 seconds)
    (263/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068476826 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066987136 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092158797 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08714438 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181700347 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066670327 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075374105 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066112595 seconds)
    (271/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135839088 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071144104 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073524978 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 0.134307488 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075066548 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079776159 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067676318 seconds)
    (278/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.079025897 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071178797 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070114795 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067410368 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070330652 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067445308 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066602981 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074722263 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066860649 seconds)
    (287/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072873133 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08799099 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067048599 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0748335 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067262024 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073394764 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065567893 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066823654 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178539689 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066707914 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065972532 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090863137 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066643514 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068001661 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073222133 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06604449 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066187246 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067123854 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066444489 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067746307 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071017807 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067990883 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066586357 seconds)
  done (took 33.004489257 seconds)
done (took 34.347803201 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086195775 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098202698 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073153427 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093142216 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080804604 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095448632 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074020868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079471106 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081436761 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080605196 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079159975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072383047 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075462618 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075914807 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074267335 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097722221 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081025473 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074871864 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074786085 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066051399 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074618033 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066579297 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066113279 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072827919 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078030921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073795103 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076019735 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076606646 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066600364 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067301466 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071441256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075022372 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066196498 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078693798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074895272 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074437361 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076318801 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07856118 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066426827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067023316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07661434 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066188578 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074126168 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072731433 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07169544 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07305924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074223788 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07898312 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097228623 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070582735 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076449362 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076946305 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07800066 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071935753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072123938 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074425983 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072513699 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096930086 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074525901 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070634217 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075680894 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075504213 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072667909 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075189186 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074372485 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077357272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078651304 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073020268 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0766118 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0729948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066242636 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075033155 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071497029 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066841588 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077698135 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079131323 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065400269 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070531847 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076901853 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07480208 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066043669 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070853018 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065988893 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071137961 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070635439 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072536909 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071654591 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073411811 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065932356 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074879264 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073684963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074382692 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066285981 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079286406 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066002231 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072384292 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066315726 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066189276 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065578396 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071145242 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065879232 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070654451 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074608672 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065443783 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07060666 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07919608 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065582752 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072802765 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064983234 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065743978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077263799 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07577402 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065993414 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070189666 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065634987 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070993034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065452154 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065459082 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065274152 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065626703 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069959012 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065895923 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070153009 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071598195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078315713 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065589707 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071257131 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070502102 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065790536 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072396565 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066109414 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066049235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065587138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078998577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07003097 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06628806 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071278782 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069698087 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073635371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064689941 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073951173 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071189746 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069739595 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071673594 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064634586 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075955796 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069808943 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069117573 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064625253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065185567 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063795424 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064325153 seconds)
done (took 12.513405643 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072256551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.11710494 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092511915 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092811171 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082461245 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067337165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074029036 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091860463 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06894723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095954882 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088240926 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088059871 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109621237 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066044103 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067632701 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068126667 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068303626 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078753371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093985151 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088678151 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105934373 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066723595 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085972685 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087381308 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083822571 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090630467 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068061067 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068210087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069820478 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087848377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092422668 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070529368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06764597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090127324 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084584315 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080212562 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06826702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075957844 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067766384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066584038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068533312 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087603608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074985529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075636256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068222637 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074731721 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068249668 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083170206 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087291238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075478079 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082570805 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09076769 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070906743 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083529447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066349803 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082695107 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076544171 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067633336 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067288609 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072405373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067068509 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06976903 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078363637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075966851 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072228679 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081605838 seconds)
  done (took 6.605258603 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086685667 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094016032 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083875509 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083978386 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066426545 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0672725 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069898942 seconds)
  done (took 1.984494725 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068490644 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087179351 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090786167 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09105592 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080709905 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091561372 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075103593 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067683195 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096337686 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066163567 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086958751 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097633234 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071244073 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078822758 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091976878 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067440304 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092076689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067520477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067878855 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09149228 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071877961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094869716 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078724099 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068106837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0798386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068606632 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099844661 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075168945 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068939449 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068997279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068452438 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093824696 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079807182 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081894296 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068607122 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082286993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081426155 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070859267 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078609193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077003418 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080675698 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069268507 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066802331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068892202 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069832689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078912378 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06642505 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068811514 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068195302 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086708029 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066711519 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080146934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071200252 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073413325 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073166082 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072721187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075784304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069224045 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086820879 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068693114 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084879779 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083811606 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080911412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083571802 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067698564 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079769991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080722224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068547227 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069387813 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069457178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08373331 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070767222 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069669216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079412234 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067228521 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091924158 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091292987 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067190217 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081008339 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068169418 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069027511 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079422838 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091047896 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072915632 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068492409 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071854273 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069587539 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070931922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06667104 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071879522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068755932 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073196378 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069075504 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071303512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070337713 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084048433 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066891866 seconds)
  done (took 8.845895997 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071333632 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068620165 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069419237 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068360642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068108098 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068395988 seconds)
  done (took 1.870242381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092699933 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068570157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08105954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068868317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104138441 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084157592 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084262133 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078165974 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081759754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080665497 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0842299 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087591511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088563484 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070531326 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083420346 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069786977 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083975255 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072988254 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080061928 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071011452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081430849 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070648343 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071262992 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086942088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072395238 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069431005 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077870568 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079772195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079566124 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078453926 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070389866 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072128154 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075104359 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077871512 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084191324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075314796 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068450278 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074802068 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071270629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072172549 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086352369 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0709035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073485371 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07454384 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077672613 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075325283 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074826878 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077456857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083680463 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074874455 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075072099 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069505959 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071930832 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074584886 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07516032 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078236292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074531005 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083789596 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071031722 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075440214 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068450325 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072011964 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077681159 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07183804 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076324316 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075110656 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075721676 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070637891 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070837228 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068459047 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074553133 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069010999 seconds)
  done (took 6.941711681 seconds)
done (took 27.696962862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516186446 seconds)
  done (took 1.924829379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620883941 seconds)
  done (took 2.061424095 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.016405017 seconds)
  done (took 8.451414069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.379488333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.458226159 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.739564604 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134593211 seconds)
  done (took 3.185611208 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710943434 seconds)
  done (took 2.158018544 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236772294 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225086486 seconds)
  done (took 1.915961005 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350298483 seconds)
  done (took 1.7934381 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.073971201 seconds)
  done (took 2.517242007 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235876999 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16028268 seconds)
  done (took 1.842547512 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446257918 seconds)
  done (took 1.888560765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.227073853 seconds)
  done (took 5.671864927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220471941 seconds)
  done (took 1.696175375 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238411337 seconds)
  done (took 1.681210764 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739859193 seconds)
  done (took 3.183859542 seconds)
done (took 41.426469145 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085307062 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085297332 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085249188 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081564228 seconds)
  done (took 1.758057374 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077445396 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071030829 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0746718 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070587603 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074732791 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070823008 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072451385 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073429133 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070795437 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071121061 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071001535 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070763745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073629688 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072290244 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06979763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074217548 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075058688 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07151533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073693196 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07163918 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068939879 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073607722 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073697341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070448535 seconds)
  done (took 3.180471778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080516827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073408445 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075539937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072016612 seconds)
  done (took 1.753521242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079471648 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088298353 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085657257 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077220074 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088113079 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083707625 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067201788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067282452 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068578646 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07649734 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06646859 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092372779 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085842957 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076725115 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078723553 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063327918 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065542246 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084857453 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077172427 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077586137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069076915 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076688828 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066441831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087154031 seconds)
  done (took 3.295366247 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083192943 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102381278 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080420115 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091777162 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093062854 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066284887 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079696628 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09378899 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135778881 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066564899 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072046055 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066280339 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075349456 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066531857 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081339977 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109182617 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113679498 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070066528 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101633939 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066418774 seconds)
  done (took 3.172267716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084813089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070024849 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070863936 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065995196 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076483588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073075902 seconds)
  done (took 1.901826326 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070424985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068033435 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067719871 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067531703 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072351778 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068294018 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066444929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068240897 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06808478 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068103064 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067108574 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066372523 seconds)
  done (took 2.273927561 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191041442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06848207 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068904897 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066750235 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070055274 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066999042 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081371737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068247706 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094174759 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067004799 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06706598 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069318614 seconds)
  done (took 2.43747821 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198135512 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074093296 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232444386 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14601148 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104626581 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108889471 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110826173 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108785726 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134161182 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097491235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155696341 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159703245 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102890714 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131903274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087120018 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11939708 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145602738 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162241089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101483388 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15624683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138332413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12221484 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140966058 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09762089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10090341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113419387 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071578619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077011027 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165580948 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125951725 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137244507 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106801455 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089797366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178296949 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157981399 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135322153 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143265201 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081185022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116904006 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128699788 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193885472 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087161521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155017905 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104452457 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076898781 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124650625 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109524806 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113453328 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098472412 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086020183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27758909 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175915488 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130276945 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083756184 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118626459 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106612594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108792706 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114249618 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172563884 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150570837 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1223727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069945941 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10640435 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142389338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126134476 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104989562 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120326543 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089420805 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125821874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151003156 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119584616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134349307 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112633897 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085371916 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11655755 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131052318 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120398285 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165576419 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119328745 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070738986 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115457259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095773255 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078410498 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142795933 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073896173 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168713395 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098705028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120014188 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124736722 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10538649 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105221105 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150097431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13464873 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100472146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083579179 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101028413 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113505576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136477238 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08511268 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10451411 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10937694 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076261242 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125501298 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072262317 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11589116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092098405 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115361227 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120548018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07571088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260314132 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100540383 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099295741 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125436168 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150104295 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085737158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078500616 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156546101 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117013433 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099936977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135510584 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148269401 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11761904 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094147156 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137855089 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159288926 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087895378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153712265 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100200843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080910691 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10312823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118504337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107699595 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11812354 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079300977 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114938635 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155524546 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072357318 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093059177 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129702533 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078983865 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078438687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101091526 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100212926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093376235 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097654512 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100649887 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13099273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119352805 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102037064 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118672886 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097895135 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157935193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085799309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099059464 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100475992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070729159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127556449 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147026271 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076778624 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150951073 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117502861 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112174801 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114919653 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081018361 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129140621 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077109829 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070313395 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132547372 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10766153 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104172357 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139974608 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107767107 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115011905 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110935026 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120170567 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118805921 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118704246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102268105 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.083870404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10681755 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119212928 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069564663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085933274 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077666393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098206188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088470919 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079181199 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130398768 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112051528 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100382427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104302225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088615035 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132421411 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073140245 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112288145 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.109886048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08775633 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134409771 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132723729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1187829 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091807865 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120051369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069376078 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070848453 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081473796 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111453343 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078272322 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078076893 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101907257 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132220397 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113999488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119495171 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112615829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105987076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138403267 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068165067 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112073568 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124751081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108399476 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.094864524 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084763328 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09036281 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126652832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09460501 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161010785 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103666477 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113684654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139224602 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095394368 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073659933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094682353 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116306496 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093195488 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.392208004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097707112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087422601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106555705 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078784961 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100997242 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122699723 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114820574 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132611683 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109687287 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128368398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07742614 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111065645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119417466 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117043111 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083515353 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114227689 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158263449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097251946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114105055 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144050706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078156086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135775068 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163342822 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139628297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082941528 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102379287 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11697859 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120238808 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115053701 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131518484 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101215455 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134536663 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107460064 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083116911 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085060472 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094047288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101605941 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110815682 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101093606 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110640575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093582965 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125930714 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100275783 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107155413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113581622 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097172212 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093083339 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093683038 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167283188 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1134202 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16596898 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096817737 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134131323 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150166537 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072506269 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076373037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077598073 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129551515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081404924 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122997019 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.258964706 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11209148 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117628022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132279627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092856721 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069866622 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104871095 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126026293 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118050055 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093891907 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099633182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15039144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11369025 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076399629 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108317639 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112704293 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100004337 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162581173 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07999677 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105418312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07464467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077407674 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119571578 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146761542 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081066692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.096656608 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116760111 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107270663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119756707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094695288 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106773606 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125692674 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139272732 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122363859 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086456776 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107152588 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121191993 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146057252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098406356 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097143963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164484199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145353515 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150558532 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084578389 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109216487 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109846181 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10487424 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129731003 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081580157 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151124736 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079392663 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127467901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097270565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086719586 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122127544 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107978816 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085136284 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13445696 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111352794 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079673949 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077303454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260581993 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114117024 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099628038 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072661858 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131300211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072047289 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128183059 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163063332 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078468698 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100658192 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09262349 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079820466 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099579508 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097976467 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083577342 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096576276 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160047664 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084457829 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137587527 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126351698 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108368357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130430826 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099665921 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639907644 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077841861 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143037404 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110702167 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166611685 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096585459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113787773 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106626233 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115745773 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134973336 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098488092 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174642016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124300178 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113229638 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076926531 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09888612 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099707293 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086084815 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103814059 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10938711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108472593 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091838788 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11274109 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116838869 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079755762 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093490468 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145632868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110756544 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137147958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130870011 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081657551 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112562167 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128230171 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077400518 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113101345 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144571241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100621958 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096251913 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079645453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095522693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161707185 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070827532 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145571022 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11244199 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106787536 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106706052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101992081 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120036168 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09651593 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112499726 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087666075 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.100970594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141606953 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079296446 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07541459 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098587338 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101802232 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.092561716 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091348703 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094272275 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137530315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068970496 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091819349 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107783349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129913585 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154373508 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.100614606 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079450832 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109444266 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10984215 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105916902 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112444465 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077261427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07736267 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076941609 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098938063 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116607874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106371422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110792668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101193665 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145719804 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080342803 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219733638 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090637646 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09870239 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085326105 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075825396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091215942 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09061766 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097419988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104347908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158358395 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090291502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.084658105 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086601315 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071410322 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079161254 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11550798 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103445419 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109262821 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09757865 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079311176 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097715414 seconds)
  done (took 56.070395851 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133103677 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101442286 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101988784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148238001 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126350081 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205153879 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155044604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193428314 seconds)
  done (took 2.941682169 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074997565 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098609934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109274382 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088096347 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070461765 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073042568 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232484978 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086964255 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069611512 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094781841 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081938884 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073160721 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.454739417 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069161256 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071475343 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081378977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070266216 seconds)
  done (took 3.505000604 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390388496 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607602832 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357202142 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077272651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.86243436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092695504 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.197791471 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139973519 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083053244 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521423407 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367272995 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131439292 seconds)
  done (took 18.444821089 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084713004 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077074696 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091250366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090890734 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079245197 seconds)
  done (took 2.033383978 seconds)
done (took 104.228276884 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084207927 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341681394 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070127499 seconds)
  done (took 2.050956231 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093247017 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089643741 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089675563 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08743168 seconds)
  done (took 1.97608181 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077152554 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077484267 seconds)
  done (took 1.761824936 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229092248 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176937423 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097245588 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085191086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08090951 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081568084 seconds)
  done (took 1.865875408 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075180638 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073197662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074007807 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07443847 seconds)
  done (took 1.908640947 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071143549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06718754 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06951931 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07192602 seconds)
  done (took 1.893665504 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086934568 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084915164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079698657 seconds)
  done (took 1.866607293 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104110132 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09033134 seconds)
  done (took 1.808515601 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083643625 seconds)
  done (took 1.700345848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092703537 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09977066 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132502072 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115731163 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13955443 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115559467 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084879647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086022203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079363443 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086803265 seconds)
  done (took 2.646254156 seconds)
done (took 21.678683739 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081910286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373193095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361151033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09085094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668874173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357706338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971979823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09357503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141727878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069182805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085416561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648727698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961944268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329887047 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946410671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322625003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650931397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069907015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069195487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069693747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955185014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069142835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069259628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070078932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650537572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373148396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069320691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324496173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069522665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070778758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356282441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069858627 seconds)
  done (took 16.105557789 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073842185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123244273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073505218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085142741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071791221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071292974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07299232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070385675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121564906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06945336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086225933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069266359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072864154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070502524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089072608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069655271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070390204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070162066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069713044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069587023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088249754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069507365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072149385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069925055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069438983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081715622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069970781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069281671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070079828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071688314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072551422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070146243 seconds)
  done (took 4.079744321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120802322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125971442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074189249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107021065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112945155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072077148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147808753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094268209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128059607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069364307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085956884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069671173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10361964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070330538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089033565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069743592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071023991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069778712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069363266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069399402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088428622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069333877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069746588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070215541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069658128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083609214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070052118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069806292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069756545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071137636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072671712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070082153 seconds)
  done (took 4.327638192 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073635909 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074149932 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081203705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08227473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068205716 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070829462 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071787273 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068160737 seconds)
  done (took 2.22757828 seconds)
done (took 28.367671456 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080828462 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068349348 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071597933 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087976653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074375 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080158432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066055324 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075763288 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072825213 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072701374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074949178 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069187701 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072172157 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067210419 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074630206 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067773194 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082557682 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072249764 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082001726 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082948639 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070316298 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073783844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07587945 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081344409 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081423342 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081276242 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077077999 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073847813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06887503 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071064183 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071544966 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079873725 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081973101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081658796 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067985871 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067997953 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072540828 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069364351 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082797235 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077236914 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069810596 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077383587 seconds)
  done (took 4.755676642 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087391488 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09043755 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083513071 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079833034 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091188688 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083436558 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087351044 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078541195 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078326146 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086824273 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074956861 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081737929 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079500469 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07355245 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078402366 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07640993 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081201626 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075680659 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07966191 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079288903 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08811971 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07365927 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088179297 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081108544 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075629743 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081461236 seconds)
  done (took 3.763714826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07553144 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085890386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093118124 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143719458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111464669 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080654005 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081814036 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092571502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097731201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069029309 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073828615 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09366659 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094132745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075012368 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069377538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084978691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085030391 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070963014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076424651 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097968784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090516506 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086506139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095187368 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086091322 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068660875 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071935889 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074175183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087783354 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072418565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08076318 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072351237 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073283417 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07089928 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080618276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072221451 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069158525 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094558749 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081223666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082733639 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070490103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079688848 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070935655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095632949 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131053934 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069130089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073317063 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073252803 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080734361 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068732313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097135467 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081279181 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068475823 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069717042 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068073832 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068577122 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071882813 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070464899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071026307 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078742831 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075760604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090580612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073907591 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086180495 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068459643 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078882115 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067989088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07033219 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067863255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09720833 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070208004 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112673092 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06952461 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067412021 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080018303 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078934863 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074871258 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068478427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086592079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079884966 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072965044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077541734 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071941359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072318667 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099384437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069031319 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068481057 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067407488 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072641022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0721075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069380011 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080581559 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068457836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07237297 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086826514 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068569451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069533933 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072689852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071270406 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068068662 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07957592 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072639435 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070054811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07898296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069286724 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072352916 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082138702 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075450293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067548422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070862798 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072252732 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070741009 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070254118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072431728 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070884324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075447346 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075253701 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074313743 seconds)
  done (took 10.831002779 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167893533 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156905905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071231956 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148975255 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077278864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081013171 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151846094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09586449 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068940966 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070793121 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06954058 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11038956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105940744 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116488699 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081719987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070302115 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09196245 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115105375 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154156692 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148417702 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092132688 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077767785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.0718177 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071323068 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071284763 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079110325 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086257063 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077876272 seconds)
  done (took 4.458475801 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080052926 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10392771 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073392565 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091899173 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08855575 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069988725 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070896585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071116089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086067007 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078707747 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069674237 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074689363 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074010664 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072518327 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070662321 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075856429 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076422419 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06853189 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073793183 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075008524 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079961335 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094232429 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073002177 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069453289 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071851564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069314461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077777812 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084480199 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069657962 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105431404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066941747 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074472343 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083816212 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070164514 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068803588 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069635744 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06950171 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06956064 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070996696 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068298252 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068498047 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073004654 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068044411 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077482955 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082579567 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071202786 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071528144 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072540327 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072515938 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067147767 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072232033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072068767 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072342392 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076872773 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073756889 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072587473 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070524738 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096402557 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075312521 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068804533 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069200629 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068087677 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071647161 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079014736 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084704175 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071888272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068126185 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069461474 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082387763 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082128494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068571139 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074317122 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066880101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071477652 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071977497 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071938509 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070564967 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06815244 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069006867 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06947661 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070624214 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069025329 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068534532 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072349352 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067770494 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070894241 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069812833 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070830683 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078124508 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068833898 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072871894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07071178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068380374 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072196438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074788208 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072439982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08044188 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080946807 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06998367 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068077972 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083494383 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071993037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068917305 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075175088 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073952893 seconds)
  done (took 9.461391683 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09462396 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069279 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085686085 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092555966 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07889028 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074907844 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079236115 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069099664 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085518201 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074252997 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077261027 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067651526 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079830192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079118242 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070239035 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07953426 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072798262 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086969092 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083838675 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067841844 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077822455 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08150188 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081649236 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083708073 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082936113 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084623826 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081344933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078792316 seconds)
  done (took 3.911000609 seconds)
done (took 38.814882571 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.735481607 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.882484381 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70973217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.936121186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.83945085 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.732843698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.797628998 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.704094896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.888883486 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.74849922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.947808728 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.78961758 seconds)
done (took 64.504660371 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.736853407 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.859385023 seconds)
    (2/2) benchmarking "String"...
    done (took 1.960487028 seconds)
  done (took 5.533736662 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.918810078 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.577512638 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.945443822 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.705842312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.712643227 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.983383991 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.482622883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.160041817 seconds)
  done (took 30.216163643 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.894484401 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.934882528 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.419143424 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.45647543 seconds)
  done (took 15.398325438 seconds)
done (took 62.540503048 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.727214712 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.753928944 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.708289128 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.706188196 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.797110942 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.720679262 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.813257076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.927603552 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.708780776 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.720041255 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.712067365 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.193335911 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.719108081 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.863475544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.710985022 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.70799752 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726140697 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.159015413 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.861712166 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.725710847 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.725626947 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.758246734 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.708973142 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.707533383 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.735491031 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.711596644 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.099064023 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.713084465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.328554786 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.714712565 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.740799444 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.990072853 seconds)
  done (took 202.539243664 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.710456745 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.763223294 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.829133093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.733128595 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.314702487 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.880534897 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.807125281 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.352730535 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.709495992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.719695756 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.81283595 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.708125337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.833327946 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.655874993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.732675283 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.822361155 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.999575192 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.846240846 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.736303424 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.858875514 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729241562 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.625942337 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.600548262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.799066289 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.72165907 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71587853 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.720810134 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.867013336 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.900590325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.96898759 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.710262207 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754996555 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.92453033 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.58180806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.733951196 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727709381 seconds)
  done (took 167.558216226 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.885282799 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714555935 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.712160611 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710846635 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.723248186 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.712171646 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831786077 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834436531 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.364233462 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.26092325 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766198565 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.709304299 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49977084 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.712186573 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77967372 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.72527822 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.710517553 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.724860021 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.737507073 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712815153 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.711984736 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.712853713 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831891436 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.724913333 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720474154 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.711013188 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71995683 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.100745551 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.711042692 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.712167035 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.880828251 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715238673 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718357257 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.971793161 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.710425125 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.715004607 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564046118 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.912303946 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793356655 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.713383795 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719085102 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.713424488 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.931868878 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.712777555 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.711860836 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.714575279 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.717348797 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845748846 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.713666296 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.835542373 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713773395 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193724038 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714006363 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715988972 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.678430469 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.298526465 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.715037737 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.717031719 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.713264812 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716905361 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.720987274 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.531395251 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.788113389 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.714871896 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.718260694 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719300646 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.713136604 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.81127374 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712743379 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.371859636 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.77393416 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.843399697 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834748366 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.717796328 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.714104162 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784256376 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805020609 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.712942731 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716000496 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717671516 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.714938031 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.794897242 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.714429347 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.872923793 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724928615 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.71610996 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770213951 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.784189836 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.714532515 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561940201 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.713010081 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.715108954 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988393909 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781227708 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.713797533 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718129818 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.715412686 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.865637599 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836207952 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423849916 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.716114635 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.640702028 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.716705581 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.859209836 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.714794802 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.858408891 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.717489106 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79888791 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722343363 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.719907899 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751885041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.714893683 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.777472406 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.714097939 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.091892994 seconds)
  done (took 396.532662918 seconds)
done (took 770.222375193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.326811641 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.284065798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.383164992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.300505567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.277779715 seconds)
  done (took 13.222025335 seconds)
done (took 14.87647833 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.795241821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.799204745 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734425685 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.79595197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733624261 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794639739 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.779224022 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.737041429 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.767101773 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.738083419 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.765688928 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736542724 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723201683 seconds)
  done (took 24.552336343 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.968641772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.938846896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783859272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.935299915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757572926 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.938525543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872982495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.859657433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859629543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754174491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.725134295 seconds)
  done (took 22.048791272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943873813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946783372 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791109455 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.942613363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761941442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.940148334 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879166213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876982678 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862496233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728857945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728246746 seconds)
  done (took 22.055882155 seconds)
done (took 70.30974858 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.722659222 seconds)
  done (took 3.375399343 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.744458362 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.897047231 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.72238416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.721882697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.722948181 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.724485322 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.723192927 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.722407554 seconds)
  done (took 15.632822368 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.721592887 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.720785962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.722347805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.723325293 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.721782821 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.723967813 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.723407408 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.723230347 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.722510578 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.723558393 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.722414935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.723231298 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.723097342 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.721394619 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.721421638 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.723303994 seconds)
  done (took 29.216742593 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.725744206 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.722205985 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.724397421 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.724897343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.725278647 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.722580803 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.723496186 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.724333573 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.72147255 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.723076681 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.725047656 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.724861502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.723599695 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.724063234 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.722898749 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.723114192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.72460939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.724961311 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.731546891 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.724879476 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.726257228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7263984 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.724639018 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.724040635 seconds)
  done (took 43.047175084 seconds)
done (took 92.927152591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.41713425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.32325194 seconds)
  done (took 9.396389352 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.728024116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.724602604 seconds)
  done (took 5.176091245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.72497678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.724941953 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.723012387 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724116499 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.725043902 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.725936351 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.72416054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.724961299 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.723089141 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.726033699 seconds)
  done (took 18.904169858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.725558767 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.722668952 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.724008409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725921665 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.722955647 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.726086617 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.725172889 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.725848979 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.726320798 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.724340996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.725025891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.72489912 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.726247655 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.727315871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.726468385 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.725036584 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.726509235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728097684 seconds)
  done (took 32.717242306 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.726059521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.723802383 seconds)
  done (took 5.107964135 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.725287986 seconds)
    (2/7) benchmarking "second"...
    done (took 1.725344737 seconds)
    (3/7) benchmarking "month"...
    done (took 1.72628103 seconds)
    (4/7) benchmarking "year"...
    done (took 1.726557335 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724895434 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.723715443 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.726204074 seconds)
  done (took 13.735612976 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.72674095 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.893691579 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.96426483 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.349562511 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.725383943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.731234511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.633331737 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.730188462 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.730738355 seconds)
  done (took 19.141861116 seconds)
done (took 105.834806795 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.541624561 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.724841775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.947081638 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.773740559 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.749286948 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.064744834 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.735653628 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.006858531 seconds)
done (took 42.202620557 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.773649391 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.395981372 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.398860645 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.753484542 seconds)
  done (took 15.210686715 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.724626606 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.024985039 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.74841459 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.52053714 seconds)
  done (took 21.685532313 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.087271534 seconds)
    (2/2) benchmarking "read"...
    done (took 2.068705751 seconds)
  done (took 5.820518785 seconds)
done (took 51.155085931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728579492 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.727788331 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.727052552 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.72771026 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.729104881 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.727876443 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.726861222 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.728827403 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.727886352 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733859166 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.728501902 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.728819817 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.730362951 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.728998055 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727411104 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730740894 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729807367 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728595118 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.729812444 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729668416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730810184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727809484 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.729668218 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.733196855 seconds)
  done (took 43.159592383 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.73092064 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.730024687 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.730712054 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.72965729 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.728760908 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.728873229 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.730460876 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.729685757 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.731490117 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.727956982 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730438179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.730872142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.728174182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.733773544 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732206322 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.731821302 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.731238622 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730930975 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732262001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728357361 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.730173307 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730833469 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.732311153 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729037125 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.732999702 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729866949 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.730747119 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.732685538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730199945 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.730172228 seconds)
  done (took 53.580369923 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.734942319 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.739281442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.729032933 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.73169369 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.729888233 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730734377 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.73350349 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.730428771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731775108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.730424669 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.730548083 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.730923926 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.734048822 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.728458594 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.731575122 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731484164 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.731036032 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.736031352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.730798935 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.732664681 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.734386444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731069051 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.733267795 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.736042414 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.731963423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.734718642 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.732455384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.731302514 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.732864961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.732288372 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.734042641 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.732672612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.730268618 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.732086568 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.73276763 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.734352171 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.733037336 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.73951028 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.734605786 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.731167286 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.735870878 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.733179237 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.731797063 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.734808769 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.73447331 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.73429171 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.730806697 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.733794917 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.732719398 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.733767478 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.733606285 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.734933342 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.734714808 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.734446027 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.734639635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732066568 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732380224 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.731901562 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.733012639 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.733279034 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.735436935 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.733730927 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.732017693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.734266999 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.73520288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.734333152 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.73197949 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734290453 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.734041876 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.735079622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.735800375 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.733925651 seconds)
  done (took 126.449767434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734513682 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732636623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736326461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735508598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733953576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.735001576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.733970632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733784852 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735155729 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734682941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73737134 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735396996 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735455336 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735865224 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731946887 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.735954348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734262584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735355788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.735607191 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734230385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733860346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734459461 seconds)
  done (took 39.834389468 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733608367 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732413215 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.734306504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.733546794 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.734715548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733012967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.733536952 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735720149 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733748026 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735073374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735920903 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734925306 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.73585497 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73533223 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73612309 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73558668 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735758835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736063178 seconds)
  done (took 32.893836662 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735649178 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.736562426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.735509019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.735813542 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.737095393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736166664 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735302045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.737335457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.737066535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.73658007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.738135599 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736006139 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.73772833 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736376493 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734720975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739828308 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.736967052 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735883632 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736038697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739329452 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.735772522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737207252 seconds)
  done (took 39.874384156 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737390355 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.73598062 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.735543309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.735394795 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737489143 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.735664116 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.736179897 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737434369 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.735973053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.737231399 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738130454 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736160913 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737109839 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737311306 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738079679 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736385206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738869087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738294541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736197045 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737755484 seconds)
  done (took 36.405685848 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739392409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736694387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.737349204 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73941887 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738386862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740930189 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740680079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.737960577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737450591 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741135077 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.738830875 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.738165709 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737906745 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736365441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738312432 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738578245 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737764878 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740396458 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738161735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736726277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.737809879 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739129863 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737647757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.737667585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73781239 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74005252 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738107883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.737295866 seconds)
  done (took 50.34602789 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740226935 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.73681291 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.739368146 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.739652272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.736511985 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739537485 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.739022257 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739424679 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737938026 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739666251 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.739966017 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.740852338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742540441 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.739820161 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.738925978 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.739905088 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740586955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740180644 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73816862 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739660937 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.740215762 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738492753 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.739509256 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739011487 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736987421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.738402117 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740891257 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739758455 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740207393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740018037 seconds)
  done (took 53.8558727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760321935 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761534592 seconds)
  done (took 5.19311705 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740434469 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738807016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.738825111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740396936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740763242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.739829508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739942213 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739289824 seconds)
  done (took 15.590305641 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.739373334 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.737987925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.739954244 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.740584534 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.738952833 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.740032172 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74755861 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.738458674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.741194059 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.740508439 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.748941736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750373292 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.74523737 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.739760722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.743847646 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746824434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.741023303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74285249 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.741778218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.740474671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741014134 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743453588 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745126507 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.739785934 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.742729883 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.752110083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.746849534 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.740190739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743075818 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.744986312 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.743034829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.738956144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.741735309 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.739537581 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.740981803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.739976364 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.747695079 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743993738 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74756337 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740568092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741089521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.740466245 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.743387192 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.744899619 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743000295 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.74132108 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.741421472 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.741864119 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.740448469 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.745983385 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.748278891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744551858 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740759952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745814205 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.744361357 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748762317 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.742825443 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.74742067 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753595554 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753653176 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.754306195 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.753490034 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74661835 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.740336223 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751465421 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.769925682 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749840718 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.739723017 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742034829 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.742174047 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.752045352 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756566011 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.753334625 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.741071416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743035953 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.741417978 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744370778 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742989391 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749981784 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.745524607 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.741971026 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741814961 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754575657 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769570326 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745483354 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743818239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.742808704 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.743691227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.744286809 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756880806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.742956664 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.741946485 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.742226636 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.744859796 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.745362315 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.741774546 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.742048004 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744995778 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743225993 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.742391914 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744052616 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748517849 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756613607 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742555476 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745043988 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753281188 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.743791852 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74645248 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.752425263 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.743007457 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741783304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.746898079 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.752609496 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.743716327 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750058852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.756186465 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.743789884 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748638527 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.74497318 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74609706 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755158911 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.774976914 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.744642302 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.745014343 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.7519394 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758287875 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746077392 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.750987702 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.746340487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.747027995 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.745964993 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.748581688 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.74641797 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749046212 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746630556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750260443 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.747818477 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.745127742 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.749520195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750347583 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.750551567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.750130789 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751344713 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.750155252 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.74901038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.749873381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.758102601 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.747924142 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748878926 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.746800101 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745533087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747123369 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.74969041 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.746829402 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.747462676 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747665389 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.750700293 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746620428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748394528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.748007076 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748279469 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.750006384 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752746034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.745782209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.755108889 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.748495577 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747137746 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746491955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.746792966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.749314078 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.747867121 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.7482496 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754274963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.757193257 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.746382467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.747928473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.751981024 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747839334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747454318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748641122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.753827621 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.760267318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.749031891 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.756869689 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.749879417 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748540765 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749583071 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.751900658 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.749345569 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749392786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.75474644 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758627825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761597488 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759186839 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.750127286 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.754318434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.752828971 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751865711 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757692629 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.750305803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.749682436 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749871549 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751209324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750351942 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.75365392 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.751539866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.7502003 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.749471555 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.748174976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.750415148 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751602597 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.751405716 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753758333 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.750562391 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748376289 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74921197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.752809022 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.748907308 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.750591903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.750522146 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.75108542 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.752498014 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.758147273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.750229472 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755250528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752821966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.754176816 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.749859902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.750745932 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754575554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.751690998 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75702368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.752091186 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.754459404 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759160729 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.751019986 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.750560606 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.755948866 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.752070993 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.749870523 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.756478994 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.76004619 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.75177954 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.750730166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.751178672 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753654929 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749002321 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.759616138 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.751885249 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.753838718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.751146058 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.755455119 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.75232994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.755274633 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.754153853 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.751471616 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756169141 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752400313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.752776119 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7587352 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.75313167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.752387792 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.752247364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756600328 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.759309625 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.758099235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.753705297 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.754252142 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.752815774 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.756850435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.755038988 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.751571023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.755141567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765168135 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.762230053 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76220187 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.756888353 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.75220985 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760177521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.753489353 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.758019167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754509727 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755881881 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756706097 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.754311806 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.753755879 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756488244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.752854867 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756842019 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756147415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.755680033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.75399897 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.755884315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.751881699 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.755209169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751626775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.755769319 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.753606715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.758574396 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757562498 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.753709413 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.757650638 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762796714 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757716772 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.756671297 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.756912702 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.756469033 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752532722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.755151522 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.75365323 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.759552479 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.76297526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.757028912 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.76728928 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.756751653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765252812 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.75430404 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.758392952 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.761888093 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.754259348 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.754524208 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.754625794 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.753938269 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76318374 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754357181 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.756476948 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.758414258 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754410393 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.755220424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.754928922 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.755283472 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753196821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.756526326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763748449 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.75774617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.760550327 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757881565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.756249696 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.754429534 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.755056061 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754190927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760319764 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.755893264 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.757697151 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.758306852 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.754570095 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.755561445 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.756097116 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.75493371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.753946811 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.755261895 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764305701 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.756986189 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762297698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.755284472 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.766400638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756751624 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765407983 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.760242877 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.758851986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.757123765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.755599129 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.758948158 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.75718261 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.759446129 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.758648998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.757448532 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.761094681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.757134 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.757295315 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.758368382 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.759352196 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.758564662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768974207 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783235229 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.760138124 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760669095 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.755623329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.760660262 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.76220232 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.758198736 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.757022749 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763177705 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772758208 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767674728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762094993 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.758417489 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760454576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757922458 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.758112342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.75975072 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.758979723 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.757241063 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.760605851 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.758233342 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764048679 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7582063 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.760194632 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762841771 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.76092468 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.771119913 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.760498303 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.759884786 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.760126041 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.759226592 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.761257878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.760401997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.761516129 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762421109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759706023 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.763862612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768090663 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.767439419 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.764558418 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.761929503 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.760540423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.762262515 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.762414112 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760171512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.760717795 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761081102 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.762471929 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.760992441 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.761784671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.760603005 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.759583972 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.761702155 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758821737 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765838519 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.770520764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764417959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759350141 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.759900619 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760236591 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.761601441 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.763316745 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770223877 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76304209 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.774605187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.769781357 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.766702355 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.763288461 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764971373 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.772710401 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.763385603 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.763897784 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.761742093 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.765848185 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.763081862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.76854963 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762394278 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.770021054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.764145293 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.7618418 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770713871 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.764329138 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.761248427 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766243948 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.768161824 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.7653132 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.760993189 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.761480704 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.763345488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77117788 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.765843587 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763102236 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764503664 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.75929958 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.764681745 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766308682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761218236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.765527472 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.760232266 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.762583115 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762645736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762549839 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.760650384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.763040281 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.763028967 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.7674623 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.771604195 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.762370042 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768109214 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.765130473 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.763876546 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761004536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759278319 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.761027105 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.762239185 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.762185123 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760464373 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.765137195 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.765686144 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.763758777 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.76402584 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.765900448 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763136371 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768072381 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.77535616 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.768376978 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.764386546 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.760830328 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762736542 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.766636511 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764443603 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.763180407 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765210615 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.76505028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762585419 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762350736 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.76462079 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.767934797 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780809928 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.762823264 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767265697 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.766116505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.767465659 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.763006049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764398823 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.765205584 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.765672761 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.767666627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.772831837 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.764162219 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771912797 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76620706 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.766034355 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.768017369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.770008133 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.773015951 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.767735372 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766334313 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.766473039 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.770166239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.785596834 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763847453 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776336456 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802908181 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.766483413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.766827399 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76466308 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764596409 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.76660023 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.767574219 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.765484601 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.766586362 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765866827 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.764671408 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.765147021 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773125898 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.768937465 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.765939255 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.765229341 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.766054792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.765216892 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.763639518 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.7669385 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.763169153 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.766805897 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.766016743 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.764625712 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.76753047 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776946316 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.777285861 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.765393004 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.767847146 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.765636802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.771683266 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.771044029 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781237116 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.773316156 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.766188514 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.767207919 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.77094952 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766406456 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.76586637 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.767583201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.769576611 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768499889 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.765363911 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.778524412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777250576 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.774576309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.768540124 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.769067596 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.767603764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.77039532 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767433929 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.769402987 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.771215999 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.769284869 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771480646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.76792578 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.766715742 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.772596736 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.777377552 seconds)
  done (took 1048.594496855 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76810574 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767876516 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768023179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768945694 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767173771 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766814845 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769218352 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768696277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766094501 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768748245 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769137416 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76814086 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767722433 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76833873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768092796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768162773 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76864576 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769812903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.767334688 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767919859 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769654673 seconds)
  done (took 38.830439897 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.769115928 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.769878415 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768953721 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768945001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767447126 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766405447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.77049053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767997568 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770315052 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768721015 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.769234446 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768931059 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.767330764 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.768909507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769698801 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768661272 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.767628198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767184035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.76891314 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768724209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769664697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767729084 seconds)
  done (took 40.609984593 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.770446074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.769939018 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.770404671 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.769721388 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.77146474 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.771391159 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769004248 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.769421279 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.771516175 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.771084951 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.769745192 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.772627211 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.781123269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.780866924 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.772623242 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.77071383 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.916576099 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.773728837 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.77338048 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.770639976 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.769467625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.776194376 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.770731423 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.770801383 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.771827551 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.772970845 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.773305614 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.772356614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.770651689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.771631758 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.77576965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.771103078 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.77367234 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.77645868 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.77009031 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.773245037 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.777025699 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.7738279 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.773237476 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.769709083 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.784817313 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.800364338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.772255165 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.779909034 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.770370646 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.770637067 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.774181976 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.780490631 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.772795467 seconds)
  done (took 88.747773788 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.770152071 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.770647802 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.772249355 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770287381 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.770152954 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.77284692 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.773261371 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771038708 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771086023 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.76965494 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.773170412 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.77248005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.770228275 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.774803282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.770617957 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.76973244 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771016973 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.772457765 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.775046455 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769492541 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.768945976 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.771113208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.775219374 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.776346601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772267915 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.774087876 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774298313 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.773859807 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.768873332 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.767309849 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.766289405 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.767131814 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.76902512 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.767336364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764335765 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.762098024 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.764241083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.766187314 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.765608668 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.767496042 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767314953 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.764611283 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.764758867 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.76418183 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766903768 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.76463708 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.766053754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.767617977 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.767105073 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.765727073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.767088181 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764056665 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766547159 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.765061259 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766388501 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766588035 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.766751756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.762297796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.764539513 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.767092529 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.76696613 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766138224 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.766337923 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.764355442 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.764737521 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.768005443 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.768658307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764742173 seconds)
  done (took 121.962637334 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767503616 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.768547792 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767007594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767115311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768112941 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.765912381 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.766789052 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.767631435 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764245269 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766879796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767438678 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765240555 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.764051967 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766036793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768363486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.766894881 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76814161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769207948 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769060034 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768038515 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.767526252 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.770835491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.766695887 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768357829 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.767720454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768747572 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769612246 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766641848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768114459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.768008465 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.767870073 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.769934686 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767001533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.770308259 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.764713434 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.770565471 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767645785 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767586328 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.767320495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.768677288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766503314 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767706784 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766995211 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.769383623 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768202684 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.767585215 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.765252567 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.770048663 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766281853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76785776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.771524254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769303404 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769241968 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768050712 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76968906 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.768438277 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769027776 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768195053 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772867966 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.767842853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76976332 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.768636748 seconds)
  done (took 111.312308869 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767106244 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764992676 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.764838173 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.767370205 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760541065 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760291443 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761394405 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.760427372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758687281 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.761079672 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758617811 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760029605 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760268299 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758675434 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759729977 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760850314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759787575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758973622 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757852172 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759582742 seconds)
  done (took 36.918289691 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.758878426 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759720645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.760752247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759605602 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.76035823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761921725 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.760203378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760958216 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760346465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761501458 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761829795 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764047912 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760116783 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761086399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760157428 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.761668803 seconds)
  done (took 29.864279136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.761583699 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.761471078 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.761765715 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.761188583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.760969124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.762148782 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762994089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.762394742 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.76041201 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.762367468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.762525228 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.760874512 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.760213223 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.759790402 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761499122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.761633224 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.760320316 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.761072587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.761817163 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.761397692 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.759057164 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.761940292 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.761422155 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.760679443 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.760719653 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.763061588 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.761152212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.760682029 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.761705167 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.762820903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.76194058 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.761340413 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.762909244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.763975174 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.761282094 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.761472639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.760629989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760525926 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.761916491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762895575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.761525547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.759705109 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.761372573 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.762000047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.760830053 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.759483384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.758569359 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.759300547 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.760409242 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.758728635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.759813628 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.761126667 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.757807797 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.757295255 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.758005348 seconds)
  done (took 98.553474788 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760697594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757274433 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.756702827 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.757208572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.757452563 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.756880789 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760128781 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756926441 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757016724 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.756252051 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758778352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.755349285 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756149666 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756482884 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.756696723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756446893 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757681675 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757334042 seconds)
  done (took 33.321074901 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75251639 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.752022768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.748910477 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.750227185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.753635164 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.753391185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753342521 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.755405531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752617044 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753170183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752756603 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.751246301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753289394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.752786129 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.756761037 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752946914 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.752167783 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753419815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75041469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751667447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.751532599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754194828 seconds)
  done (took 40.240003004 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.748460411 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.752785543 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.765466489 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.776487401 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.774502921 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.787344523 seconds)
  done (took 12.286725831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750646767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748844748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751025514 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752427749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749905747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750921915 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750191539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751334686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75104337 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749092515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749293383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750079909 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748140585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751763512 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750786405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750926323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751566795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749233516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751007152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751306581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752627363 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750927793 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751546923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750492544 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749203257 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752114897 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751659125 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754369318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751259085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750431572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751522071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752134147 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751534317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749855391 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748611473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749615581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749412165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75016815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748473584 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750967026 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748832655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750359471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749550486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751732678 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750182601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748673272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748940326 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749795773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751167153 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751310779 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750312752 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749029306 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7502637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749078386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750866468 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749625544 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749367133 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750728921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749758636 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749488987 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750319395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748279295 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748732519 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750411228 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749977731 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748476438 seconds)
  done (took 117.204431332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746588593 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.747739313 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749025352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748215943 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75059576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747117787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748730222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745971192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7479658 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747310132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747135271 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74798507 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748475549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748905996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749682118 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748001935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75124242 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751459052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746305956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747941165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749458924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749669788 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745559226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747249437 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749025504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746676257 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748417424 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749679227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7467321 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747296516 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747851465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748864565 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747261578 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.747613442 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747841794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747948165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748665004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745094914 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747596065 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75045168 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747745188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747703034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747609722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749042101 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749914441 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7467217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74640007 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748255205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746223233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74803792 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747629916 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747237507 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746884655 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750554244 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747798509 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747328646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753743775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746634678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7471725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747586713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746332388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746553293 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747653376 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747460518 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748073083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746787476 seconds)
  done (took 117.049876041 seconds)
done (took 2434.342901481 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.746927314 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.951592271 seconds)
  done (took 15.377768666 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.920503146 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.873823024 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.761485008 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.767905065 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.753915565 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.785815083 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.763765627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.752176334 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.756348756 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.757072335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.756079015 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.943173315 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.81206673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.752820173 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.755017404 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.846312265 seconds)
  done (took 50.450253315 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.757863153 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.760096089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.770533331 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.761954447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.757210638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.776046808 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.790799648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.764150959 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.818132193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.771040867 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.880489405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.765318219 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.759023544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.817517892 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.768501193 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.770354965 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.853269118 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.827720501 seconds)
  done (took 33.855963765 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831969825 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.759930562 seconds)
  done (took 10.288113764 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.753392427 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.761662147 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.83413633 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.757818997 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.760498874 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.778782157 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.756650741 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.750627305 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.780242928 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.772042697 seconds)
  done (took 69.393847051 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.765263095 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.758822846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.753605757 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.753357258 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.754343371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.755633286 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.755591308 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.758242701 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.420446005 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.786599365 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.763840452 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.760420104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.754359012 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.758260311 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.752503637 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.775697359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.874276613 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.750008138 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.753456451 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.764835986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.75494558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.81233244 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.767454867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.755345189 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.785935178 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.421264441 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.762660515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.759084659 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.867798187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.75095377 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.757409727 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.939916701 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.758821724 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.211716779 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.02751899 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.764468112 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767537132 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.764222379 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.756599691 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.868967121 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.756469572 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.763686778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.689385105 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.002518065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.846781226 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.797066003 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.086083083 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.771516426 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.757045186 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.786308239 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.760115847 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.761225128 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.770899258 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.262205469 seconds)
  done (took 126.525520659 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.753826727 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.098435446 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91963048 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.757626833 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03655524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961123524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.756313854 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799270427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.754720954 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978341827 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012272893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857226246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.754257828 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.756264014 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755812664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.753472993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.90717815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.823026455 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.757609807 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.753832704 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782533609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993423602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.876360709 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75878161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.780291319 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.965599393 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.875931346 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.856836847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.526904287 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.757469521 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818522404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.757648703 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.758927547 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.753472762 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.911895984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851325668 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835359623 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.755087889 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756636126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754679681 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.499186514 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954393982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.84788344 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.893570253 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.008074949 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960396743 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533479111 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.757010473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.491950254 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.921354978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.990307859 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.98662099 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.875533518 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.763297256 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.292352427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.757797953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.759754426 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006163344 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976266402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855075139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759412798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.759234426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.756290536 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04716942 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.765339942 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854489226 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766815625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.756944492 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.858504704 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.858800456 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.99265225 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975536928 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.794062006 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.118463586 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.267776828 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009979994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.822288624 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009667355 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.763430791 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.760715105 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840254136 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.591059002 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012750896 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043523083 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00792261 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791909113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.479954745 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.760179 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.985722706 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980476214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.017787837 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003283046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.004844544 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.057337243 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.759837935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.761584226 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.992470536 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.882450813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.762130824 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.111475116 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989371806 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.287640207 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.787662273 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06357652 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.892509652 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763103705 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.388956219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.762943778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99037637 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.799052446 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.763964131 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76444096 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978817177 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.749305976 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.762734565 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.736357812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.82172239 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.767492625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994261358 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.768108006 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032097459 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765435691 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999272751 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.196103172 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.790910704 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.990256159 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.00981162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.765043071 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002292863 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006211791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.877397291 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.038993488 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.662672585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.762405912 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048006827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.766751085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.760921041 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.931009028 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.763811421 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.909923839 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.763531309 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05763815 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789995476 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99676052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769563353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.018571502 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79648401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.814077608 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770852214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894570012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764071825 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.595871106 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.922641541 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.76934113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.764349781 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.546777398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.766600083 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91323361 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993300757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78547225 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834908438 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428862463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768595367 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84530707 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.789416589 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.216372431 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.764871135 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.018242529 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.76535806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.766374923 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.765691505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.04839434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000028672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.767480076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.763203287 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.668979625 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.76486251 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765900399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943360388 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.1124396 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.763101531 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96953901 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769179291 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89157601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.768785595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.838653808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.103323377 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764326812 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.766036744 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.767737786 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.764936127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.768701391 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.029146474 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.226551134 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.261142351 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.904639153 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042527573 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.077790897 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.01287842 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.811705627 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770793128 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018388451 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.770335805 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.826699195 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.767843355 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.786917745 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993979243 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76938908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975957882 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035106509 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.616629026 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816429681 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.774904734 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772030091 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.772145137 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920869932 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852897653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.774467886 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.774482137 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.886446971 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.890610464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976655325 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.775376615 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.858120884 seconds)
  done (took 880.132763539 seconds)
done (took 1187.703601431 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.773167996 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775814983 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.776811086 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.775093279 seconds)
  done (took 28.807187182 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.778136981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.78142784 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.774643168 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.775873606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.776356237 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777475438 seconds)
  done (took 12.370241005 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.780589218 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.773579501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774621291 seconds)
  done (took 21.035484756 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849063245 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.160816146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.907071182 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.262734989 seconds)
  done (took 9.886440041 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.772204504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.77060296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.770380078 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.770584365 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.77205174 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.773998745 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.769114992 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.770173902 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.771160093 seconds)
  done (took 17.648023956 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.901407529 seconds)
done (took 95.355469326 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.843153675 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.131749604 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.872665425 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.974143052 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099645363 seconds)
    (6/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.787921905 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.134369983 seconds)
    (8/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.866117332 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.960879878 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.772616334 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.541186803 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.143573979 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.850540007 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.12837433 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.772678939 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.992208343 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.252681523 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.937312795 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.770952631 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.777290211 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.928107646 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.796018413 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.075517468 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.908905258 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.897808902 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.766063377 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.565576809 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.769274448 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.573886689 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.151066327 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.772475203 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.795457534 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.853966628 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.904973484 seconds)
    (35/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.803418053 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.770381982 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018464782 seconds)
    (38/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.021928122 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.771863687 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.718743331 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.79431999 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89588158 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.939344287 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.086414777 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.852487715 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.988574632 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.907541521 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.87486402 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.679712951 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.876462856 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.013721918 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.557179178 seconds)
    (53/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.770883377 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.772258772 seconds)
    (55/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.87300005 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.871673101 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 1.982889541 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.934707272 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.776157136 seconds)
    (60/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877935156 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.830563638 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.07937916 seconds)
    (63/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.886682197 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.77511567 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.725187233 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.777557223 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.907752999 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 5.459482863 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.062070934 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.887039124 seconds)
    (71/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.59709734 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.026343846 seconds)
    (73/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.773246535 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.927610267 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.7919249 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.783319039 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.859935041 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.213746208 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.861808771 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.771134042 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.032923826 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.948937555 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.128516442 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.97466036 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.8508263 seconds)
    (86/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.937372275 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92905881 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897075596 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.010571325 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.777022118 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.869981927 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.894084258 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.912929469 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.777654749 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.789971071 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.773829823 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943501994 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.069480581 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.857099639 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.166120543 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.166881276 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.837591256 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.902171314 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.931132183 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.80481337 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.222525797 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.787983024 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.853162642 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.777407287 seconds)
    (110/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.150730075 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.774649197 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.173820024 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.777411068 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.445790578 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.912782466 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.776718945 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.718972252 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.232046965 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.778602104 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.874430977 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.882422086 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.883354008 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.774070062 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.069273489 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.66380208 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.115264695 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.814742962 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394095015 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.778459462 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.077322494 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.778194646 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.077141986 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.777121565 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.803043569 seconds)
    (135/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.798564011 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.110095322 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.033922293 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.556566727 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.779840355 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.965355952 seconds)
    (141/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.239717722 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.780279187 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.540827062 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.810472364 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.099658925 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.955515934 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.036045519 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.781164418 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.058535995 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.972679242 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.031302631 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.671278128 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.80621675 seconds)
    (154/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.010797312 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.26688263 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.808052362 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.856943709 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.081535377 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.077768494 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.159444745 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.762124835 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.243396868 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.786438038 seconds)
    (164/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.161120972 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.912635456 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.803800011 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.514372139 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.778776039 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.514129185 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.903647308 seconds)
    (171/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.90751534 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.970158498 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.779700957 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.060625605 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.44860532 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.788251204 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.673536936 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.105668181 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.905653757 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.776013907 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.779292401 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.956874067 seconds)
    (183/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.776313344 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.124080259 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.779878836 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.76403633 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.778695605 seconds)
    (188/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.315399147 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.178324954 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.172894753 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.796998265 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.78826233 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.010020945 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.787319657 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.781535511 seconds)
    (196/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.781196609 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.125319037 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.100398822 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.096154059 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.784086758 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.898489399 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.39853775 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.180333127 seconds)
    (204/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.805429269 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.88354685 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.095385698 seconds)
    (207/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.843441512 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.910667328 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.913194174 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969881528 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.853836068 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.777761429 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.243898926 seconds)
    (214/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.066935908 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.780496191 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 5.547351187 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.985276847 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.447799692 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.086127876 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.78157779 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.095084551 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.809138614 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.859225259 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.10907674 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.870061523 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.530481065 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884321647 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.808229279 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.175716492 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 4.679268685 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.078051824 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.041824575 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.039844813 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.874292464 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.958658168 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.955821356 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.043429769 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.784998988 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95325784 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.911328421 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.860569587 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.000660938 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.803928608 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.78044446 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.742367622 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.032250459 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.873071742 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.887468334 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.808248031 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.782544943 seconds)
    (251/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123406256 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.908082555 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.912959727 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.78319642 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.124650809 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.783173091 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.869740226 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.090816485 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.046777963 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.891649268 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.78524373 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.258461579 seconds)
    (263/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.784552522 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.469396546 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.398650078 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.686915229 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.786874805 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.896577209 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.116090535 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.026704087 seconds)
    (271/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.987901799 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.850497749 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.798360303 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 5.520022927 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.881903754 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.332666238 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.575231606 seconds)
    (278/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.914278642 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.875951167 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.840511226 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.780244178 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.550588966 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.887117898 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.865531514 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.581118499 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.457960769 seconds)
    (287/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.787876775 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.724227095 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.970987517 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.807209916 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.177610179 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.816143545 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.918300257 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.782453907 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.023058451 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.456530407 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.865148215 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.564614468 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.096649371 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.788711726 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.208713585 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.959165234 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.992169074 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.865423726 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.127560811 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.788115908 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.01970935 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.783206893 seconds)
    (309/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.600009484 seconds)
  done (took 978.685208316 seconds)
done (took 980.455557701 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.81036603 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.803132944 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.786488671 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.81112845 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.900639001 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.835335991 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.800359449 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.792535187 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.837498073 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.836893575 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.78644958 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.83661515 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.787391519 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.787180304 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.786636163 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807316894 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.094392439 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.814624411 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.806122937 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.801666589 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.805658466 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.785820636 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.836446026 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.834428968 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.793226939 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.792741745 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.794605418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.809453223 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.901673501 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.789175061 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.798020487 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.803370784 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.093203205 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.813756428 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.788006271 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.808135251 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.801037837 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.802145405 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.791975007 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.825357442 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.181676837 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825420903 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.790674981 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.788306114 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.791729504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.799318284 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.790787852 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.798019242 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.805540338 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807596003 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.175500744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.8389579 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.795638844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.793106854 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.804069337 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.791828936 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.793478964 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.806488114 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.811912566 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.81073479 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.081721212 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.826672533 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.795591796 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.808241437 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.802812334 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.213104762 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.82325839 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.799302126 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.18076937 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.832601729 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.210490827 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838189517 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.79335881 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.805909263 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.825289666 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.095084437 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.812639008 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.789303174 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.798627818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.793756551 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.803742053 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807839647 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.798319971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.793687398 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810327286 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.841872232 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.805483862 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.796567742 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.804505662 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.811165936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.803072376 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.804884242 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.79590497 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.792153069 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.805081639 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.796390326 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.795632698 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.795971181 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.798172772 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.805984453 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.181416459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845016655 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.794660929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.78938141 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.793905474 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.809935309 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.182492482 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.829583593 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.817056483 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.842271556 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.792369594 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.082502028 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.821659069 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809357437 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.804272147 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.796499097 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.791179869 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.082925712 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.20411655 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.843684001 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.795354749 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.791066613 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812382279 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.799894428 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.790397602 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.099671914 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.8201338 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811717708 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.918741501 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.810139733 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.829556956 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.794249374 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.799072143 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.846342491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812657037 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.829251013 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.79607442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813118677 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.811945448 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.795593626 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.807499333 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.80868707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.792854287 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.804192097 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.793559553 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.84683071 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811041857 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.811617907 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.817552146 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9195524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.793970671 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.086217631 seconds)
done (took 282.096905432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.873022902 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.794796438 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.887361261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.795079184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.882041749 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.866112627 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.795095163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.795473152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.794729795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.281033784 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.795982798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.798268625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.792844103 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.793113275 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.86450698 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.794597621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.796149064 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.23487334 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.795938815 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.876527689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.795650585 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.79243291 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.792031293 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.285763005 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.79883954 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.797239154 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.874479092 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.794209943 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.23204267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.796752918 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.795252793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233385291 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.873573952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.823379465 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.804856905 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.80053606 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.883119613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.806153358 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.863661253 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.864595012 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.889687 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.827178751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.794526264 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.796842707 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.797241552 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.796526468 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.795959023 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.828541439 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.797658243 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.802436317 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.23464408 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.802442325 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.804556843 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.796663788 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.799988937 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.825579402 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.79776775 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.798155863 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.876448231 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.799418011 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.864944286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.285701576 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.285928093 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.799173987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.798147283 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.799251624 seconds)
  done (took 180.237465376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.862291078 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.875982578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.865984597 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.802110905 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847588219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.863312241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.801031877 seconds)
  done (took 14.648851267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.805002091 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.796284624 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.846774255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.848236317 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.79849421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967774836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.79885358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.808842089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.803575608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.826189788 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.798601052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.800135691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.806761542 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.794469863 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849745632 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.807270144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.915113288 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.800033047 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.800055199 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.946202345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.807862389 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.804002378 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.824282803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.809754573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.799432969 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.806447723 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.368112676 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.798676837 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.800868082 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.79932847 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801278586 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.838274622 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.801197918 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.798117328 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.801804597 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913700235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.800657125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.800219954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.801426604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.800213696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.801287768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.799348568 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.799468247 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.7992817 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.800359789 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.822226708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.800032864 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.800252933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.801481099 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.800441499 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.82381747 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.799451005 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.799715356 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.803291532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.841629696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.807912646 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.801802949 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.801580993 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.803175097 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.800718301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.952053315 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.851904212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.802519507 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850657152 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801046872 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.800980038 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.802391533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.800657481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887876147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.801909498 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850625951 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.802630788 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.960150866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.827002104 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803268343 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.806724975 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.805904745 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.803805445 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.802049719 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.806460938 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.80163838 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.803560482 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.804809936 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.807757629 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803155672 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.91597383 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943039048 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.80071849 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.814985745 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.809092641 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.803033137 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.848891018 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.802806058 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.803168286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86178857 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91709702 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.831378063 seconds)
  done (took 199.027489544 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.811821751 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.812200023 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.801426313 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.816260734 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.803413859 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.806175431 seconds)
  done (took 12.585788972 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.806518657 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809031222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.803305452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.802301201 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.806097528 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.805095751 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.801430417 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806762631 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.808186604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.803361442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.803301915 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.80338593 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.803578954 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.804494116 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.804980123 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.802914429 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.802800943 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.800037233 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.802640063 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805123462 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.010165143 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.803233996 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803914536 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.808852811 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.810537664 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.802728497 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817139341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.799342045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.801845678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.812699376 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.810326324 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.804625575 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.808384479 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.811517424 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.810753756 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.808878513 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806737948 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.804694388 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.802441385 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.806129311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.80320107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807030724 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.80431597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.806066137 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.806582808 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.811837261 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.812306012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.819478125 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.803272536 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.802730392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.807315273 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.806109754 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.807886695 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.807295791 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.810802489 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810259313 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.810094619 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.805408367 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.805263833 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.810911646 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.809231216 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.807761955 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.808368928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.810845005 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.816939854 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.804735295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.810073944 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.810963557 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808880666 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.806272177 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.805519391 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.807048874 seconds)
  done (took 133.032626814 seconds)
done (took 541.274078732 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.816488325 seconds)
  done (took 8.552522456 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.005123569 seconds)
  done (took 8.783217158 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.159101652 seconds)
  done (took 9.900206897 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.83142047 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.827092839 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.821341927 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.814417949 seconds)
  done (took 29.051448932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.093482402 seconds)
  done (took 8.829078912 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.823700932 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.802123163 seconds)
  done (took 15.435071048 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.809112028 seconds)
  done (took 8.5464769 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.296627368 seconds)
  done (took 9.041014566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.807437243 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.815891017 seconds)
  done (took 15.389865418 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.80409837 seconds)
  done (took 8.540069703 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.989338814 seconds)
  done (took 9.833259057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.814355257 seconds)
  done (took 8.617611605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.839509588 seconds)
  done (took 8.574834809 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.916442422 seconds)
  done (took 9.651648792 seconds)
done (took 160.484215623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.820337121 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.804676948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.804545435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.801473997 seconds)
  done (took 28.967452699 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.840811807 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.836449609 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.83768363 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.8477043 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.842941426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.836037804 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.829444727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.830401279 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.847872263 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.839632629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.837584515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.838907359 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.836074195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.832308025 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.84199802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.841590601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.851741733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.841293995 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.831835511 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.83921984 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.804936986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.84890556 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.839963872 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.808105275 seconds)
  done (took 45.82198571 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.999286462 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.878741434 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.960226842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.856469825 seconds)
  done (took 9.433462734 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.855826851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.860388581 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.871163814 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.909939484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.936201396 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.869814444 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.831442236 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.826735276 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.816004538 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.860211942 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.936072664 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.852378075 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.942279417 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.806053857 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.984123913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.809713765 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.804853585 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.85860762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.911859731 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.921738297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.809709904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.859848298 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.862256478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.855966727 seconds)
  done (took 46.593035171 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.811138614 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.816562177 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.815534522 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.809099115 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.809713825 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.809268539 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.816946717 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.812351184 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.829346468 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.8072269 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.807950199 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.808647653 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.806089291 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.80678621 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.810039757 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.821456945 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.823429413 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.810128406 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.814569681 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.818230595 seconds)
  done (took 38.006689629 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.806170267 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.65516921 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.15427651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.061057393 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.80870076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.808303828 seconds)
  done (took 31.034338709 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.820159763 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.81633514 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.807945738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.866068542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.946264091 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.811114906 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.809531019 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.817985477 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.851722524 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.870907635 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.828052066 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.83557686 seconds)
  done (took 23.825459135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.81005358 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.811481674 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.809460648 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.823449881 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.820390313 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.817831292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.816524306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.80940429 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.821780694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.82666184 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.815869644 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.821028426 seconds)
  done (took 43.55058883 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887163992 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682962891 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25218398 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267614418 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332169068 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013328562 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.80795461 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894829708 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.809736744 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078863556 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.176961504 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304810813 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059337289 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939415233 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.815773986 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.291520289 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103343104 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027279882 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83672306 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438416885 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920256133 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409768574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.498168683 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924921119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018521319 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.934546268 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.074129411 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.763793137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862056325 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81839924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819833777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.816372379 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087996652 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937191502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888993442 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821026553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226245955 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.521776022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.831750879 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.443835976 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302398077 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937140167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820029955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818793788 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743548279 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410823908 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910777525 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.818554266 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.514056773 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.820025208 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822997791 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890814861 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.818162065 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.623545332 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496934123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085851472 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.816962708 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817879485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377467831 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817104209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.522035151 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.754552583 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.899798032 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.501625648 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266571056 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.972007775 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.820878467 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821182305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743484728 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.437023893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93008632 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953790656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.837250906 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457846052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109905067 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.223487167 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874465162 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086871898 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.674462464 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.750894539 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034104589 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766283328 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743022765 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.655040004 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.746054031 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020960436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846995339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.393243702 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847355028 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901496949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822292067 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831328685 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823047002 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031771213 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.713613923 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820690315 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.108391303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07970666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834365881 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907730433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745711855 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.820784005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064398544 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.01962154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.138203274 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.302918562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905026641 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821123405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.830796642 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.821248429 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.829966708 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.085132188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878931877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812089572 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938633125 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.769833433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060770852 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846501351 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.917844469 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.171105235 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061085241 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15373325 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060486464 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882817904 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819326911 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820734769 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.505756807 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430803633 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.034852252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.832831227 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389757014 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830811333 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.822954149 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7461613 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.620577094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.17335937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.904175141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035296678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.829252598 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094941403 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74619952 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957503954 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.814562002 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.031750716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.455787052 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900723077 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067255886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144944507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321519146 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834194261 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833452321 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910490604 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837311344 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.328914855 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071188568 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.820683497 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.822357588 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491967659 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.872041581 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824638325 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.823575421 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370750251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086533659 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841177314 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824729559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.835515359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.833315528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882380482 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823868111 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826112217 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368154159 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328333528 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.825950011 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.500285205 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037591794 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823338522 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.483414688 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990790727 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.834794115 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083613003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884522293 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.749701943 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.521449031 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.52521782 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823423361 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.749613567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.821570147 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826675666 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.011392035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090617865 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873198354 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.489765234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.924649675 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828676046 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.823849957 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822491059 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.34004862 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822891476 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.51092738 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.832804415 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952181199 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.835250509 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.749514322 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823127956 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82661518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.82399043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.77075681 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873156834 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.500316615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022304054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070898445 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.22915836 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831236802 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.49775399 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.936811411 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.836326655 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108921053 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54849106 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.841112438 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902260003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.831839377 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.443287984 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.552623936 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38779006 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123277173 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132383293 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163991946 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.398033223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.0417879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909607152 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0486723 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345300701 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879836921 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918131265 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763367509 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837905221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.460974082 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229912313 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837745996 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040241107 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10753976 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.163386577 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95337928 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030560815 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856597521 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.702102294 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864001794 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.359827248 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84075454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.199039207 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022071018 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907982331 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11749923 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900535113 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.823896936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148998045 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85880967 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.525564019 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176104912 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447096223 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.294356592 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043990689 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829189026 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.264819923 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167161926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.071942191 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.956299464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752917062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.829704038 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.829756046 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.839937475 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.799544388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.715280263 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.071626798 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834323963 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056324404 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.188896983 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203214819 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.729202378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.829397704 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829808389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064122541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.554482788 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995037457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.188196135 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412437156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835765771 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757137062 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755772434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.529402776 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837118487 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797245915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030372749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.928719953 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509748551 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25388691 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153442372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073761768 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.842181021 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098554431 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10100868 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.321519617 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852518284 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.92927239 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.122966105 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.578051338 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.046110045 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059527789 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365182095 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048128853 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268756461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.797672918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.8323151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037985615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.044538361 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.182257832 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006320256 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.542833025 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.84271914 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206909981 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893666541 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.18340071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010789668 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.917773489 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836374251 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907876159 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83350292 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.837177981 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838640019 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843977209 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.193693447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94602714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.846056947 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905974798 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840534197 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395459932 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.841853205 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101143809 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17176837 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159845958 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887076466 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83306167 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842604034 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754935539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956264925 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266242574 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103138275 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.951082216 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.966458906 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849559949 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.124406339 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.124417833 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150982482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104977832 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.712280604 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514741909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963302015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.047192353 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837217839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.037645643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03789157 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119990965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291253733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.017298213 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030710191 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105331183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19269913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832993817 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413138177 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.840239978 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226208252 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.86223629 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.190476405 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087108745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838375429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955785882 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83829497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.036232746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.285522495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517059361 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180856939 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687924633 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.84072858 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102820848 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155913099 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138040303 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911540684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844015728 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.527694898 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968781539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715265043 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053523523 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835630484 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039787091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.546824102 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.84029135 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101846549 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132733417 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.834197759 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.73462856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863624826 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.839327392 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048837184 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039280827 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075377459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840169776 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.842387646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.644125231 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109092239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898327842 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764977694 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.840236828 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883496095 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062428906 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856148311 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351262999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.539459168 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104681701 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.737095626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852879851 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292620313 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220727758 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16700214 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.353968648 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051837329 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38524571 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.716267961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222092931 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.842634583 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.507291927 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226632062 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.841683596 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409467721 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959917582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.100264152 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164373238 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.849011044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529094169 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.863124015 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055281927 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197200195 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768398189 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840639033 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.886819704 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838845561 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.854971576 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850366477 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.773454914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53843866 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.68822192 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323899314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.843761969 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.844692385 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.179741158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418558648 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956591423 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85829749 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844577486 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.550927369 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.125766165 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086341514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386230176 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939432092 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.840680588 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841498734 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.759231438 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022095959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.030625439 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112281716 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.229330817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.957441206 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841397233 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.048724067 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043079089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.200055023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972189881 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.194777728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963396083 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.779774947 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.546003437 seconds)
  done (took 1643.724990756 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867024532 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.860525297 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.858086852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885774707 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872710718 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897727704 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.899047281 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900157451 seconds)
  done (took 56.814105843 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.837596748 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.004111985 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.841749918 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.837758149 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.868867153 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.838608097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.996597417 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.848040322 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.879786112 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.844095374 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.841448731 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.838265476 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.188153698 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.860382641 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.839976818 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.838126945 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.841347701 seconds)
  done (took 73.848263312 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.839749635 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.073541264 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.86557746 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.841274617 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.038748912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853194319 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.879287084 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.855234767 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.841883167 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.257125393 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.131026981 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.84811547 seconds)
  done (took 90.091889347 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.852776369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.839981777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.84114692 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.841796072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.839352196 seconds)
  done (took 10.988273905 seconds)
done (took 2144.529306158 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.071239151 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.034544952 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.082673265 seconds)
  done (took 5.88499627 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.979994157 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.030990599 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.1412999 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.149780124 seconds)
  done (took 10.074339177 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.119347725 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.20271274 seconds)
  done (took 6.088531502 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.15597065 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.853857451 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.210776177 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.840489146 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.839196535 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.842236489 seconds)
  done (took 22.292425821 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.838215756 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.837782066 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.838955842 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.836820459 seconds)
  done (took 9.11717183 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.837083062 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.54084617 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839145565 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.850537676 seconds)
  done (took 20.832899204 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.993153907 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.955972775 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.038810292 seconds)
  done (took 7.753024682 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.97953017 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.063816389 seconds)
  done (took 6.809297947 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.003825885 seconds)
  done (took 3.768477236 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.8662634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.108174913 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.321544006 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.354040149 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.411766062 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.660117187 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.144424882 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.058998829 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269424978 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.275445085 seconds)
  done (took 24.236575634 seconds)
done (took 131.919425336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.178322738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.852981608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.03634404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.190378901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.065113026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.037543271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.062735473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.180357938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.866848036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.856908604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.195274165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.068981889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003079376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.852970653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01393035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.852056814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.062411686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.197284849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.878890887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.091859205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.069312708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.839767072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.031336873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852095802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.083437151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987492362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.382895572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855606876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.019047845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.392078503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.991050813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.23364952 seconds)
  done (took 167.047914171 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.842517906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.840629992 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.838635342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.840608108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.381664923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.839842442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.838812777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.839432585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.278148047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.27146075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.840897288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.368985638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.843112077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838847583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.841574717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838966868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.451132535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.839096497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.839925323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.839866575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.839422914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.200544733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.84146095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.21017498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.443368358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.843166584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.841137627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8415936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.838742753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.841525323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.840715332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.840721141 seconds)
  done (took 208.547346967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.841363849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84047616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.847123028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862143948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.839155667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.841224624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842985899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.854930521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.598620298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.597705206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.841003039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.841485643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.839664015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843777772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.843727564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842026975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.840629769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.844229586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.84397527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.841360152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.842328952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445738547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.842693573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.445990061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.842697279 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.843317087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.843933885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.842235026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.84361358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.841267572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.84133727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.844027551 seconds)
  done (took 219.477254099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.092402187 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.844745033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.84626412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.751664108 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.849021387 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.84646846 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.827468102 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.093701146 seconds)
  done (took 18.926446648 seconds)
done (took 615.775281257 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.219852294 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.058986452 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.02528074 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.870211533 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.106349758 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.911637232 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.863614335 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.927627663 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67252037 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.942188343 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.530382018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.887073799 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.620469404 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.896490334 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.985745285 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.92400361 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.418900929 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.516173744 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.04215065 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.933321362 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.049625271 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.778199261 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.951866484 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.715069887 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.651143319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.836247283 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.881912025 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.422853621 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.877567594 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.023618091 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.514912248 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.118591926 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.880669208 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.865203274 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.921701025 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.89912554 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.062991248 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.879993448 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.997190217 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.578688673 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.924811247 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.579631144 seconds)
  done (took 101.536168553 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.856964672 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.854569752 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.854392085 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.855022658 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.862919216 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.853362438 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.851170515 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.853084613 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.855800721 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.85357002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.852595956 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.861148096 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.853131991 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.866214307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.853557059 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.854200888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.855925919 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.864596376 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856555584 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.854452384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.854468303 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.853865929 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.848918796 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.855288849 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.854411159 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.852782922 seconds)
  done (took 50.032558717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.849291019 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008288204 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.092381234 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.868328176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.849566738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.851197395 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.867717273 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.852346885 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.852218776 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.852781638 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.953384286 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.853494285 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.866195003 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096394338 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.863520573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.848296799 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.850744563 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.851096609 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.016650482 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.863911355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.869599743 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.85309186 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.872263005 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.864640218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.851921617 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.85055392 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.851162166 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.315407829 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.857025954 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.955116933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.893159187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.875421816 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.266193155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.104475065 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.904882153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.861184278 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.852722015 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958936339 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.857060671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.852322802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.868883199 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.85418813 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.094300569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.383673824 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.864114374 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.852172525 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.327066094 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.967771142 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.890307833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.861644541 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.098374945 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.865463824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.852237469 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.854727322 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.88839152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.857592081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.854407396 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.219187791 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.864116388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.869485421 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.856499465 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.857024114 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029078453 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.862279019 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.012903625 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.862214444 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.860613463 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.856262735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.098157119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.869390906 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.396673774 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.864781922 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.854974599 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.957753837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.014432467 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.34879046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.862273231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024793836 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280904993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.875605271 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.859255435 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.308000165 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.879450124 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.85904741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.856261415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.853827255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.854586363 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.896486269 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.869148248 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304212561 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.401558468 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23549666 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.876225118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.868262737 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.856564547 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.217563717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.860654758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.854096611 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.093734829 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.407467765 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.865756168 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.861262751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.380600233 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.869643987 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.871252094 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.863419364 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.105192365 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.870209805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954119753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.855609518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.860877389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.859776608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.873487797 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.86313213 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.854983629 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.374263952 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.976976868 seconds)
  done (took 230.558554996 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.857871253 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.856297696 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.856107616 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.856235073 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.856927237 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.856000118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.855484888 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.85490292 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.858332738 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.854437578 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.854870673 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.85735635 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.857746984 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.857774068 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.439537405 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.85733553 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.458035424 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.853056977 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.857256543 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.857837655 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.536273474 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.859798785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.854201404 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.852491157 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.85540807 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.856550134 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.856054621 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.859060624 seconds)
  done (took 167.627579321 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.858437681 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.041484547 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.873729523 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.888852145 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.861059854 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.858857087 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.997444811 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.876531405 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.860867656 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.857777023 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.860369823 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.917745045 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.871701521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.957516255 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.886717148 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.967037537 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.961153674 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.861655643 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.8583815 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.856729782 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.884966661 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.863130862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.916759364 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982440597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.877226623 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.970610545 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.87546712 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.856789847 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.858151529 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.97178683 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.878681866 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.920179054 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.884880352 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.875365198 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.978216183 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.970879684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961488008 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.960269365 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.862891799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.857988417 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.859052566 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.862498997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.972272155 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.87673979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.859614328 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974736536 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.873911375 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.861353539 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.858442299 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.860234766 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.873759851 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.876290386 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.924290989 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984511531 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.891159615 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.879704561 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.959318629 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.982308813 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.860350144 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.960483285 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.865487232 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973375197 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.874091297 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.861369538 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.861323922 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.861287271 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.889032646 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.965253596 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.963834903 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.863515457 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.957121791 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.893324766 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.867722119 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.860882688 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.861522905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.974133941 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.974510741 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.893586865 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.895845189 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.888433318 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.872877083 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.861338274 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.861338242 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.877026647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.863257248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.97453343 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.979781771 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.864578375 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.862595595 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.862263911 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.862254369 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.885318524 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.9813237 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.896074958 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.966464511 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.922938414 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.930784052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.872704238 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.873233156 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.866755307 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.922919434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.873357545 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.87507722 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.157545868 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.922383538 seconds)
  done (took 201.754244648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.228703495 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.903935879 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918434464 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182095937 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.214649165 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.75735888 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.904872819 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.91192967 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.932414552 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.092759773 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.986333885 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.926995103 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.893517043 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.883716216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.911065986 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.930591163 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.91930189 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.242925863 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.131515581 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.049266236 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.896971242 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.194399205 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.225144819 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.482156111 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.955735371 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.302849611 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.479586997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.035877829 seconds)
  done (took 61.289751147 seconds)
done (took 814.571957848 seconds)
SAVING RESULT...
DONE!
