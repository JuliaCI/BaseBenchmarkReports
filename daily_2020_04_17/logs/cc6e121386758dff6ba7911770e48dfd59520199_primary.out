cset: moving following pidspec: 5346
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.255179593 seconds)
loading group "string"... done (took 0.644694699 seconds)
loading group "linalg"... done (took 7.733461756 seconds)
loading group "parallel"... done (took 0.159561536 seconds)
loading group "find"... done (took 1.129027631 seconds)
loading group "tuple"... done (took 1.754250236 seconds)
loading group "dates"... done (took 1.229473128 seconds)
loading group "micro"... done (took 0.216533688 seconds)
loading group "io"... done (took 0.987426155 seconds)
loading group "scalar"... done (took 37.538748477 seconds)
loading group "sparse"... done (took 11.553073939 seconds)
loading group "broadcast"... done (took 0.917505849 seconds)
loading group "union"... done (took 12.315268841 seconds)
loading group "simd"... done (took 4.545932233 seconds)
loading group "random"... done (took 8.830265059 seconds)
loading group "problem"... done (took 1.684554503 seconds)
loading group "array"... done (took 20.124964907 seconds)
loading group "misc"... done (took 1.679325114 seconds)
loading group "sort"... done (took 3.125269925 seconds)
loading group "collection"... done (took 17.197611847 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532039285 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12998986 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138210263 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124812783 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153251905 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124392056 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130474149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090990685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.917975843 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157204704 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119231637 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414924397 seconds)
done (took 5.407140288 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179199238 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087110832 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08865973 seconds)
  done (took 1.228101813 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071260894 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132072602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072778755 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073255846 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073550319 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072645516 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0721964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072328997 seconds)
  done (took 1.621228613 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078498335 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077002788 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071999526 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073927164 seconds)
  done (took 1.354283245 seconds)
done (took 5.516140202 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.777965509 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213827869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191157363 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397366723 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133579737 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180985124 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659449651 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322521029 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194267663 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080807709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113070817 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348137398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125811731 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64707893 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079791521 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095411297 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141200496 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464519431 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073077386 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087504827 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094428476 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135661374 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089646026 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079554754 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151009887 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073265425 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13931088 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085782328 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071335766 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.217550152 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177721677 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665181684 seconds)
  done (took 10.391560515 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104058897 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102972021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074260686 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13129816 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103799899 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075506408 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081162865 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073357797 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097640413 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134220069 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096453358 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110888965 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071384493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0745821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08870997 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214381588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085361552 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087138096 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076125623 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083972622 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113014307 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083477397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085044745 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085497041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134168095 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185714096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10183548 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103160231 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073684661 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088614372 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120419378 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134423003 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07162079 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071596647 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130559187 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100710932 seconds)
  done (took 4.741352305 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983272094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146064131 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093836135 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136971562 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070519854 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112878819 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074191921 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08578426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212165787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.451278292 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093779107 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.589883163 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115266394 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115648529 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108210166 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07348735 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074643823 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072973476 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.499477792 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104117174 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112247247 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097130134 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085321016 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075549382 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076358947 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074967965 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071121061 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075351843 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.1216737 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072050401 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0814328 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.308087294 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129156138 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075325667 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.949991527 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169140592 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.213568326 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108033939 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.174802671 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099538512 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144618352 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074265521 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071462471 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163367112 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070034145 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075752175 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071807236 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089039639 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108792813 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125327512 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07119995 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071348081 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171646226 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072776 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083625523 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.139649327 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160140773 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074885019 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294849419 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095705423 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075834422 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07071305 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17687986 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129852196 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075653828 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075145242 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076443433 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075612022 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382375252 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07114428 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.899518243 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075998274 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08547775 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077554191 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074743421 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077579455 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078060212 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093518243 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07248644 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078996018 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074083412 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071681806 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071778752 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087687101 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070531313 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.479305949 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073054982 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071318907 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07397956 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071628578 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095867562 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101288213 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072709998 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071485963 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104933074 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073698179 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072021883 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071995517 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087911646 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074935057 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118219824 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071729615 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093756172 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104092879 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073778167 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103401171 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083830718 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073089425 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41135042 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070693416 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073121536 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070762352 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072820409 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072378048 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086087027 seconds)
  done (took 22.215369067 seconds)
done (took 39.384090392 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245737112 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075360799 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075327671 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075418014 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075609676 seconds)
  done (took 1.681887099 seconds)
done (took 2.80427178 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124910116 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102861977 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069663352 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101577113 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070029577 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104810919 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106878941 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.0816808 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103232078 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070305386 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101196572 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069813236 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070245389 seconds)
  done (took 2.310840769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08835837 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089332459 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07540632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087348925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068697936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08761526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086685693 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094138589 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086420813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078217786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069132702 seconds)
  done (took 2.027343984 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087326306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088883071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075382334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086961107 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071983243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087036701 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086714496 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09243206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0895106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081428292 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071154915 seconds)
  done (took 2.028662757 seconds)
done (took 7.476734366 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081948358 seconds)
  done (took 1.185686673 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.540352247 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.676690216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084713853 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109282161 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192237047 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115077042 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241148909 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088289983 seconds)
  done (took 8.305905321 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107530989 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076981569 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075792231 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074596284 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077088244 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078133544 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076480474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075845807 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074501132 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07748574 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076363459 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073809583 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074999705 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075107346 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074031608 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077337813 seconds)
  done (took 2.427390549 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096985375 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095896303 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078909291 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080392475 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077467073 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077095106 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079352187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078342681 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077822977 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079407503 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082002976 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080509803 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079037898 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071295287 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080984102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080930871 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075803971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079016447 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080010305 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080466898 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079885736 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069131645 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076483677 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078981612 seconds)
  done (took 3.115056724 seconds)
done (took 16.147738579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110206265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07265134 seconds)
  done (took 1.292364215 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084482716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084973843 seconds)
  done (took 1.288182521 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084869733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069793885 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092410251 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081326416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070872447 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070372643 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09058066 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070235204 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070397115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070738658 seconds)
  done (took 1.890437421 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072586656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080296265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073797242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084685325 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077446479 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069118406 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075677266 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072648996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080929299 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067719312 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075579012 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08798832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07485136 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089692315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075492293 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072997688 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074910163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072194908 seconds)
  done (took 2.500432089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069873187 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070416995 seconds)
  done (took 1.263232074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070838582 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067835685 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070638867 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070851667 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067991001 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067319172 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068289371 seconds)
  done (took 1.602471747 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388379068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121724484 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306471356 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077331682 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086265491 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257941612 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07180245 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07668919 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076635785 seconds)
  done (took 2.619791347 seconds)
done (took 13.581968268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085237822 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092133881 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100673943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380916703 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097507722 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072592658 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119189005 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187282978 seconds)
done (took 2.267575768 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212735693 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.661758442 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405518309 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207637734 seconds)
  done (took 2.402399558 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344269467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092538348 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065479506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07291269 seconds)
  done (took 1.708373565 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071941052 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075221946 seconds)
  done (took 1.278513999 seconds)
done (took 6.735740902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072555507 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.185208752 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069426558 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071663472 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069460056 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069304428 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091275006 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071364183 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071562103 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.071214732 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071412012 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071590519 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068970755 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069076938 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071530135 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069303852 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069768848 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06989084 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071666689 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069661347 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071494656 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069607234 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069390616 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069531708 seconds)
  done (took 2.984463737 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087539081 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071344495 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075683369 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075639639 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073691639 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075427933 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075949576 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072408874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077614825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075621065 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075341299 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075337418 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075556915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075173155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075470809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075421323 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077677973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073054979 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075680838 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075887821 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077576132 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071312047 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073667393 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075489204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073480321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073478272 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073981215 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071379129 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075801934 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073963973 seconds)
  done (took 3.394716076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075113493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067795703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069089287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076195758 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06808026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069048532 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068006537 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069067538 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068927572 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068368484 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069473056 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068220893 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068424114 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068882313 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069086801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07279625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085058967 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068014494 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068100856 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068829697 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074680822 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068579811 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068240728 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068556546 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068083654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068148823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069804455 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069884469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070687006 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06980454 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073942941 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074603923 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069745812 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077903485 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074002573 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068157936 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072677541 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068061942 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069000488 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068210397 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067866306 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068084411 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068139597 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076702069 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068429288 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069315793 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068347777 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069838947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068660931 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070455755 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06796644 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068328847 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070539255 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069661316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072894282 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068228628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069382061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068233035 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069037249 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068716028 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068225658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068075885 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072302849 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070634645 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08774375 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077656217 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068908119 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07014555 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070186902 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072952853 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070767906 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084031639 seconds)
  done (took 6.231516764 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092030393 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091904944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070953678 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07160533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066815131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069058658 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074820259 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069094956 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071296326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088358987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069490408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070907161 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071252075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073540098 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06911064 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071202647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077490169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066673337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06888143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073492619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069360306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074832723 seconds)
  done (took 2.77912778 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152523614 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074645661 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110008111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079579028 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074968827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080093857 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074688989 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076092477 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075934521 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07345546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073509169 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074957713 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076977938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074727492 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074437133 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074843343 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077184204 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075079969 seconds)
  done (took 2.620512529 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08191765 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071422487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092748596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071597443 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071250464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074091707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075655879 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079125373 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073543821 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071615316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078938003 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073805412 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073752159 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071646264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07356665 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071584996 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073973751 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071448372 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078818565 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075397901 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076007221 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079427032 seconds)
  done (took 2.809229364 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085008777 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073020555 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086355469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072638024 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066288129 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069106885 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076223928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073373804 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077505646 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075120562 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072575667 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068955304 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07356649 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071363612 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073714177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071240798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073051043 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071268942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073190285 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067908258 seconds)
  done (took 2.619742992 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089199503 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072028683 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072151366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079811973 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072468236 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072536583 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079202406 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072460416 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072342751 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093159832 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072448361 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072989277 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07885327 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079298741 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073468566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080806584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081035696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08030671 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072856011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072614616 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093315242 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073974853 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080935277 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074589442 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073940016 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072734943 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072617733 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076641954 seconds)
  done (took 3.309664016 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072288709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071119386 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069104947 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068891217 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069518425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069165287 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069273765 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06907625 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071620045 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069704833 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071726288 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07126049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071351961 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071239531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071356362 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071442072 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071470388 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069326637 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070486406 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071113452 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07152424 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073237474 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072438835 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069487791 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069398373 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071859242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070030411 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06924094 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07294128 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070890556 seconds)
  done (took 3.275775822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079795159 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077602249 seconds)
  done (took 1.313218861 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067350971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085564664 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06814288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077007764 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074707444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071744502 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079389703 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076940535 seconds)
  done (took 1.752039665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086524654 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08004597 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071231862 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080864325 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081425758 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089350891 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13109299 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073250055 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0800828 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072106071 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08612481 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07271889 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080046962 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073748454 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079736497 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080990054 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070880984 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077908269 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074183002 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071599223 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073642781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082909558 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077087323 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068596223 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075031213 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097063206 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085041527 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072367738 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07675177 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079152295 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077917825 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065709486 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071108636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071211096 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069011619 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080150538 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085601269 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075036854 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080809959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072080469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079462826 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066319881 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076363474 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079629957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083222167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071431556 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072356336 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068634945 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071988132 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076502652 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068734465 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074465716 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067787627 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081893004 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077892791 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084847829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072085838 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075490477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076909549 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077237623 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081104277 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075408968 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075306347 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070822285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08319601 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077360292 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079241603 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066605097 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066147934 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069032931 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081338416 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094729584 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07682357 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070757761 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07152239 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069184721 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074972902 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071197559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076843814 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078304433 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070088629 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07536169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078519831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07183661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074346975 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076371963 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068544982 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072272738 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069437305 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085931682 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071171041 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067699539 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068846306 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081032599 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075436758 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069721534 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068835733 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078103904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064387619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070190812 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070159409 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071892444 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079465539 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073783687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0738861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078839798 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077270708 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071249268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072861787 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066912382 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.198618741 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074814628 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082976606 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066841007 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076508512 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074309985 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072278922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080657717 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070857934 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071285797 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079620315 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078214459 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069858323 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068905284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0753224 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070867418 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073973495 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080063241 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069677886 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06645345 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06644868 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075342654 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07090326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075284387 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075374345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074562982 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066011394 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070047158 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075636927 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080179841 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072211653 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073108365 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07734643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073070202 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070718579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078441229 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074023634 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071493997 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076774885 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072710985 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066441835 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072387344 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07483592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069516331 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075608757 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073130121 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073871797 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071034785 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069336623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077449263 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071393431 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071000003 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072192401 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069884035 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082313452 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073823952 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066424183 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068950095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078138082 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070392503 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07046067 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071406961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074245894 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071467213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069945218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070790493 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073885969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078971807 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073890867 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071522762 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077154797 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084151467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070728883 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074608658 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070501841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071510652 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070697625 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080760083 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07758252 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074347786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074868585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068338743 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076017109 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079584608 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071150007 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068756417 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070886043 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07428226 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077217456 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073924157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07115182 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068612839 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072562716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072787949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073816965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06981967 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070216061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074483495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068488796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074922608 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070739055 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080941467 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074158763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065466073 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071999349 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068402643 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077348169 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06536681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069008765 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070635186 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069965347 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068901848 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072875889 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064330001 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.210152412 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08169295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07464949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073399322 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072765024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080302883 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074272787 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076770225 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077015887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079170542 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082903061 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071510944 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078338462 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082279293 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070827048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065807501 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077384918 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069621485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070087117 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070349918 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069207353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074485904 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078125011 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077901569 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066610144 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07702714 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071428973 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073344237 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068078509 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078191331 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077465311 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074997416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080435781 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071967329 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070584381 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076495914 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070550225 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071433231 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07132401 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074768049 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072094159 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074819591 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073518487 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076389913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071913223 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068835711 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073619087 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071082732 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072165413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076230545 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070589885 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07236338 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074423999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071252242 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072712157 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072938176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071460292 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075199163 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073325071 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072528604 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074347274 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066555304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079116324 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070613316 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079208263 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072251224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068454648 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076929898 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074276779 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075321001 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071213121 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071471141 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073698525 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070591595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07452572 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078869005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069921835 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081774749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077996002 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072795162 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074246408 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072170313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073362417 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070819091 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072710998 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071168423 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072620716 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070357087 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075849062 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074078231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07254598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073565153 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071267691 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072667055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071482831 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065933367 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070983502 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070956793 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070603476 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079164138 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070573634 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070463931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068747565 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070548374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068799161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067098309 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07554545 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076500032 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069774963 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076224664 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06985648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071949094 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080260568 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064831165 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068615964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.201357223 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074094683 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084333179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07497034 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086141236 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075954238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074902097 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071774764 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074619162 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072827655 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068587948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071807047 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078081302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073399053 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072344792 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07317318 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076471867 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073402302 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082662421 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072242419 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074743943 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072724117 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070175118 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073545615 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073747753 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077346351 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073360335 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071952599 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07073609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072211383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072579466 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073524956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071032397 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073762744 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078630141 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07133764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07490298 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073494628 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066199684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074599836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070610814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07044016 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070849185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077354664 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07617569 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071580065 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080354313 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07115973 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073704949 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070731409 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069159845 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070771529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070474318 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070684307 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071383002 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072053195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079832098 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069268393 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07452488 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072528059 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072453608 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078413192 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071720189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075245991 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076329019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073196192 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074123935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080361864 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076950083 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077401542 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073869121 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076563921 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080207564 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07362052 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08071324 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074605513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073601624 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076093589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072348493 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072976481 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072465554 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072324571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079025137 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07286107 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07307957 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073392442 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070766794 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074996481 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074937964 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082016704 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074805734 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074623356 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06621366 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068035277 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071206033 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069981151 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073679474 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074115716 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07685973 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073872025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071872048 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069492685 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080141168 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07700405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074787818 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06958873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07438806 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070385705 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073016446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072098026 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071804581 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070985269 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074950295 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072357919 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07082773 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077048141 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073855174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.205999576 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078326414 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077681485 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076881819 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070390949 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075007924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077789271 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079908404 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077187673 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073771527 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085416381 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072270767 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075084894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076313378 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072716573 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079199776 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068633274 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076240204 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073874856 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073587217 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068592011 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073936877 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072713763 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076614503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073627745 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06835061 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084424925 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083261916 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07640927 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070922151 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070476197 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066185571 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066775469 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071393273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071552623 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073586574 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081017029 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071593686 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071232452 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066513839 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070948752 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075505512 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074573225 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068393292 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066263194 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071175836 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074392349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0769729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069801819 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071086933 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074931645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073826945 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069577889 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073408418 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068620328 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075585721 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083645823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071321908 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073168456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077327601 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079386588 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071209379 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066803553 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071127371 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075009233 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07303892 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071723101 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071892729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086094225 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075673663 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071188316 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070306351 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076853988 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0715749 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079926535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071949991 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071531447 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077480697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075722595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080062513 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074930521 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078089471 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074353828 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074506023 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06996581 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0725542 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069310808 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071716708 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07157589 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071020179 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074973982 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07713063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071494404 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08174955 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080694524 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073290566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068051838 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071450041 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071388552 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066225948 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071368006 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068769316 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06867224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068741367 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069107497 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07211225 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075324849 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071834696 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069813987 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069767372 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064860669 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073917972 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072930948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072041447 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067859901 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069878552 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.205233158 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077471119 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077835343 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073519694 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076276512 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07811296 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076291721 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069393062 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082118219 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073130543 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077080418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074389382 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073098406 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0715402 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07605417 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076011894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07228036 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074801365 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075965473 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072940384 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068465446 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069583207 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079345186 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071415563 seconds)
  done (took 45.880728462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104655008 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068222241 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066690199 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066326985 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076770845 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067519506 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066589474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068123394 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067649643 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070148029 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066914071 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067174277 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075624934 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083848059 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076846044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071123735 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066911079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068050603 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066892014 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067803762 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074721591 seconds)
  done (took 2.7551587 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076883595 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081892408 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079149464 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086535889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075917387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074474775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079700565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074748653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082584676 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077423148 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083289842 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074393045 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0769297 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077175712 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07727196 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075166595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082833516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07585975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075060595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079564008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074856705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079720227 seconds)
  done (took 2.957686048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071174984 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070340713 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072964507 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066129478 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071072106 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065808032 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073416933 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068551167 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073101973 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070597849 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070453625 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070300901 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.080882754 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066167551 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073254221 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071604094 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112952168 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073184411 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070089352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071403034 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066223677 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073287242 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066633947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068695823 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072500054 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075381458 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073083095 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07152172 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072221046 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072624949 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073020844 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070518849 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075215304 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074231346 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073165821 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072251691 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.075243728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072166819 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067826068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070825474 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073417635 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066765584 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070783274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073002651 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069261953 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068411243 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075699922 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072734561 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068100561 seconds)
  done (took 4.777085327 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08171263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113306557 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072387435 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094172887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085905576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079104239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077384085 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095735852 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069776479 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070530295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088038465 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08511684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072438436 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076156049 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077362137 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072063259 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073450843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071473928 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075550714 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071734434 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075686966 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079005546 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086706349 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083802117 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073873456 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069330561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069781642 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074079547 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081688027 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074025111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074223827 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07533864 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08446682 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075098357 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070154972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072548847 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085723833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070452499 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072532349 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068826016 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072664866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074293921 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076840562 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085826837 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07008725 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07526571 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070012667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068196509 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082140689 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072293177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077098693 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083070153 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073942903 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070414434 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074103755 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084565636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070186779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06859011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072786456 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081496685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068356155 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074043045 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082321684 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071968114 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076413641 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082798986 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075255021 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073350837 seconds)
  done (took 6.590102614 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079307726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100252582 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087077562 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087161741 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080380088 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080410563 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080561965 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081488673 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082565118 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086188615 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081636348 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120205329 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085154998 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082655438 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080461616 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080506341 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080483996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080932751 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080655624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080777951 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080768935 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08710966 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080939552 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087356139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083807307 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076358093 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081220912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080204795 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087133298 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080466241 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084304859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080580348 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080415172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086982744 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083933132 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080674254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070927609 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080313798 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080982424 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08076732 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076222566 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08713734 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080418381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076367007 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080851054 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08066828 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087232406 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084104268 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082515734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084983608 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080829658 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087224377 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080307654 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08084025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087220488 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089744744 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087610383 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087286312 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080497908 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087184442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087302539 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090002389 seconds)
  done (took 6.446710392 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085652291 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077915114 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089658765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066483499 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068971245 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077216787 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06920053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069644315 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07788004 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07773152 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08026767 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077422299 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080576867 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080206777 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076978005 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079483151 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076821074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07739711 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07777827 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077410551 seconds)
  done (took 2.810140103 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080581084 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088399662 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072054704 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076640697 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074595152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076559439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073642037 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074534275 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072403839 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074262012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080680248 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080835534 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072344358 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076968016 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080443397 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076967447 seconds)
  done (took 2.485515865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087563581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077844587 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083035363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071506766 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071784835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06700662 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070611119 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066602867 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067612669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083247386 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071448758 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082015015 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071031233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070225673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067530021 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076486271 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067140977 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068341124 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071262757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082466552 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074575605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069135989 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075248698 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070902353 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074332267 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075075023 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069926915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07196129 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068505487 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071861072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07423018 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07472597 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068239015 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069028978 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.07035069 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068177404 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07120143 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086678209 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076272031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070319001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068975449 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073088224 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07028092 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071450974 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066641704 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070914671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066919315 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073096182 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068271878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073598391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070162825 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073543685 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071336134 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077921695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073344624 seconds)
  done (took 5.249100937 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084896289 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074427898 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066588014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068776508 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073498953 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072097987 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074324671 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071873173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073905696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070609673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074250429 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075977065 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074788509 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076580011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074423688 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076087657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066723768 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071717537 seconds)
  done (took 2.605690925 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076764649 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071883936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078599562 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071189856 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072608902 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075201052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068470068 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071261909 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071498299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073017856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071089641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073651723 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069891757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073478456 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071428817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071147871 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073581365 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069194705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071502198 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066515732 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073619149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069045941 seconds)
  done (took 2.857037393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099086619 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088438835 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142464482 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084215528 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091551237 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07682474 seconds)
  done (took 1.856240291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09620895 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105100317 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071044412 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074265871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079810904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074832501 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074873164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075219507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082496335 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079745946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077682958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082489556 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082316985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081404937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07982028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080091853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075093313 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07558336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071574696 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087282303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075108653 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082871016 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07504177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074898443 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075069813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081532583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082255935 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080271456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074851773 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082819268 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080336868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075386143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082559716 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080073659 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074669513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082291912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075485984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087286244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080493289 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082124794 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07437309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080577927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082630231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079483215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082681255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075740406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079602351 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075226749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075468139 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088896228 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080482261 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081812423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080307523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082612977 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082181772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089118042 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080200315 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081598363 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08017107 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08014927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081684652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08025335 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081455978 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079962095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080109574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081132438 seconds)
  done (took 6.569067027 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108604127 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072484901 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074989806 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079994484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081439545 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07511824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075529294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075344627 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075275105 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072158468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113416777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075298812 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081703658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081884195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075416818 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074961233 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075702956 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082042429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072425955 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08885685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075261602 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082022615 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081730215 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082112071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08001848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080438777 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075282479 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075222907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075285085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079296717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075198283 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082053437 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071775699 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081852173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075602063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075139601 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079449375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07528763 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080615232 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082053193 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087205452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075199085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075283949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079999679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07543001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075690045 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072268001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075434892 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072505195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080174609 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080428727 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08079219 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081676037 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07541038 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075336087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075566154 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075651198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075636618 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080352343 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081796261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075299099 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088835252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075619269 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075378922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081999608 seconds)
  done (took 6.501927033 seconds)
done (took 134.567137832 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197619452 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174436157 seconds)
  done (took 1.638533318 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073508875 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100645898 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080916292 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133862239 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071703155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10502141 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10412166 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082163128 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07193753 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071403383 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071481757 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073523305 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136376227 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071952391 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071423819 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074148308 seconds)
  done (took 2.677755754 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102285332 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160478201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105941535 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070987138 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102082684 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077513166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073189119 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079547152 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075733528 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070865022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076928361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075055944 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07051358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074754075 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075474146 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077032611 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070925125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07679146 seconds)
  done (took 2.802104412 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101439011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093732741 seconds)
  done (took 1.482814443 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161826197 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138813559 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206574408 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341385758 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158069462 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146349158 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14769095 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146189048 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119912463 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141500753 seconds)
  done (took 2.992569662 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103965995 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153271741 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275393045 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12082208 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07806699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095502144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122205083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084038065 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084243956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083641311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083742337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081052448 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103463228 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07830474 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079658407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080995973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10694739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078535126 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079968056 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080264462 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105177348 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072019153 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078286431 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078675113 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081324626 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081439118 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071492679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071604831 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080303152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079791391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081279261 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094710192 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081235572 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106613316 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076417789 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107190271 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081347782 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077839156 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080051577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078373229 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082286772 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082105282 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078836969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081086798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071658495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081798745 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072272035 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071569747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08263442 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072624128 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081607392 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081113221 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107019791 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072275481 seconds)
  done (took 6.146962677 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111856251 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110186153 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075728949 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116223986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108289829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074843591 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110486051 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102672412 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111747415 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074796283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073374154 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075008716 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083492692 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084796545 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120194243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111927219 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076870852 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074096507 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111896556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111559867 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073985263 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106165561 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101262685 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111414123 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072897329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074234446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073175291 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07494714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080398123 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081941014 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073494941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083116991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087388071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081327831 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072718976 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07298157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073677092 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082465528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082913976 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082960569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081148721 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072727297 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073455623 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074520644 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074861863 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072819572 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081761599 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082871791 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081275145 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073160358 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075033617 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075161647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075464374 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08265313 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080505996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083540629 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084808614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076009466 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075519507 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078159676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084253077 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083174577 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082485439 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076771795 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082965028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073923454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084096131 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086082886 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073551141 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075008374 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07368854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073213778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074248386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080571012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080416372 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074478058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07317613 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073108624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082123364 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080711668 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072782855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079993043 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072239642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072969798 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074388727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074382919 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079800928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081455417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073938884 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072354953 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071921025 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072095057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071257689 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078732801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081418347 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080762063 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079813164 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073197107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080507484 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080080982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.210135614 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08453567 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07533432 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077430384 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075945568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08252858 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081556218 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084089061 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074764415 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074189821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081766978 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084553176 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074478322 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081116344 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083372112 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081978332 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072632883 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08402666 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073865018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082894506 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073549728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083458897 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07352693 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081709886 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073949017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072629276 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073625431 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08180092 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075109375 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073441303 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074757266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073125593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08146922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085063351 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075039441 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080655512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080871368 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074441064 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081620168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074361567 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082113587 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073715237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075047874 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072891306 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084925731 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074774918 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073637567 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073330641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083010467 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073765029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08387959 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080947706 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072835948 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085080753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083159036 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08051817 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083276953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075087168 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073839542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073739642 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073780985 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080839114 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082033515 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075211503 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073137434 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080875043 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083421295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073353772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081426207 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081354288 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081198949 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073419647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073796879 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083518165 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082626632 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080761674 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080850388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080616364 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073947219 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080258281 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080939396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072790803 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086235082 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073501282 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084853815 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081128033 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079700886 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081393293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082583197 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082193309 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082542263 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084403528 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07199392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07259454 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080139443 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072213361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072310034 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079037985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073489962 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07327817 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084090491 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072906685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.220052336 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074090726 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083346035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074240574 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076421985 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08700421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074630759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078425535 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082211244 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073959921 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080871008 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084132884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081202487 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073786492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074806395 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082633082 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082802081 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073699234 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073193134 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075756359 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083194134 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081280259 seconds)
  done (took 19.522629228 seconds)
done (took 38.564582458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.1991588 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14945054 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.162420969 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117458988 seconds)
  done (took 2.003921912 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114820812 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102321283 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093855094 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071005391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099980502 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071097266 seconds)
  done (took 1.875522414 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279346256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194775653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178353731 seconds)
  done (took 1.971457252 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202550652 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189139621 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433840472 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267713403 seconds)
  done (took 2.508490691 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142526444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089907596 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072016731 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088529758 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131363328 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158562405 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101145977 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125565524 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084627099 seconds)
  done (took 2.363448337 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149110862 seconds)
done (took 12.203451486 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108569458 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07743565 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212922592 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087612097 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074115006 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079867908 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.248749777 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081341445 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.203365266 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080510152 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178133787 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09673344 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080363702 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.192348634 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216262033 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176356132 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220551883 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079733606 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103122776 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081366269 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057671196 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082574569 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105503052 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.281508483 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078237386 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.205208723 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082749486 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143623936 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080705545 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.223840912 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194967277 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182815104 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181840265 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079289743 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078522692 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078687413 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07012802 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084082997 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149919055 seconds)
    (40/309) benchmarking ("sort", Bool, false)...
    done (took 0.159803392 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071637961 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119332436 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143533572 seconds)
    (44/309) benchmarking ("sort", Int64, false)...
    done (took 0.072351073 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108374314 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080008289 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205094295 seconds)
    (48/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.170682162 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071346342 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078274297 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152160524 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225847584 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127456134 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070499261 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079235972 seconds)
    (56/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.121056425 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069434918 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084837819 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07056595 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080409437 seconds)
    (61/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076890619 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096039783 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05807271 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196178572 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081814769 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120393866 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081013606 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070693726 seconds)
    (69/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11053344 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084977265 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194329651 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091650135 seconds)
    (73/309) benchmarking ("sort", Float64, false)...
    done (took 0.135254829 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156878639 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205347168 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074426628 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193173007 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073756127 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.16028195 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091294131 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058081329 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083896258 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070050117 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.25942985 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108206668 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238578437 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.122441664 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185866356 seconds)
    (89/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17477804 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09896712 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.104241926 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.128003254 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07810626 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187489622 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.229548811 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071786004 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059383634 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094881733 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159785828 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057898933 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08015763 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073605138 seconds)
    (103/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087655395 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077046874 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085171896 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103280298 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058286854 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.108629696 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096325537 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088499874 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057519036 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079516412 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071380454 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081540533 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.078166522 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079905244 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.153164128 seconds)
    (118/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079143487 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076936627 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095875257 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.150444198 seconds)
    (122/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058257679 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.113685208 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058881391 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071526704 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071846485 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067844261 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.17659402 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161333334 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080856852 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058866996 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08552341 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102600484 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183781289 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072631854 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100767073 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174380308 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.163065825 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078693708 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069440277 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071955225 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071680023 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082818687 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079374442 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057344168 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085328854 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077535891 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152459083 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097289571 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095163521 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095881348 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058546976 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078468142 seconds)
    (154/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058085767 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058450435 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116907369 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075528348 seconds)
    (158/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107674623 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058456774 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069768024 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.214928557 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058032349 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068256222 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083154094 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095909196 seconds)
    (166/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.163508959 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074480317 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056997994 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149196063 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073035941 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096563683 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.136403066 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057464718 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078968706 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096621609 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.119469923 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129037072 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079456775 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08153681 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0731255 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090511644 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.169660634 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07688454 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078307976 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068932716 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.229266088 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080029834 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.119898471 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059639498 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07315877 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179070481 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059726461 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074696246 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082178375 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059575496 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167172176 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106564147 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057796828 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073012264 seconds)
    (200/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086247489 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15749941 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078406283 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078514421 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1259708 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072254917 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166115494 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078492378 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098189546 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07286686 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182774264 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078295219 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073617138 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092899646 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080371707 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088451742 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071882781 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057728296 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07059138 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057690971 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146408277 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.078167292 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13170253 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144006627 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093328712 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126591479 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175487511 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078672923 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071168091 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115307314 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079834491 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082495739 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136007419 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071381062 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058643295 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057487246 seconds)
    (236/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081504381 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096559478 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082704818 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059793579 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092783728 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071633317 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.08007864 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057614278 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077965661 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060343939 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10512155 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07009492 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057718415 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069085304 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124581769 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078879833 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057465415 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069870881 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060148532 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073789923 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071138284 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072585378 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157248028 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071077808 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084593428 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057197225 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071387027 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092629982 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057525402 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057516196 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058750371 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068705121 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091969983 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078332247 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057691213 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076590298 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077891328 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070443904 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058554433 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070408294 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09791604 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057038032 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057000037 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058137915 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121964835 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074290324 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09255539 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056804674 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071206185 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070763267 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057380564 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070649639 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069650627 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058623622 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078226746 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057140342 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069115711 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057893877 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07924116 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072604489 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057719333 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091189864 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056908357 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078365783 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077397867 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059266491 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074971927 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056694845 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123217471 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09501416 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070581679 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.24318359 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059641211 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.074943132 seconds)
  done (took 32.679835248 seconds)
done (took 34.015602146 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089493702 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09963836 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083523171 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100429078 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08899858 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085353092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081058033 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086522519 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088288478 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089307634 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086246193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06315394 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081592838 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081776873 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081530598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097187897 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085670293 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080256136 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080749238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07097695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079601874 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071857196 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073655721 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0621635 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085734563 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078632696 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080917709 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080837539 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072197918 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072045048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075960558 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080500865 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071148443 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085733104 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079793896 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.080495958 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081106752 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083329243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073425303 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071447171 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080679897 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071198806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079237989 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079708033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078368869 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07774462 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079533522 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083877065 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096442176 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073819809 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081012996 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081771848 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.08286747 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079178678 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07592818 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079323521 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076816108 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096025251 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080975925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074113423 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080850091 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079938425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077389626 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079545677 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079508757 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082181034 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083427199 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077658232 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081602356 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077860205 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07115945 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079408548 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075806271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074051395 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083330107 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084202873 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07072418 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078431843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079403729 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079701043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070716814 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073433274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073167397 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078069967 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073576717 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061149827 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075901921 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078326905 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070398424 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079961393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077892582 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078821206 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072596397 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083433564 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070451477 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077147391 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071470188 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071739824 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072866024 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075768936 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071072708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073322724 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081960125 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072639401 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077835237 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084145727 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071113903 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078400762 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070393436 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07060012 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084233309 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081171695 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070856957 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072768459 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069492448 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078178038 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069478265 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069951915 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069948801 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070037838 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076886517 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070101049 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072702318 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077252602 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.229731849 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073083498 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077518234 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075285533 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072506337 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078762072 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072842665 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071961855 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073567598 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069529747 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075940779 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072861223 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080804061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074425104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080155407 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072662607 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080697313 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076532348 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077584214 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077339509 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070016147 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066381242 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074223904 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074459081 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07314304 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071340453 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073015646 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071835998 seconds)
done (took 13.349078576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072277358 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13751682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098272511 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098498345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089038996 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072488344 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080812253 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09977788 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073646924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102373933 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092503565 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090574003 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113730328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070580041 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071476706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075838706 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073264044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084822666 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100513848 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091968431 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116212512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071030425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095641042 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092607593 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090491055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106054299 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072381446 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075933829 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07588273 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095342835 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093165076 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076198174 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072580876 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099953166 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09735385 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088124993 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071972466 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086410677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072463473 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071632344 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073531659 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100444341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084216893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084143973 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075828296 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081749952 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073413565 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086319598 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092410307 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082742245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089580585 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102884501 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073975299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087999556 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070161897 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08907519 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080876752 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074068282 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072285921 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079221541 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072155866 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075509084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084265201 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08383008 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07579015 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08753086 seconds)
  done (took 7.034841855 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088631336 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101814674 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087564039 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087975359 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070892271 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071744893 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071902793 seconds)
  done (took 2.011639138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072523846 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09232125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092719963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093314709 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086307835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097649112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083337108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074378846 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099359562 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073985219 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092076399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102059328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075359943 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085271675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094178759 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072060763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094828209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072046831 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074960176 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094299107 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077917859 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102605461 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081738135 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074679781 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087950067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074698109 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120884561 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07820488 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075919073 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075443919 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07329274 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111215762 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084648078 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079843347 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07269322 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08664539 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086027232 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075321572 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083484871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081057525 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085484968 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072871239 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07414563 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076420082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079148286 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084464376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07583529 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.079228768 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077589384 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09379358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072882337 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084754791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075842204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07876445 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074250461 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078660704 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082694617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073233427 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091353433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074599444 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087512314 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086941061 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085259707 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086722027 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074413665 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084989172 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085699585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075305212 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07476334 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076026826 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086847029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071004641 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074128473 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082330775 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074313975 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093958724 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094038955 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07418225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085327504 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073247801 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072605221 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072652724 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093901292 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077642729 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07239539 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076310756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076222751 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075534844 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071395549 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076786375 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070443517 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074808235 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07530781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074499269 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086873082 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075445813 seconds)
  done (took 9.337245783 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076192863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074253869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075285569 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073293916 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073484874 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073690899 seconds)
  done (took 1.906235994 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094388319 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073716239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084790282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07687622 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107355727 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090820246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091193511 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082475261 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088218311 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083970034 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090563138 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09165632 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095268182 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077954312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091367192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077363604 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094741725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082946192 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086652752 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080657807 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09367249 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080636634 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080061645 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085454671 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080911706 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076653323 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083548173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083759901 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083392131 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082013383 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077281126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080546939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07565189 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08178131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091163105 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075575967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078727663 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082242467 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076940177 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080883793 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09171151 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077527307 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079094807 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082037517 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082089565 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075265237 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081549345 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083654052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090923925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082035031 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08190378 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076301148 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080727273 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081957016 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07583741 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081771167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082307244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091502755 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077298016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075653247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074177661 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080605771 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08178658 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080924902 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082403406 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081775906 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07578457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077372317 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077817687 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076825627 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0822404 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074085037 seconds)
  done (took 7.378031313 seconds)
done (took 29.084037336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544767728 seconds)
  done (took 1.955797294 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610503059 seconds)
  done (took 2.046371827 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.551717041 seconds)
  done (took 7.984954138 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372259499 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477150756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719295871 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138980012 seconds)
  done (took 3.17854049 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731744525 seconds)
  done (took 2.178742922 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239871313 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22965021 seconds)
  done (took 1.929501469 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380002476 seconds)
  done (took 1.817429621 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11612624 seconds)
  done (took 2.555232337 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242177927 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180445085 seconds)
  done (took 1.863868555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443162264 seconds)
  done (took 1.88263851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875899043 seconds)
  done (took 6.317936499 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223698186 seconds)
  done (took 1.709009452 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240231461 seconds)
  done (took 1.681421055 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748796356 seconds)
  done (took 3.190440737 seconds)
done (took 41.741894423 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089415731 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090670239 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091047833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087015178 seconds)
  done (took 1.782227251 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082669183 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078324882 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081789206 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078548712 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082045645 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078551798 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080115021 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081226956 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078552804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078927125 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078724079 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.079316451 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081072739 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.08021706 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077525682 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081007718 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081468853 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078406003 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081525103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078370636 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076890549 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080746496 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0809774 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077884178 seconds)
  done (took 3.359779548 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084052564 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078609558 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081136308 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077536106 seconds)
  done (took 1.769325045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084188266 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095413278 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093655539 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084128321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096424376 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091523892 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074808762 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0746758 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07604248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084262161 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074706344 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100061816 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093219175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084144826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086171589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070841273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073431748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092420153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084889493 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085176685 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077141041 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084461211 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073950568 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094552171 seconds)
  done (took 3.47439206 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086272583 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107065895 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085340677 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095604741 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097601242 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071100397 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085617154 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098075306 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132153336 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072251209 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07720377 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072001269 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080513538 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074404901 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086319771 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11408489 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117818874 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075005512 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103855868 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071656248 seconds)
  done (took 3.261203759 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078435541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075466898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076526825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071572065 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083042158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079068355 seconds)
  done (took 1.922437964 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073775264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073657945 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073372372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072879696 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078167166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073353338 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072063647 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073564403 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073590982 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072959222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07292441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072158929 seconds)
  done (took 2.334921652 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189059797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075405435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076280653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072094418 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076028538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072732548 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087248121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074894401 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098063992 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.07261794 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07339508 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075291984 seconds)
  done (took 2.498761774 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198874507 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081166115 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230850566 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154648904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112043245 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116655482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115365386 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114886972 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140007852 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102993844 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163419276 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164630383 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11036603 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139581178 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094131341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106971468 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153522692 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166319916 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109702535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165007865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14523092 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129440254 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147527723 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104990574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108701774 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121611128 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076938501 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084387451 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167672415 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133277196 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143322233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114097572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094476311 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177849058 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164907912 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140436077 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150202692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088759405 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108134674 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135603622 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197409701 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095749029 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308447107 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115904039 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086562524 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135589005 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121251919 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123016595 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107913808 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095263812 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145603777 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179065767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135103805 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090635501 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125946342 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114899351 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115384241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116536791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173737486 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158061057 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130020418 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076913242 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114407302 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150724928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137106438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111099338 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125955477 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096686841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134616039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154560236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125337419 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143279001 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118798879 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093162104 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123563465 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138873729 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129049527 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160634828 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126606042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078050424 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123131701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102396791 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085054778 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148840381 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080462446 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173058104 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103840132 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112379627 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13020628 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114467203 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113196998 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152612363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292051736 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109543213 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07450503 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110168144 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122401078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145803464 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092688655 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111189654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119509117 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083003226 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13626399 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081229013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125712585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.085600991 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129553154 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135410145 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084530929 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125461457 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107656302 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105804803 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132776465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157443413 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092479776 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086084801 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164140323 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124964298 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106475427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143419568 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156822144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107054609 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103170966 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148025632 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170593102 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095030256 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165489967 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108321847 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088292887 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093390565 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126067965 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113957575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126126978 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086309516 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12023238 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16314254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080504187 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100233678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136122861 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083740761 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085291603 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108400067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1065596 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100526529 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102331243 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105037056 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135330294 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280957567 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110618041 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12784804 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103630062 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165301648 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093174249 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108342962 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108126814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076699795 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134566203 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154886794 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083896364 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159197091 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123892077 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118642979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122268543 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088706426 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138022007 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083984734 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075866532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142100054 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114783161 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112222687 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149366479 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118268265 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125988807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120920756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132587669 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131398183 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131615727 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110946467 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093544141 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116300241 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129565533 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07931938 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094814558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085654177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108861621 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098979244 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088511274 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140889733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123973865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114965866 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115079958 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100431388 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147489355 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081113458 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127663062 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122012814 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099333697 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150251602 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150332546 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133586678 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101805013 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290543672 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078575769 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082196936 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092364046 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125797073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090264622 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088386739 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116700886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146920084 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130312484 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136393988 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125661275 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121048423 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154313847 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076081379 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124185251 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143811807 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123907026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108779124 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095614101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103450884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142280389 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108390884 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174603714 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117118685 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127867993 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154987398 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107581046 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084865408 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106809667 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134122393 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106671786 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144696572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10302185 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093285689 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111637776 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081705826 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101652052 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128815128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119199893 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135033874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115805335 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133965689 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082863158 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115996629 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124054805 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122284067 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070597295 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120244504 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156110971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099569196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119440173 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303537775 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086249993 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.14087633 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171213028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145271171 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089986836 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111163373 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123753599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127718959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122394255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139381772 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108655407 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138925689 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113623349 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090356983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092424774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100775378 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107890661 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099269562 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10561636 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115372243 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100463608 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132565244 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107204282 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114287389 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120845533 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104679378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097810856 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102146364 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173471798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121937693 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168974174 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10545525 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142258763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160352542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081054368 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084511763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0838734 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139511089 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090142617 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131713552 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113952037 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119088519 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125096716 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139509139 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09972222 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074593656 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111752986 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133345137 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124887028 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101567146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105469413 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158404066 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101523271 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08240269 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268504359 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12077962 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109951993 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167276101 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069147662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110747846 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082930264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085472764 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127014835 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149319692 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086390208 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10411946 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122500913 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115161912 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127523913 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102073151 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115209544 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126720006 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147152808 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129080278 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094182111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11379325 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130641315 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153988033 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106386207 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102451976 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169287218 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151263083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157771234 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091309913 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117688303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117747953 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112984089 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139226047 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089030391 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160491141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087322664 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136372714 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104883029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09176691 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129072225 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113784299 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092483232 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144106504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119325492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087780347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083112068 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117849523 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121140365 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106557508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080093447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29060734 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081604166 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13628767 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160855872 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086743185 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109687313 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099910205 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086565595 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107745807 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106185883 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09180359 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104430613 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168207196 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090908615 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146278526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133854873 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114170528 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134568598 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106418271 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64519274 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082590547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149889171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117215455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169089693 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104297254 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120852921 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113439279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123335369 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143495571 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105849164 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183983522 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133201358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119107941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084513998 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105975192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107747423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091367853 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111224497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117154211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117656885 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096893571 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118098269 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125033051 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087529286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099994094 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153664687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117349477 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143243336 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137999199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089483508 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120027689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136163244 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239415509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122355788 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15168743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110950979 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105095858 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0862947 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103113852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158826132 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080606756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157667499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125681684 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113722598 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116142592 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113384922 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13177748 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108290694 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124456315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095558541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110744573 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116121975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086654291 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082370068 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108672848 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113429533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119650055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100641358 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104998595 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150574761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078878833 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102666687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119090934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143723753 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170198927 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093969352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088253969 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122562605 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118595084 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115471069 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124156904 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084645607 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086624261 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08503049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087730345 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110015607 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115978353 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11639003 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112285772 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159566484 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08802673 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229319136 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098617567 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107419294 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075685828 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082505887 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099413171 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09925646 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262223002 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116982399 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159527571 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101108911 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095553667 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097297465 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081729644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08897935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127717677 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112003021 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120672938 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105194474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070346761 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109763101 seconds)
  done (took 60.177749397 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113630612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088500952 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102431364 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149436075 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126676242 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206106839 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162242934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194121197 seconds)
  done (took 2.703709035 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074227048 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101171963 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108982393 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.090327522 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072591354 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076622578 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229879722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088812907 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073056 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098355802 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085235235 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07719324 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413718372 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072336887 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075420167 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070001226 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.074234285 seconds)
  done (took 3.431171585 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39681191 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619477703 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35034118 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084266227 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.984038646 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097499555 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.32504253 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140831155 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086211425 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534983525 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415684631 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139901195 seconds)
  done (took 18.737093092 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08832356 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082218444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095195638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095046149 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084594573 seconds)
  done (took 2.004885772 seconds)
done (took 108.953142311 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089329586 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424216469 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06058489 seconds)
  done (took 2.071722225 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093623247 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091049658 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091593749 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088665774 seconds)
  done (took 1.928055368 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080769552 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082676184 seconds)
  done (took 1.720036402 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233168307 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17258152 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102284246 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088445878 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08552677 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086597132 seconds)
  done (took 1.821207674 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078474204 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080661017 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078609253 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08214307 seconds)
  done (took 1.877082592 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082189287 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058778197 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060650044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063733355 seconds)
  done (took 1.823231297 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092762431 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088095003 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085244737 seconds)
  done (took 1.824224772 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105609896 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092708282 seconds)
  done (took 1.756993663 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086711497 seconds)
  done (took 1.645927255 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094127796 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104218728 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137639881 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119881949 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143359744 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119170002 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090983194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091636749 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084793404 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092127543 seconds)
  done (took 2.636688394 seconds)
done (took 21.259793517 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084804086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373565356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366231711 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094725962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675209522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362871967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004278353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098371173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146382428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074063906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091029522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655501006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995188892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335821956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982237343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332718934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656547343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075692874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075044523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074868989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990760714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074430078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074672803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075088727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656814492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37885949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074859501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.336527476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074992513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077102496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380063146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075574509 seconds)
  done (took 16.365114787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076095151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125309998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078865039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090515755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077025806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076479325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077821016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075694638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127785308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07530137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091922202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075033466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078659584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076252129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094352865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078333657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075418091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076064442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075586874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075430579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093941497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07519345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074999415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07593824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074944188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087705533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075660074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075413338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075365202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077429873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078020007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075922885 seconds)
  done (took 4.190394861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123345423 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130395859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080107131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110489667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119619146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077618673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150907127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100476492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133880898 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075212995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09185535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075241223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10815434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075502392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094736477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075408958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076008862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075585106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07508217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075567588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094334402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075460873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075724118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075704292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075499836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089289337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075469334 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07545239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075453142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077044152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07856551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075299558 seconds)
  done (took 4.443479583 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078860572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081197517 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087953913 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089288432 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075074104 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077960413 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079296597 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075635326 seconds)
  done (took 2.221985679 seconds)
done (took 28.785763677 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085646312 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076131324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07941632 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095443371 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081291114 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083747209 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073622402 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082331496 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080297067 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080235542 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081590908 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074163543 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078747999 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073274546 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080583628 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074740946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085151995 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078940064 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085135853 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085254864 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076857127 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07977745 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08243957 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084840186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084822939 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084529191 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083140164 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079243209 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074999383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076990647 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082968181 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089845958 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074323977 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084201413 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073968594 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074041851 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077915905 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074089275 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084820539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082628874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075966611 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083442211 seconds)
  done (took 4.933019209 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094351098 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098787987 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091640321 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069009719 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074603331 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07228245 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09661464 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066911241 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067073716 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095406627 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063872368 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066627308 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069953247 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061396405 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067726613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064544564 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069330137 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062364689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.067285283 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066459731 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096302121 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061884161 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083838074 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069804469 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063343297 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068899047 seconds)
  done (took 3.516150345 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080538064 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089352831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096947936 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148294349 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116865434 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084461329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085320511 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098857718 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100031635 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072955682 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077054976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100337305 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093609569 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080428997 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074003574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.09089728 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091379033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075752897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079167449 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100508953 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092562785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091315519 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098244521 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087761259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.073605571 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076356183 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077672708 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087024331 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076345609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083548183 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076579037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077045949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075640878 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084836952 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076634334 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075619892 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100039725 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083923515 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084742821 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07484079 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082109363 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075522702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097302126 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130296112 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073018481 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079471923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077410951 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08423734 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073742079 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10076034 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085100333 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073981782 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077030947 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073087311 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0734424 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07670272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075560532 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075987141 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082644968 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079394473 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097350578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07882193 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090098514 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07427813 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082097967 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073260521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074560167 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073319587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098230531 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075982196 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114065744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075019779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074816641 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083739281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082275341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080873805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074059719 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08980281 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085451036 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077362738 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082505944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077026861 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076776099 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103200822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076772613 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07578893 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074960263 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07946722 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076717727 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075064898 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086595034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073845744 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076219703 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089900534 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073283831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074976108 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078592271 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077661994 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073034737 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083919853 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077679906 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073942596 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082917612 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073949617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076161371 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085558666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079816834 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072672196 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077386501 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078360999 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074439492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074876186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07576755 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074944515 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081892646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080149266 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077622013 seconds)
  done (took 11.283960521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170157972 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159094799 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078036191 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151520148 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083203296 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085259965 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152390803 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099763288 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074209347 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075688498 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074666629 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113920087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109346087 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119929212 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084563407 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074820821 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096546795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118608464 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153550281 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150037866 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.097288992 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082414954 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076355026 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075470304 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075874405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083669724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090521058 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083002778 seconds)
  done (took 4.517323253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085659163 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1089562 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08102985 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097245945 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096049596 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07434584 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07637756 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076695004 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091857003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083881936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074246794 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07899754 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080488804 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076778755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075199175 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080929652 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081548796 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075146011 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077710317 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081345069 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084010265 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097505401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077258749 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073782295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079070531 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073356463 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068832083 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089351571 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074811512 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098353405 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071609249 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078856094 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087739599 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075308106 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074534697 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073972555 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074828443 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073844108 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07613423 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072589753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072632151 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064032002 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073615902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084371164 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087712336 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063029241 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078788767 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079373574 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079370439 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071695953 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077285847 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077016358 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076919338 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08165385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078136107 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079553064 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075854491 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082721831 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083248112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074486505 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070961707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072667859 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079199333 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071304878 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089390998 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079279634 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072707857 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073967758 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075873227 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087935162 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074214138 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078992666 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071839594 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076208964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079654649 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076572217 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075397353 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072798695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074491351 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074880161 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062203496 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074435851 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060323033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076623337 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072514622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073309707 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073962713 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078713975 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085470745 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07579455 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080424134 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075741769 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073273261 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076850409 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066470968 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076894704 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084866429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088373498 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074251551 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071994225 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086499686 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078849253 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073025145 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063384371 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078122238 seconds)
  done (took 9.788291976 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09825144 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07676784 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088551926 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095843385 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092426685 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.081417573 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084905525 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075786463 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090714393 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.081059852 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084488077 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07469354 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084862842 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084257957 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076173229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084912929 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078426109 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089418741 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088922958 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074476687 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082705965 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086285904 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095738015 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087032926 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085676684 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087194946 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095461924 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083729274 seconds)
  done (took 4.02004743 seconds)
done (took 39.63110383 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.691801852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.833000243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.660918575 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.979226075 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857970738 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.687089602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.837615455 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.657539298 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.928601535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.700234814 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.016455233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.741962867 seconds)
done (took 64.310410113 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.744205733 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.798491474 seconds)
    (2/2) benchmarking "String"...
    done (took 1.907772019 seconds)
  done (took 5.291576312 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.864816678 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.242066345 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.900701793 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.656301223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.662628304 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.954719021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.458938329 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.194495254 seconds)
  done (took 29.655536572 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.821432689 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.887332129 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.352816444 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.385931917 seconds)
  done (took 15.084732334 seconds)
done (took 61.318935167 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.657902705 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.686806335 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.661618267 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.642144872 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.715796647 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.667370488 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.01429961 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.672106037 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.65739255 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.645927937 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.659952252 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.087258793 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663035585 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.843494156 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.656134694 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.667265239 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.68173661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.136909258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.812664611 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.673169998 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.659759217 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.658762174 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.662366516 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.659245515 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.671581628 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.657643118 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.057960537 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.665530627 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.283571341 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.659284394 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.692479262 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.036047918 seconds)
  done (took 199.85141859 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.656766171 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.508231914 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.56797696 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.666687171 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.10439419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.839788543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.758082196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.14870249 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.665397887 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.669743227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.770984062 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.658540714 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.784455609 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678420271 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.707514003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.749257734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.818834797 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.794433331 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.714431566 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.827399974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.676803883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.576248996 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.556166699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.753029845 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.66826763 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.769034318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.818459047 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.661407612 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.852498596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.786433115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.70210986 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.681058257 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.878860413 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.530286415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.682375344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.665642629 seconds)
  done (took 164.934512705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.853632972 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.660907959 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.658496374 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.659329479 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.673258208 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.660619548 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781527089 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78906948 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.307716403 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.328368068 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.664984995 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.709307707 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.659707578 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456364592 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.659728439 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.726782744 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.670848558 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.660866874 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674937199 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.686120157 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.662856477 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.658794649 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.659168296 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787139438 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.672265169 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669269043 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.663177864 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.66533595 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.032633756 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.659609056 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.659664852 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.896044152 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660312952 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.666474161 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.917948246 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.661483063 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660340777 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51658455 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.785431757 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752733686 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.661732872 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.666734554 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.66266207 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.877770875 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.661794184 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.660365259 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.661882839 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.664133375 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807012911 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.65988935 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787814604 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.660609665 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145916902 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.660008339 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.661522415 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.643295851 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.250439035 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.664964025 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.663996185 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.661312602 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.661090513 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.667918955 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.455990007 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.736178087 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.663317605 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.665461346 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.66720953 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.66213588 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.776410778 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664239418 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.17705159 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.722780476 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.897649664 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786336255 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666955824 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729138154 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754866303 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.661419256 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.662627771 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.661716195 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.663078735 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.743077134 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.662813552 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.795801651 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.663267636 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669218006 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.66445176 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.662195479 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712343706 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.73341944 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.663972981 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499877969 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.665633888 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.66297673 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934647673 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.728727525 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.663589654 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662638377 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.790597955 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786415754 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.377961038 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.665318735 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.435559937 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.80629989 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.66644028 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.798398282 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.666604191 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744078302 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.667997844 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.665074397 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.694840767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.664832682 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.716320206 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.663619124 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.038641753 seconds)
  done (took 390.428846882 seconds)
done (took 758.71082013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.267912985 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.231142842 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.329368909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.253720518 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.230586338 seconds)
  done (took 12.906338994 seconds)
done (took 14.498974599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.753065943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.758989317 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.688577577 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756369439 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.685614308 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.754955477 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.738400169 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.690370488 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.723549876 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.689642795 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.724902099 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689840003 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.67768304 seconds)
  done (took 23.925701737 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.901872618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904185056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734705267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.896673407 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.710863423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.898073063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826444597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.816811574 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814884143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680807336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677396473 seconds)
  done (took 21.457100541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902307627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910014826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.741325753 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909051398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714768732 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907784383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83096564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818890559 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817098718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.681833333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.679840661 seconds)
  done (took 21.508148148 seconds)
done (took 68.484210498 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.674613956 seconds)
  done (took 3.269964445 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.701656236 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.871902717 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.681509117 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.678247418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.67328249 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.674956096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.67783867 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.673659735 seconds)
  done (took 15.228855062 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.674606799 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.674020214 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.670956415 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.670747692 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.673492499 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.673559052 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.67379708 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.67185677 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.670417672 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.675385799 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.673472204 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.671086553 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.672349947 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.672098425 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.671804715 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.674886406 seconds)
  done (took 28.360942703 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.674223257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.671912477 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.671288375 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.672002854 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.67148221 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.67207724 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.673380435 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.671854172 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.672162892 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.67194632 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.673265825 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.671813222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.671848217 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.671210698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.671863798 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.673873158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.672080979 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.672705907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.676699849 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.672518801 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.672227135 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.672347856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.671771482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.673504794 seconds)
  done (took 41.738594815 seconds)
done (took 90.192808215 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.397366384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.385700314 seconds)
  done (took 9.379751623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.67470501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.676297709 seconds)
  done (took 4.950177627 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.674969945 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.675645214 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.675568728 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.676045849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.675979737 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.676492739 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.675505345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.676293443 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.676428932 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.676126214 seconds)
  done (took 18.355219071 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.676091718 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.676228853 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.67311705 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.676278115 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.675727755 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.67529869 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.676473877 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.675838976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.676183471 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.673959617 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.677030854 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.673772211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.676507329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.67430174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.678691103 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.673498438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.674221176 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.674049441 seconds)
  done (took 31.756039085 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.676946497 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.676304884 seconds)
  done (took 4.951580309 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.674326241 seconds)
    (2/7) benchmarking "second"...
    done (took 1.675730101 seconds)
    (3/7) benchmarking "month"...
    done (took 1.67405586 seconds)
    (4/7) benchmarking "year"...
    done (took 1.673954085 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.674229328 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.675115023 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.674032196 seconds)
  done (took 13.320067926 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.677947345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.816923357 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.881819747 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.32993856 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.678481177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.681031347 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.600153306 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.68129822 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.683040658 seconds)
  done (took 18.630123106 seconds)
done (took 102.940066083 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.509011116 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.677054507 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.881063892 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.782683065 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.694693422 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.021836421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.715464496 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957244138 seconds)
done (took 41.838170408 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.687732498 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.377475994 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.422457721 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.701854787 seconds)
  done (took 15.102210111 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.6601534 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.096820553 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.682962908 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.527777449 seconds)
  done (took 21.736093179 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.045097371 seconds)
    (2/2) benchmarking "read"...
    done (took 2.021482803 seconds)
  done (took 5.670569296 seconds)
done (took 50.798343965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678213862 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.678089449 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.675591077 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677992986 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.676393854 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.675792497 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.678305356 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.679735056 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.679015097 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.678831331 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.679770959 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678126729 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.676886029 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677410623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679677685 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.676794627 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677238604 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.677859683 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.678782316 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.678112694 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680721571 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.677300161 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.677650406 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.677208827 seconds)
  done (took 41.872116077 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.680507833 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.677776498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.680662312 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.679542282 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.678058289 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.681051227 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.680690801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.677553688 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.679487817 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.684801497 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677166581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.677624416 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.679894186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.678456953 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679991938 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.677080906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.680497917 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677785891 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680527114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.677744131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.679739146 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677196306 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.677525544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.679322623 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.677401847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.677958405 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.682770532 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.681314565 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680972399 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.678956312 seconds)
  done (took 51.982153106 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.685661501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.689648867 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.681229546 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.681313201 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.681006803 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.681911831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.682091002 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.681903068 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.680873479 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.681423133 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.681543471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.680944891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.681426036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.682217125 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.686793115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.682088487 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.681238265 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.681473694 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.680951623 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.682848449 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.682060167 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.682125652 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.681477506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.682127655 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.682726701 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.681374857 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.682160575 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.682422905 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.682442548 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.681917285 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.683355193 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.683004906 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.683416902 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.683728139 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.682597139 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.683107563 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.687784123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.691471542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.683198103 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.682345697 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.682994515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.683024647 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.682904928 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.682793855 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.683837709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.682860238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.683551091 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.683093034 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.682504834 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.68460304 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.683830855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.683329183 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.682708539 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.684087087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.682822416 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.683285248 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.683254866 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.683949974 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.683718939 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.683805531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.684240773 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.683398469 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.684338076 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.684250383 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.684254102 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.684119989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.683166496 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.68359953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.684565512 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.684015051 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.682948752 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.68453428 seconds)
  done (took 122.792625908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.684109797 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.682021614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.680616574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.681835059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.681043332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.685215433 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.681693263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684397122 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681687704 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.685434302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685292309 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.682040301 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685487251 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.685329231 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685481595 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.682266347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.684962239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.682135948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.685080408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.685759187 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68562152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.682996402 seconds)
  done (took 38.646396193 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685807735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.68529596 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.684190404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.68540927 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.682964164 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.685665186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.685078278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688395173 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685738904 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.68273163 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683259661 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686698951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682287665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683378197 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683494185 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.682934584 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68551675 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.683663316 seconds)
  done (took 31.929843485 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.682823669 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.683482822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.68605244 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.683443872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.6833913 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.685818879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688377653 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686628574 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.68607442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.683150384 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.68611497 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686328978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.686383104 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682387788 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68574302 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.684546897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.686638513 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683598549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687894321 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683989398 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683955319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686701842 seconds)
  done (took 38.681256457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686309004 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.687908006 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.686055893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.6850149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.686031642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.687987462 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.687657011 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.684960324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.687057838 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.686875525 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684152908 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.687088977 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.685677259 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.685254698 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.683801495 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684610676 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.686812775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.685470956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687932246 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.685956017 seconds)
  done (took 35.330857557 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687536266 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.68838043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.689011796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689659333 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688843244 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.689218259 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.688983071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.689649116 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.68878513 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.689893745 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.690550377 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.689887661 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689261825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.689859871 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689820387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.691171168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.690161655 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689738597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.68938185 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.690819054 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.689739046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.690192872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690139099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.689700404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.689158073 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.690750753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690690925 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.689562273 seconds)
  done (took 48.92105471 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688868903 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.689305495 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.68567408 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.686927155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.691537553 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.686221424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.68645395 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.68754781 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69046001 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.686710767 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.68937803 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.689296788 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.689550815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.689983878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688875183 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.689494276 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691755585 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.687118696 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688060427 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688136727 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.690376589 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69026707 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.69068335 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.688237198 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688301163 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.691442831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687863141 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.68785401 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690817965 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.687845536 seconds)
  done (took 52.276634913 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.708968696 seconds)
    (2/2) benchmarking "in"...
    done (took 1.708793936 seconds)
  done (took 5.029142438 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.689436411 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690043897 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.689732271 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.688214049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.688264316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.692217169 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69144574 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688114442 seconds)
  done (took 15.130115008 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.690792571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.691802609 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.692447977 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.693182497 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.693230388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.692158901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.698979056 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.693347987 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.693745797 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.694241207 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.700463168 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.700677201 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.695442425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692324496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.693434928 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695520052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.692435928 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.692544771 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.694157357 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.692434181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.694212538 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.695720143 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695715205 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.690428956 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.695211753 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.703470887 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.69755623 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.694546321 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.694548174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.698656207 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.693397452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.690089494 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.69484181 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.695506256 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.693906833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.695749378 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703396616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695746878 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.700206506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.694815803 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.694029711 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.691726875 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.695998131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.69552824 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695049244 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.694566969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.694304769 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.691400436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.693718026 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.698194537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.700004588 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693695669 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.692224157 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698441879 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.69634523 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702663031 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.695893246 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.698218544 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.704436619 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.70608551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.707318823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.703155882 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.696772999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.696957617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705534728 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.720227769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701976632 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.692585292 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.694081475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.695105865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.702803303 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708697321 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.705732241 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.697265623 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.695981881 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.696031171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69549 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.695957481 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702894441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.69917057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.697362967 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.696444708 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.706673866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72006201 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.695363409 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.697138865 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.700975993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.697915398 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.698489943 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.709170575 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.698223563 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.696823507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.696857931 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.696612481 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.697434778 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.698346143 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.6970623 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698456742 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.694063003 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.696842639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.698541138 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.701249846 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.707768382 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.699892724 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.697829367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.704652888 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.698108279 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.696909775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.703064533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.697651182 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.697697248 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.698371956 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.704177999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.694102861 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.701582411 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.707924567 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.698597556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.699333186 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.699145237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.697787878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.707069041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.727136355 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.698019331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.697461444 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.702925042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.714037382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70056079 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.701186327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.697839158 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.695218517 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.695191397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.700181602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.698353562 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.699672902 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70029726 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.700583611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.694753882 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.698850993 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.698453256 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.702860895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.699022917 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.699191195 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.700370669 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.702113198 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.700291362 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.701700696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.706367829 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.700109981 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.699920444 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.700584145 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.696826747 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698706999 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.703911022 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.701426582 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.69987462 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.699881091 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.701518364 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.702689926 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.699742948 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.699619747 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699909254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.700595012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704029769 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.701932143 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.703433339 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.70010777 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.696443 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.699482304 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.700000927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.700128294 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.699746181 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.699635378 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.702886996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.708510134 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.702336615 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.700630766 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.703690447 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.701750621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.700738669 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.701358132 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.704354727 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.709119615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.702650652 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.707149388 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.701607103 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.701540886 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.700986444 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.701482432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.702182984 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.702573267 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.704052751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.70865417 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715728992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711006054 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.703304026 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.704423986 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.702733675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.706061441 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.705622984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.702004977 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.701433802 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.702067637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702022743 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.703350479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.703947128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.703084512 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.701068313 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.701516962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.700652507 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.70259713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.701992983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.703447769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.704335584 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.699610267 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.702551358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.702283431 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.702167904 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.700168504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.700760757 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.7026193 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.702092369 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.704142315 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.709527453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.700376944 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.704358525 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705031918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.704263433 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.706543231 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.703020097 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.704985761 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.703511852 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71007811 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.7035369 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.703964613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71091718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.702852612 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.703126524 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.705780176 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.703588147 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.700774036 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.707004911 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.713191499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.702956044 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.703895754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.703667817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705435831 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.703812069 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.710309831 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.699513668 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.704710665 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.703246839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.705794421 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.700873836 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.706497208 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.704629021 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.705007318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.70780959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.704590686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.70471579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.705538929 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.705407829 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.705546384 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.706443546 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708216236 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.714047463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.708229563 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.704969109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.706989946 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.70630468 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.709128598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.70551829 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.705529396 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.705700517 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719540199 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.715545115 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.711908799 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.708664374 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.705295257 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.711471476 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.706496793 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.710989259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705591905 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.707458436 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.705149407 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.705978463 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.703205166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.707389549 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.705953373 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.707275421 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.707803421 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.709731127 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.705289873 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.706056008 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.706911548 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.706965685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.705941978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.705334584 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.706783317 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.709361285 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709010646 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.706389081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.705622921 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712763231 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707309679 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.707278571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.706005682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.706406302 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.706027672 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.709159957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.707747317 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.710555402 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.715726026 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.710789714 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.716517815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.708939568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.718867733 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.708090123 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.710744632 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.716481088 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.704117414 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.706204657 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.706693966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.706668771 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71529088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.708236171 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.708430831 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.712670435 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.708087733 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.709085855 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.708235773 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.708574114 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.707673723 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.709466899 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.71888444 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.710476614 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.712179303 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.711347409 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.704133173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.708592581 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.707695912 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.707980254 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712086301 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.708064981 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.709378794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.707971831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.709053738 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.70839425 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.709231133 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.708357307 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.705885016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.710283806 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.716955868 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.710891415 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.713841423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.708884046 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.717674121 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709016768 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71632067 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.710175732 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.709506505 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.709189108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.7080876 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.711157983 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.709263594 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.710974602 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.71108795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.710927832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.713207381 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.71295541 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.712944477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.710096635 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.711652897 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.709590141 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720765593 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.735393392 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.711925502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713990046 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.707450894 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.7111198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.715464542 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.710530868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.709255126 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.713803986 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.722296814 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.718516833 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.71261297 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.712605115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.710998882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711512561 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.710498591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.711059471 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.712068259 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.711512172 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.712013733 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.713136822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71512835 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.711358273 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.712179568 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.712421655 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.712949928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.722243918 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.712576384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.713092032 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714469306 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.71248155 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.712289547 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.712686839 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.711898987 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713312297 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71105856 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.713396241 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720007491 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.718846629 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.715140939 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.711833221 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.713296312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.71195733 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.712048083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712484445 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.712516285 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.713207502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.713386702 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.712509504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.71281603 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.710751024 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.711906423 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.713349982 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.712184431 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715367921 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.720318751 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713173171 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.709714099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.711287019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712138039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.714049248 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.713065286 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.721248093 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715691351 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.72614251 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.722821507 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.718122392 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.712641269 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717021573 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.722803304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.712246363 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.714436271 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.714078028 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.715141761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.713939935 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.717999824 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715196454 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.720704202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.714147168 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.714243656 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723365357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.716477683 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.717413891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.71596207 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.718942081 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.713178183 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.710804723 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.713914822 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.714074204 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72144052 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.716616479 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715592855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.716300498 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.713385035 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.716107498 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71900725 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713666431 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.71538602 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.711948802 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.715438493 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714960509 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717110851 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.711191593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.714386789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.715127261 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.719095399 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.72204827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.712095617 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717338676 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.715379704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.716489941 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716554473 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.715167394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.713306349 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.711088849 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.716849453 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.715963308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.71755106 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.719703947 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.715148671 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.717051159 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.717809262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715587244 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719775192 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.727429311 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.722872905 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.713920494 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.715891119 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.716552872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.718896721 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.716696947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.716478866 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716466391 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.71819486 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.716459823 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716234616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.71605889 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.72005738 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733683776 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.717119911 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.716874811 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.717900927 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721000036 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.716693232 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.714548287 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.718730043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.718891692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.720235739 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.726162361 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.71820009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724120918 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717740008 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.721074422 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.72154522 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.721730331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.72613526 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.720334048 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.718086565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.717022388 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.722575887 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.733761109 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717490476 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728607081 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747772405 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.719123839 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.719852426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.718750451 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717377791 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.719189657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.721302593 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.717446885 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.718565459 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718299843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.71903971 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.719623178 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7248948 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.721019218 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.718068344 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.717857674 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.718346536 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.719130824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.715724337 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.719468887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.718337515 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.71969615 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.720151424 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.719596607 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.720301844 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.733814271 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.729393534 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.718554345 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.719670425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.715793347 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.722508063 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.722770025 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730891364 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.727861124 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.720111924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.721026695 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.721027012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720872498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.717242449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.72033409 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.720237051 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721660723 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.717472547 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.733522527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.728600215 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.724158104 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.720624359 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.721131471 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.719886857 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721398335 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719969358 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.721758654 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.721038245 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725706916 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.720640508 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.719604148 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.724220982 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.729363482 seconds)
  done (took 1019.964235044 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71747758 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717702181 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716634876 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.717620183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717475057 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718231594 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717562839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.717524416 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.718472156 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716401371 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.718095934 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718269099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717937192 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718085551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717939459 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.71828749 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719601561 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.717974988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.71787573 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718594798 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.718735365 seconds)
  done (took 37.718333629 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.721344296 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.718441085 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718213312 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720170338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718749758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721205761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.718415325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721985242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721307671 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718765352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.721180688 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723841681 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.720671562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.718926121 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718682323 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721595818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.722153406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719405583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.722365946 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719889011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723306398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.719571489 seconds)
  done (took 39.491855419 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.723013464 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.723480647 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.723166257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.719681647 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.723372861 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.719708919 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.726516828 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.722586003 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.72328719 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.723263247 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.722400133 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.723575066 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.730729823 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.729311975 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.724926498 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.722423007 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.866884433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7235467 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.723128511 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.72424038 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.720285355 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.728716784 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.720804981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.721708059 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.72202125 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.723447541 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.722664761 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.722315283 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.724747531 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.724669752 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.728574463 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.722361171 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.722671893 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.72505865 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.722200116 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.7247831 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.728065262 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.725986122 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.720732603 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.723000592 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.734120122 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.745806953 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.725618997 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.730564447 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.72408824 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.723229182 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.728403141 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.732719462 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.721196851 seconds)
  done (took 86.303786571 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.723485917 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.724072667 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.722034311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.725018094 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.724558572 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.723955371 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.723634218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.724214635 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.723744583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.726556603 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.724617015 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.72139141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.721341554 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.724735978 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.72547303 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.723141516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.722567909 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721701568 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.721932719 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.722373707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.721921905 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.725733943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.724238261 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.722294258 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.725864885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.722247719 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.728065831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.724441676 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.722662547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.722840802 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.725240952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726223539 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.725292971 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.722716593 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.722159154 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.725043203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.725680252 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.72178509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.724059109 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.723025396 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.724064189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.723216817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.724590776 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.725392343 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.721309804 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.723000097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.721979171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.721452536 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.722354545 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.724618479 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.725356673 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.723046855 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.724706114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.721010084 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.724099766 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.724883535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.721151067 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.718437309 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.721242388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.719844448 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.718961266 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.725703328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.720665843 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722809978 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.725057894 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.718702296 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.719339908 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723725212 seconds)
  done (took 118.828780005 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724099966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.724332612 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72468417 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.723195689 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723927244 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.725849509 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.722777967 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.724540986 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.724506956 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72773857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725443633 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.72079715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.721617776 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.719128566 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.720944482 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.719549872 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.721762787 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.719366582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.719438944 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722069988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.719394985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.719557015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.722404529 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.72049911 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.721530237 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.720298926 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718247172 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724126569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717683561 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.71750037 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.717955592 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.719978184 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.719732608 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.71797795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.719351774 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.718991872 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.719715392 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718519981 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.718818444 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.718052027 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.717304347 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716825774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716841793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.718610705 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.717618352 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.717172732 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.71970468 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.719049106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.717247841 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714161022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.717544061 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719261055 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715724806 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.717674859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.718776697 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.717327651 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717131806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71824676 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718975782 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71828973 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718301134 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.716302231 seconds)
  done (took 108.27882236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716159784 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715758978 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.713154712 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.717450092 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.716986323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712591313 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717326064 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.714537339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718192765 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.71723174 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715389165 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714376804 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715658763 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719073942 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715059459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715298617 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714340918 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.713404054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714616461 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714111051 seconds)
  done (took 35.948556144 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.714278884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.719235915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.715412629 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713076859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.716187907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.712756277 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.717534791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717443331 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716367378 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718809343 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715451612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.717845605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713107785 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71455106 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.719022044 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.715735741 seconds)
  done (took 29.092354387 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.714261586 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.717521033 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.717030673 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.719228577 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.712934181 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.712290991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.715546468 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.714216846 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.713121034 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.718632307 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.72089292 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.718618784 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.720439669 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.720200141 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.717693613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.718669956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.714869731 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.715847934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.719889016 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.719905755 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.71575752 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.710592202 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.713776389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.714146951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.712206784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.713557299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.711674017 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.705228262 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.704955783 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.708340696 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.704913122 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.706026023 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.706362126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.704585405 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.7075499 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.705163635 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.708105842 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.707406939 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.707417741 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.709156658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.706890911 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.704056399 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.706807016 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.706934443 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.704338764 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.710055364 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.705317992 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.706834193 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705655162 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.707065216 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.709537857 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.709954821 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.707337361 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.706458054 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.710168733 seconds)
  done (took 95.766557622 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709479546 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708349245 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.705819084 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.70806502 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.70835077 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.707621871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.710881789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.705553419 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707817733 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.70751436 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.708901788 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711310106 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706463573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712067294 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.707544497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70885417 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.705535373 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.705601066 seconds)
  done (took 32.373039434 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.706447793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710400305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.71094694 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706944156 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.705895719 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711434826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707158239 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.708627122 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709638409 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.706768235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70717575 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.709283087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708615254 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.708971096 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707036278 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707347062 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.708531176 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709333469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.706953735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705376023 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.714086451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7100673 seconds)
  done (took 39.218105396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.70972815 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.707689044 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.723713015 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.728248618 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.730791202 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.747730959 seconds)
  done (took 11.979428154 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70708798 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706909477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.707471541 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709095687 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705730701 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703013764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703982888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70438133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706025047 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705004296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702264093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706549872 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705943048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704899595 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707130351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705741064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702773785 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701717214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702405087 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705621227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703488319 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706800897 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70047268 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703777546 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701096971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701379238 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705725603 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702013715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70146777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703191949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703213454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702295511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708779632 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705711484 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703124524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703915818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702499113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702071101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704160626 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69964743 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703768085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705007586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702316928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701291103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703913648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698061578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700253888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700092475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698639243 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702435152 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701527669 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701623652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704186383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702050966 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701584368 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703128758 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701953674 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700497719 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700711865 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699644114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698550959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701538702 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701646725 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702189739 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702497564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701194453 seconds)
  done (took 114.037427304 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70078615 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702023089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698212461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698559295 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700766242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699274394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69864018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698206744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698254534 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699004864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700706827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698684381 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701640041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699164172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698890392 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698753218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699396455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703062198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702425425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706126635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700839115 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702500321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698333824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699936969 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699576241 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702631046 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698671961 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701686661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701230067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698283327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700143055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699525888 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699723804 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698504635 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698252037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699100639 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703629707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698221309 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698614223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701972173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700040869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702485279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700339821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698472436 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699380205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700898123 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699889699 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700571596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699766689 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698878646 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698497303 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701139365 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700409515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701053331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700024779 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697373998 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69885418 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700233168 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699028659 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704743584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700436395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701339047 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701576156 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699736559 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702161794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701303945 seconds)
  done (took 113.836118126 seconds)
done (took 2367.033873344 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.712565283 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.78618972 seconds)
  done (took 15.119048403 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.863468792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.814437135 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.700805419 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.750534307 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.699824746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.715453032 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.714158765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.699791837 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.698087561 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.698028158 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.699464884 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.881968115 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.696579336 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.698228688 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.698703531 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.792723358 seconds)
  done (took 49.448114957 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.701588956 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.702098361 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.71436681 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.705974571 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.700773319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712152603 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.734888495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.705105987 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.734697116 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.71516076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.771955208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.716320604 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.699758483 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.750868602 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.716606545 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.715066311 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.795508245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.783235 seconds)
  done (took 32.696032307 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.779859368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.715361706 seconds)
  done (took 10.124057044 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.717344881 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.726696628 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.79042598 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.707486829 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.713559633 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.731483192 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.698651105 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.701152432 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.716730175 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.696279491 seconds)
  done (took 68.825458829 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.705356412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.699373466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.69833477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.69606762 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.691928639 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.696737132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.702830027 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.691471853 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.365117209 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.735326149 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.71097835 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.703976122 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.699657443 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.700027606 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.698166261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.721087197 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.808745657 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.696576719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.696500464 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.705443263 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.699109034 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.773219568 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.710279387 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.701242847 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.732025596 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.367744799 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.710571348 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.707655098 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.803554477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.697734623 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.698536643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.701585021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.701252384 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.079740898 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.972157435 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.699957064 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.713812051 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.707763929 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.696168688 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.837302883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.70013484 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.707175983 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.443738229 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.97024142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.792908965 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.743042041 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.007185312 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.716179429 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.70295328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.730280514 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.702556672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.701892715 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.713156358 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.194239094 seconds)
  done (took 122.984077125 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.696143347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.06297122 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.86511499 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.700199367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98303619 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905646715 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.70008163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.743999646 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.697134441 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932867607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.956390482 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807712069 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697700167 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.6974668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.69717899 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.695469515 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.854181611 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.773269574 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.69741672 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.696778827 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726826192 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940479471 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.821009657 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.698314481 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.725722981 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.908205553 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.819194004 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.804518845 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.472304416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.694371976 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760529602 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696832807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.694396768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.694275724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.853446385 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.795403169 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784244571 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.698587717 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695276484 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.694290614 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.367916816 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90025728 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79596917 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.837838845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.896230276 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904170541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.486824372 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.696799695 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.442008291 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.860999602 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.927518174 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.93318068 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.822523055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.702230197 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.233772061 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697279832 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.697439089 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950862021 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848438384 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.80121516 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702352812 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699481085 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698652457 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.949356911 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.701012239 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.801235395 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701256633 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.699919205 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798140728 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802377865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.839978746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916149444 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.733977686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.651983931 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.240811448 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949016596 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.769448628 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951725821 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701685959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.69820576 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781877301 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.54443197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.955378208 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.952214082 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957113314 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736794851 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.424465252 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.698017968 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.928928921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.925373434 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.960953759 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.905439119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.943832489 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.033099174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.697566747 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.698833414 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.939535637 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.835359562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.700659637 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.04860866 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93113455 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.24378018 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.71993221 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009016941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.831322893 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.70572069 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.353868198 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.701572489 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.934364847 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.744960665 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.699368671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706009449 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925458405 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.688553257 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.701055843 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.346907567 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.765369049 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704100836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936417266 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.701523909 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970342507 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.699377718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944271187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.689957412 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.733160457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.930769641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.904059636 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.706215555 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.95095981 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948817586 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.817419501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.923189118 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.400516543 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.703504265 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99021165 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701293293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.701548511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.870581364 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.705022605 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.845759593 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.704711019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995794762 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726698875 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93569976 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707788647 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960334684 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738235353 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752173631 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.705730313 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839787012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703881894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.636544573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861537489 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704106413 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.702180276 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.495959021 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.700107882 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.852080736 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.9378517 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.137718644 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776620454 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.371174974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.704236599 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78332099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.72630051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.095414465 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.700348215 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.958287822 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.707089939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.702602656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.704087291 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.944922177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.886109626 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.702573434 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702548102 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.61431059 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.706430224 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.700394387 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.885656437 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.135820556 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.702345181 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90624853 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707241935 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.831106992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.705380014 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.788925466 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.043183614 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.701674583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.702644005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.701647576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.704045129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.70357024 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969089933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.730074039 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.222467021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.844230071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980290294 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.016189303 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.951942049 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.751656531 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703447692 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.960548021 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.706684193 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.76983505 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.704527593 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.725844406 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933759227 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.705266967 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918539665 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981557673 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.554773771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.753490124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.704363048 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.703233417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.701848581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.849038114 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793837979 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708059589 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.702530423 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.82253249 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.830801757 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913246779 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.704331994 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.771194654 seconds)
  done (took 866.029976873 seconds)
done (took 1166.850041356 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.706788603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.706464685 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.692087467 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706112548 seconds)
  done (took 28.443722573 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.714074538 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.708213362 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.711972662 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.710166878 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.712213902 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.709347006 seconds)
  done (took 11.895431736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.710211138 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.70966116 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.70891908 seconds)
  done (took 20.759934493 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.779213647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.096420137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.813669921 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.13265909 seconds)
  done (took 9.452889602 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.715483223 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.712630277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.712021357 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.71166439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.713560232 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.714779069 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.712411089 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.713819588 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.713757914 seconds)
  done (took 17.053764892 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.909863051 seconds)
done (took 93.147362791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.03783245 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.780946581 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.844287934 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.716399831 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.891696184 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.79194774 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.69539224 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892074773 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.809673452 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.739487989 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.806687718 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.019990356 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.883448754 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.93771317 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.063035723 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.15635163 seconds)
    (17/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.192489674 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.744383655 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.975958191 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.716227162 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.562716792 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.844129871 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.319388628 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.806888968 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.797739733 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.709504225 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.845364344 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.823154272 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.704903515 seconds)
    (30/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.325055628 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.255699779 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.319625469 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.006589856 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.884450508 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.086984491 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.919108507 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.812678422 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.839312891 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.705563533 seconds)
    (40/309) benchmarking ("sort", Bool, false)...
    done (took 1.926010219 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.965755924 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.952039546 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.708199025 seconds)
    (44/309) benchmarking ("sort", Int64, false)...
    done (took 5.373207379 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.520289917 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.729521504 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.864811415 seconds)
    (48/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.828618024 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.012848342 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.962550487 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.706964792 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.273598039 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.695578298 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.230583227 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.739606331 seconds)
    (56/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.955337189 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.810352243 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.428795668 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.045816467 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.815804038 seconds)
    (61/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.872671861 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.717252332 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.799262028 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.307827768 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.85908203 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.923219076 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.736459389 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.032341821 seconds)
    (69/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.708144262 seconds)
    (70/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.131030534 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 6.742775015 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.818568771 seconds)
    (73/309) benchmarking ("sort", Float64, false)...
    done (took 5.517613879 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.799693775 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.706471817 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.875923678 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.708912268 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.929958998 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.792634233 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.141289052 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.197742449 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.730265447 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.401352719 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.692788196 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.739887643 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.963538299 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.961552704 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.905344429 seconds)
    (89/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.105767837 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.743364083 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.762351286 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.70341476 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85473054 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.719828144 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.124525251 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.061577803 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.01901698 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741730764 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.947992572 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.011903652 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.694173917 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.407035399 seconds)
    (103/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.23504102 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.71513261 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.83482812 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.83014293 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.812244736 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.00853194 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.721219472 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.19747142 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.868020329 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.759850447 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.110347959 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.723375293 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.161972096 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.720659283 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.783239133 seconds)
    (118/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.749843824 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.243308154 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.723184478 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 6.182962303 seconds)
    (122/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.821317958 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.901684224 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.133286961 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.001718531 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.722888353 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.278872937 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.637498464 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.954922712 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.757155267 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.835624486 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.235203986 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.853840469 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.723276579 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.724058293 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.919438497 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.722168699 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.725435807 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.981859603 seconds)
    (140/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.709420026 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.83073375 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.798505368 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.184469043 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.75375137 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.633142264 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.560833878 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.980503053 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.784135897 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.391753188 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.734417347 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198386143 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.713188517 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.376873448 seconds)
    (154/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.997517211 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.711875174 seconds)
    (156/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.955388686 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.834218105 seconds)
    (158/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.792006641 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.713844674 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.871557837 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.153841011 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.717230905 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139333646 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.748720743 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.440275313 seconds)
    (166/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.722649477 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.44982671 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.042877447 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.729169655 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.864417411 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.549288809 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.446668843 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.785002284 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.808294511 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.539682674 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.887290424 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.8458177 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.807713557 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.016979833 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.866250355 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.886273663 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177736639 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.873669738 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.738026163 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958454498 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.726623199 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.99865183 seconds)
    (188/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.847978138 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.0086954 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.739420347 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.725921173 seconds)
    (192/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.155467348 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.796423014 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.729100421 seconds)
    (195/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.117204349 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.861804491 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.717783787 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195562291 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.732716541 seconds)
    (200/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.770201045 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.828419977 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.797916511 seconds)
    (203/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.808221045 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.710824803 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.18347892 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.95065202 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.963612025 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.389441449 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.839322775 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.725704046 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.746242201 seconds)
    (212/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.806123601 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.644102447 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.380133326 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.930947184 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.728435627 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154443224 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.838005751 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.905915908 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.726451049 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.827880222 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.759201696 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.726777045 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.743569008 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.819921661 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.881264759 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.756852103 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.9624682 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.824055564 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.744455136 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.735099301 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.854871461 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.92002223 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.743323387 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.093118989 seconds)
    (236/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.73063847 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.088533048 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.138377545 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.011449148 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.893338341 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.98693396 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.757268031 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.927615414 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.812244103 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.711629455 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.864160053 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.404906679 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.832434723 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.282965033 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.849845037 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.753689989 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.070271421 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.82317839 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.713699049 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.35722224 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.390017779 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.732297216 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.008811063 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.140561869 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.449073802 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.973437008 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.73237888 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.812992645 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.118560069 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.901901645 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.697531546 seconds)
    (267/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.795155192 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.777844663 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.087986505 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.8211295 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.754235474 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.753414649 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.891393292 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.228212234 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.117751754 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.75395547 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.838399281 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.916140458 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.029817539 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.748899433 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.747814206 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.669112215 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.166856543 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.730332464 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.463179195 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.785421624 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.693389906 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.899032954 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.153959767 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.523885167 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.863774903 seconds)
    (292/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.928496125 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.806862411 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.741801255 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.888411368 seconds)
    (296/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.796196958 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.66485865 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.827855832 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.761481644 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.760647127 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.716234639 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.930690738 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.291919225 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.735338603 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.756194661 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.729982538 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.373953832 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.911842918 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.078568752 seconds)
  done (took 965.573505467 seconds)
done (took 967.272977932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.764011661 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75601423 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.740711574 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.763767927 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.850918207 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.76784461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.752180534 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.742643671 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.787846873 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.790784325 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.73784966 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.768921589 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.741630087 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.739784754 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.739524757 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753998615 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.063055992 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.768106335 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.757433378 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.750468398 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.759337834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.738190462 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.791560225 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.767691095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.746181197 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.744073165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.743631485 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.760176747 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.852441235 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.742520089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.744510137 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.753464567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.060416539 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.768199029 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.737856646 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.761173547 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.753785323 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.752449537 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.745768636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.77383002 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.14596633 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.776468806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.743116591 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.742593682 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.742975471 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.746670935 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.742116007 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.748047557 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755610298 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.756810022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.139082022 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.795831791 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.745055049 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.744900457 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.757436727 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.743253428 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.748184068 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758039461 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.762351655 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758712456 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.04320366 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.77381864 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.744522205 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.761070467 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.749840041 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.172893393 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.775095427 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.747455606 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.147129619 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.785367995 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.173906957 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.788907338 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.744896306 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.758192209 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.77456024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.062228701 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.768893378 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.743776618 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.752758212 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.739744221 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.755978622 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756776072 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.749065409 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.743996332 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759855338 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.770953262 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.753830286 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.746503448 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.753987936 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.765057609 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.751546866 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.754078229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.748436513 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.740520888 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.754976415 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.750080406 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.747961623 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.748467186 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.752491753 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.757143989 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.146342089 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79981756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.743559142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.742805081 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.747606456 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.75937474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.149144223 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.781244588 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.768169831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.794330706 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.749762907 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.044570102 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.775471513 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76157625 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.756488908 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.749420233 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.742953926 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.04550015 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.16684893 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.79965328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.750693126 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.742104013 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762414057 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.751785976 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.742733473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.065723828 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.775852159 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760202729 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.869109274 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.759130651 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.778409123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.742869394 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.750599295 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.778577264 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763658559 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.77898702 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.750923208 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.767388468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.76372982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.744879041 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.758899084 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.758602709 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.74825413 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.752980128 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.742382871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.778843509 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.760304414 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.760478503 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.768831472 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.867607784 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.745708432 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.048645406 seconds)
done (took 274.732756659 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.817697712 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.739185498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841392961 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.745769249 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.830131541 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.829130177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.743081182 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.740981325 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.742761805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.117149022 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.742881658 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.752835341 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.738258142 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.746504898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.825692375 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.745733608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.742258161 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.079055383 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.746872289 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.817738366 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.742294477 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.742923169 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.746467097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.12062789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.748124561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.746585977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.816358385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.746373323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.085663304 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.738116989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.744336003 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.086272075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.837240966 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.764356051 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.754968526 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.752503315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.830241024 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.750571728 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.827242248 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.82828162 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.844677667 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.787133898 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.741895439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.739370538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.75042189 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.748605835 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.744546242 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.775173727 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.739518159 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.744609447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.081276488 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.756901702 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.753281055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.74587475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.745625917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.770646683 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.74530553 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.748654433 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.838813711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.748330423 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.807625911 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.124249884 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.118576638 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.750697059 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.746456427 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.745329811 seconds)
  done (took 175.997023616 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.813472342 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.825740661 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.814881626 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.752588835 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.798175628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.815615883 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.753782739 seconds)
  done (took 14.237501467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.75430497 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.748117791 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.801793092 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.798045308 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.749531473 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.900661005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.749111369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.758883758 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.746737478 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.799898885 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.749113687 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751314646 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.755469653 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.745418499 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.799872647 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.759076135 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.866134019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751613515 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.751712427 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.898994021 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.745909526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.754566749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.782641108 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.760542472 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.749613948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.756518875 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.342722356 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75249555 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.746295172 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.748732272 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746606217 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.789936331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.75006651 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.74883485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747996624 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862064353 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.751421223 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747751458 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.750325906 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.750347874 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.749164267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.748370047 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.74972504 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.746593881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.751034273 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.772351174 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.748822189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.749807404 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.749597962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.750149735 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.789390049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.750352396 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.748467386 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.748824591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.803354965 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757217001 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.752372568 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.747150773 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.750231523 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.747962108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901255679 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.806192747 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.75000648 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800323374 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.751583464 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751194335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.750144197 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.754409461 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846174665 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.751467286 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.802448585 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.749596326 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.909017538 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.773974759 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.753294653 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.753538005 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.754032813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.751524054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.754333516 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.757782412 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.749727749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.753038105 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.756905345 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.749884407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.749401093 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864419748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856481895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.750387267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.765695505 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.759570791 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.748972709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.786095472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.75621315 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.747900687 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808715607 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.866786162 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.805736779 seconds)
  done (took 194.092875156 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.756594108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.759042836 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.752648624 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.768709457 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.752254203 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.752400515 seconds)
  done (took 12.206846422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.754454208 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.753806005 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.752048085 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.753315712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75713831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.753036934 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.754077695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.75297731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.75879614 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.753381357 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.75958276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.754576548 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.754949938 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.755043815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.756565864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.75375987 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.758183303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.750821154 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.752367601 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.754152491 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.912183332 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.759643544 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.754468465 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.754576623 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.758728127 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.753942887 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768404376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.752219813 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.753614564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.76359209 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760392795 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.75451352 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.759263598 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761507479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.760042178 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.755819928 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75795199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.756704843 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.752822515 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.754034518 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.756332317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.754897811 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.755221056 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.756339043 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.760345108 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.759273559 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.760390436 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.762204128 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.756367931 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.760902937 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.757747584 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.755715145 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.758908603 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.755079779 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.758008292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766459351 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.761839114 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.756317058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.756534256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.756054334 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.756109596 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.760683006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.763483707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.765059646 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.759893914 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.760229208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.762960144 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762625586 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759590602 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.761762435 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.762342075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.758245302 seconds)
  done (took 129.363781102 seconds)
done (took 527.573804524 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.901458144 seconds)
  done (took 8.572625198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.871596523 seconds)
  done (took 8.590122593 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.225060502 seconds)
  done (took 9.900164512 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.780725602 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.753745393 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.766293735 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.752506656 seconds)
  done (took 28.750210247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.931249387 seconds)
  done (took 8.602652531 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.780427325 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.751292495 seconds)
  done (took 15.242949594 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.827340059 seconds)
  done (took 8.500665804 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.859818308 seconds)
  done (took 8.555431283 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.77446721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.791055534 seconds)
  done (took 15.250858869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.737576808 seconds)
  done (took 8.406505692 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.428412767 seconds)
  done (took 11.196971522 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.767173759 seconds)
  done (took 8.546705715 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.808836327 seconds)
  done (took 8.479511906 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.811196227 seconds)
  done (took 8.481506238 seconds)
done (took 158.749973511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.756115257 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.753086033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.753888751 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.754651183 seconds)
  done (took 28.68785744 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.7915432 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.788883249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.792559568 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.802347326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.796077116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.795080747 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.7829519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.784526333 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.803970231 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.793781191 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.794549926 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.795770805 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.794184044 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.781375774 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.791623225 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.791665991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.802479959 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.790930978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.786359975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.7929771 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.759376599 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.805254878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.797414447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.759900967 seconds)
  done (took 44.648237979 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.954608078 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.828492666 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917110083 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.811464584 seconds)
  done (took 9.181597713 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.811805916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.811959075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.823758554 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.86658736 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.885114384 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.821705816 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.782568198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.786147697 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.770705559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.812217274 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88699876 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.807541544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.896268535 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.759684153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.941700074 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.761281526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.76143428 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81075901 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.862887233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881462903 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.756480509 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.810355375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.815431804 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.806942697 seconds)
  done (took 45.401390533 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.761495838 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.766364466 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.7637825 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.759660234 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.760064625 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.762832633 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.767953904 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.760707375 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.781889219 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.761416175 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.760037146 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.764040366 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.75842067 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.758689785 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.758067441 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.773061672 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.772777967 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.758183351 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.764103903 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.768379261 seconds)
  done (took 36.953354582 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.754869944 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.607823517 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.105827412 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.013602258 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.757018483 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.756595591 seconds)
  done (took 30.670243911 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.773272363 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.767654956 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.761521297 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817883957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.895787786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.765259601 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.759559159 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.773587701 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.808704527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.824352389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.784013493 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.793678103 seconds)
  done (took 23.198969378 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.761042963 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.766956009 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.756836375 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.78329413 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.772368463 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.769403163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.768113489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.758960828 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.77303605 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.78117621 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.768547907 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772775929 seconds)
  done (took 42.914423727 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845710075 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64445985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422363299 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486719507 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293120285 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966476955 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285513292 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934193974 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.762357473 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030926902 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384776871 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008864938 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013119856 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75914833 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.833112792 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.242347711 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058656346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004187951 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788094679 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507242295 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883087372 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323637635 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.5219292 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891853466 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966285179 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.888949321 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.018293431 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.715403658 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900086455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795102043 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768870251 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.759682892 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032321548 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978814357 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888561403 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768613356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418226652 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.47445279 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.751914362 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.494916777 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499311463 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898340363 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767912719 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758822703 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692470854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287821116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94965578 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.763866287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.461204473 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.759535637 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769255378 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849081277 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.763260673 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.573080205 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714093684 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036376519 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.756554168 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766417601 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337053619 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878379264 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387677469 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.700369803 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.854270499 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526281035 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242574855 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.916589293 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.763581803 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7630946 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693361428 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.494481314 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889373416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902497075 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.776002005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40911832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072542459 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.457232507 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848780068 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066939481 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.55905353 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.69940151 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986215772 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.714985973 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695389212 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.597678725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.691317571 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039459483 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800981033 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.433618586 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80603969 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935708004 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77095574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782158546 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767857163 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984014881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.643844784 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762397767 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.344432746 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050270506 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779583955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940261126 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693963188 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.761805888 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017245237 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.970877246 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.011064002 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.235195695 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930331815 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763388461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.847834964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.678167165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778073952 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.053228173 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831028966 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884499608 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900874769 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.721948264 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072945831 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792712677 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.934154015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.408643275 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033687377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.102924039 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017300411 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845033953 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769391794 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.762973002 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546528761 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392671386 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.987047106 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.763767182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256788346 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777813754 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.766069942 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698883599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.422515986 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405825113 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.879725868 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987973419 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.710835313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042217518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696570638 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907589674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.872656753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.982499152 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.421864111 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.849536152 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023091119 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267773658 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.004876729 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779085745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783860192 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867183022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785923884 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.187314141 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024156777 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.766927606 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.769540176 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.548231419 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.842769696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770937923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.771434007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563408008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052605086 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.796326059 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768668084 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69918007 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.777899274 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850208584 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76910024 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779110569 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.291740704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518625419 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.77816222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.457557863 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002739008 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776888442 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.560238055 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960499645 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.856344056 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051251247 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835346141 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.699048145 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.471961245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.470611412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766732473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701388908 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.767247493 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775596058 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779470167 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.98838753 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069491478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818154366 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.492730031 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.888305852 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77799901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.773316972 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767389974 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.267139717 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891382896 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408084593 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.779997086 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9026632 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.780577104 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70075871 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.769997459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772518353 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.76790332 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.722219265 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820410569 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.542674988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114104527 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026115768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.418574518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78488829 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.512260445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.904788342 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.789466837 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.364311215 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875980182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.775975745 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836020836 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.777111506 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.551040836 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.554113405 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345949617 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089015709 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106556544 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239904582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.271640259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.99406122 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949323951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001134188 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295104462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828704349 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9477279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714793968 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859167718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.425403666 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129027018 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781480011 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995219127 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18026121 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.439793308 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937459844 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982158982 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8027544 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.702620224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696716048 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.291540195 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925504766 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.408628387 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000406879 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946311587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.364892008 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.894417642 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.768472098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2533464 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863969157 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.479664273 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129803225 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317473773 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.430408391 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158811335 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775518546 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.21728682 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141364955 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.09931157 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86875811 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703619683 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.779934655 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781304095 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.770783277 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.747930124 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.707598446 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.054257627 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780458788 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00388188 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.052112957 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058105622 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.68350313 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.776534712 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772119458 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079768062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.514883165 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014310762 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.112414572 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.345685609 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779949609 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708047194 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705279988 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.472725439 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77427154 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747663984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004112083 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.881466404 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727030427 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.165822347 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086613363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025345324 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.785615364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059486873 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055533438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.505890712 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802905582 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.871739557 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.384457979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.488629343 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.99211946 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006827553 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571824932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00051514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439467607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.757480702 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.771667289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988579258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994848555 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.442014418 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03577251 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.49767223 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.790372822 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143742662 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840608055 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.435986572 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997187065 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.870133254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78328355 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85538006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783906991 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.785065646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78608652 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822259852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.443931359 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917771933 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.790034656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865186833 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914352407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.363879158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.782022097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064480429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141541084 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131043135 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842720203 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.774683949 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782747604 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709699649 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912284513 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.219705527 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04956178 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906409051 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.913098491 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800528059 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382011654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.077215274 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089984653 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048815212 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.668050368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776141744 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.862350968 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.999395927 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784066942 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.986858767 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017559098 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110361029 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248730421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.910917314 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061242878 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049599792 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144472881 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777374356 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369086892 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.791240542 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308167055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.827314256 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455114815 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073878899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791436943 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003203404 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796373481 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.978326688 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.232175886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565251855 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148498392 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.782609407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841491566 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067925368 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198990923 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101817413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85635421 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787463323 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.474434524 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916480218 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.755611613 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.04727323 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779944629 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989297807 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.490096661 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78974569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079694865 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096637406 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.776101842 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.777499528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835937308 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.789167891 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999630666 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056390608 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032489162 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789471118 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783406194 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.599295024 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074670495 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848058255 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712352582 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.781455133 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881299326 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026868583 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800827442 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295670014 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.489142557 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093871121 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70155543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801732769 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.202189125 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238111699 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133892078 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.308516955 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02575211 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.339716411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.622940591 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154045254 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.786242447 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.177605975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158954974 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.784410285 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296281459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892439345 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.062549288 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11118979 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.794681716 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606732945 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.83060819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006070122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376592637 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720151689 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778334265 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841798283 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.781518471 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.911748776 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790354208 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.786377253 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.649779614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.618868092 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272286614 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.785197115 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.796415736 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.329565153 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344465673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888093816 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938085856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793416155 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.497518653 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.071182741 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035279856 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28998687 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.857068858 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.786138336 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784818308 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711240268 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977808141 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.000728295 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089281382 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.124183618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892386303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785428495 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.99492891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991167916 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.391886262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946617775 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.164371773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894259162 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.710197516 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492851486 seconds)
  done (took 1632.290050009 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.790774434 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.8059512 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.787698518 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.794160735 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.808300767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.810933711 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.852191469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.788492441 seconds)
  done (took 56.137342274 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.78818961 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.963269696 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.796906697 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.787296754 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.802535132 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.787240889 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.988114572 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.793927255 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.811525634 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.796544879 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.78619427 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.782204558 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.129570086 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.811474836 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.790443217 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.78086798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.268438117 seconds)
  done (took 73.377602918 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.790001022 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.260042891 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.810199884 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.811412737 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.789489571 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.793581717 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.890764658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.844973616 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.79102367 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.960552548 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123940104 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.808010581 seconds)
  done (took 89.378023026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.80470155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.79713134 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.793193718 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.7964112 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.794283871 seconds)
  done (took 10.699880734 seconds)
done (took 2125.230039622 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.165137903 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.977321586 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.009289324 seconds)
  done (took 5.69054484 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.93513945 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.986248675 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.101270084 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.109046473 seconds)
  done (took 9.841845703 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.072017815 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.167445649 seconds)
  done (took 5.942573498 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.122477722 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.80351002 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.208651939 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.78946388 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.788503805 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.790023488 seconds)
  done (took 22.07729625 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.792407057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.794952694 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.795885364 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.79713986 seconds)
  done (took 8.884878266 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.771305042 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.478286245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.772046634 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.783747214 seconds)
  done (took 20.507759319 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.543970341 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.914371576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.536613586 seconds)
  done (took 8.697954042 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.270955687 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.704918517 seconds)
  done (took 8.680794939 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.951899917 seconds)
  done (took 3.658635525 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.81845922 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.06177429 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.278146396 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.31702443 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377409656 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.629537839 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.106891754 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.015732602 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.233142843 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.247153635 seconds)
  done (took 23.793434241 seconds)
done (took 132.778903138 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.140436239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.814414391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990789418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.156522731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.027878583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.989934171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008465342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.145582221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.83810012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.824897932 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.154565057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.040469709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.952852156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.807305972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.954194002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808192034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.0979348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.164384746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.837770188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.075056429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.017465274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.79786775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.988236018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.810356267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.067691028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942871034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.340127673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.810183463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.974134326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.351491909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.942838692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.216681739 seconds)
  done (took 165.792514208 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.788338547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.788666916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.785191393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.786829439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.326249501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.789707654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.78938959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.786175242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.220059768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.20949947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.788765276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.309620878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.79163094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.784964842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.787395763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.786089532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.367015073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.794089115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.786888415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.787464809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.786040812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.163576819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.78941815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.178591357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.361219445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.78847553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.787514967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.788567747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.788054564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.78589265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.786402923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787277737 seconds)
  done (took 206.753498581 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.788169925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790486369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.790306659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.791205054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.790707818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.789230622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.789848313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.788365176 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.533987493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.527529568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.788801978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.787813053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792098891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.787106941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.788758412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787616423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.788435781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789083305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.789318718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789796468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.791934274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.507031554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.788052596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.51283984 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.789592271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786953785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.786987784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.788508692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793574626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.795044425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.797367598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.788912706 seconds)
  done (took 217.901309691 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.043922535 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.797860809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.798344891 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.72394289 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.796464554 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.797980326 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.7888446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.049451969 seconds)
  done (took 18.518440527 seconds)
done (took 610.677457897 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.284830007 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.11864957 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.974439424 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.825295468 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.05311174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.855704063 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.816266761 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.883641054 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.449371446 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.889036956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.470196404 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.834742995 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.554915305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.842841524 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.94299891 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.87296778 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.393179804 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.487027133 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.997273184 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.88159723 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.988403285 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.754432696 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.901207863 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.480682124 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.573098419 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.820748617 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.892048917 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.402629815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.828864156 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.981920739 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.635711133 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.132096235 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832636027 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.818042471 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.870688497 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.852004275 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.104713799 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.830688504 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.940602942 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.563544625 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.887272096 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.35845161 seconds)
  done (took 99.586177754 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.789666271 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.784650351 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.784733957 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.786833255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.785896743 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.78787712 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.785704504 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.787448625 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.787471652 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.785985216 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.786549624 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.787243351 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.785132409 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.785406322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.785454531 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.785407622 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.78633569 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.787813584 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.784761478 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.785515747 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.787233358 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.786197172 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.801947737 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.786429235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.786988188 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.78630463 seconds)
  done (took 48.18096644 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.799153591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.965613326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.045808903 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.820077204 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.798903772 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.806125627 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819723851 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.8073978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.802621037 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.802834013 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893989996 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.808700786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824033424 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.044588528 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.819173966 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.801640909 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.802564902 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.809333644 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.973103561 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818820106 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.818893944 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.808366478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.828764287 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.814182001 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800513972 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800994673 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.804827254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.264679985 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.816265542 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.893987494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.849203177 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.82296029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.208730104 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.053082226 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.854767706 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.810193019 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.800956293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896538945 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.808242322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.801922966 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81949779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.806260352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.042120126 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.309771955 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.815141444 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.802223476 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.2756035 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.907659927 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.843116094 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812210084 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045135983 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.819211773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.804262991 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.801502537 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.842178114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.8048073 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.798647378 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.150667956 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.813129072 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.81942439 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.8031643 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.7964604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.974745671 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.808251743 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.96017975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.810619513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.800818773 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.79615329 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.035444595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.810384516 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.310505554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.812214314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.793924458 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.8850863 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.963517832 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.303410137 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.804988985 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964911406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.210869365 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.81545843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.807508299 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.240253253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.818775973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.795336407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.792169805 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.796766317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.785083168 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.830801184 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.802858929 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.226315408 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.298982623 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.153761444 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.81313283 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.804855599 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.785451747 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.136409565 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.795519831 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.785030842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.023229849 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.306708615 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.801042934 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.790406415 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.278176233 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.804562743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.80762306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.795509769 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.032893072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.801428461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.826605092 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.7889088 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.790125014 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.787561355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.801827893 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.791538081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.784452441 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.273029547 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.896910363 seconds)
  done (took 223.581929668 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.778994527 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.780379183 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.781532335 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.788489836 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.787200074 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.777384099 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.773454101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.778480388 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.775930591 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.772300799 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.776603137 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.769023241 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.771750247 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.776368536 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.77567983 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.774696929 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.379672251 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.767537933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.77503262 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.760968273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.424852469 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.771650391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.764246898 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.760437621 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.76398507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.762806577 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.76836298 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.776318147 seconds)
  done (took 164.613750753 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.768899538 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.884367742 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.783139233 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.799803564 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.779365572 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.767775457 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.790733573 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.785041745 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.774268696 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.766274448 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.766390424 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.830544789 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.780379379 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.86715776 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.80026092 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.802731164 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.873507362 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.777157774 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.76718899 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.765825596 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.798762345 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.765153319 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.829546984 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898029651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.785277028 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.886206278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.771572065 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.771583105 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.768774978 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.886903944 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.785604086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.830092377 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.800723477 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.793726926 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.892019139 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.886669413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.875148226 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.799926192 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.776028183 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.769234384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.766584242 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.758216296 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.886772277 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.788712046 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.770310966 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.876008824 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.789259209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.770209168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.77692847 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.774860615 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.781275033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.791645032 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.837084152 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.905177358 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.805764039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.797836328 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.792975056 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.065536139 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.784892312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.870801536 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.763391662 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.890506987 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.792806824 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.757475786 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.768822972 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.777732636 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.801740751 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.803126712 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875859825 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.777516812 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.871080499 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.804775414 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.778869307 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.769529699 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.772417585 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.886732619 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.890237662 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.805724758 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.810509747 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.804976526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.766927781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.770826067 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.76137124 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.788547436 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.778467605 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.886448051 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.888265228 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.778429216 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.772756939 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.773471364 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.771964859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.795868474 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.900301008 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.809764065 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.866142335 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840012212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.847183472 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.783886447 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.782302444 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.779758193 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.837052045 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.784421845 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.784153258 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.112853916 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.847011846 seconds)
  done (took 192.0913817 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.251391294 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.826656564 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.829786708 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.097821828 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.127385071 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.688206582 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.820066617 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.823068076 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.847093687 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.009509392 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.889846845 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.840507338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.8088344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.796810389 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.820334579 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.8432429 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.833590996 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.135124742 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.918433801 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.949474259 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.803129141 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.090559631 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.099213497 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.236177559 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.860675527 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.155987003 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.501437517 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971968158 seconds)
  done (took 58.568556572 seconds)
done (took 788.33121007 seconds)
SAVING RESULT...
DONE!
