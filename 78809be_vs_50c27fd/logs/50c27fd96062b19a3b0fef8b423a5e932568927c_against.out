cset: moving following pidspec: 9408
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259208543 seconds)
loading group "string"... done (took 0.469705573 seconds)
loading group "linalg"... done (took 7.653605995 seconds)
loading group "parallel"... done (took 0.173855217 seconds)
loading group "find"... done (took 1.166312244 seconds)
loading group "tuple"... done (took 2.122327409 seconds)
loading group "dates"... done (took 1.346067128 seconds)
loading group "micro"... done (took 0.249812051 seconds)
loading group "io"... done (took 0.666875254 seconds)
loading group "scalar"... done (took 42.259488844 seconds)
loading group "sparse"... done (took 13.113206561 seconds)
loading group "broadcast"... done (took 1.048115599 seconds)
loading group "union"... done (took 14.370360695 seconds)
loading group "simd"... done (took 5.14931617 seconds)
loading group "random"... done (took 9.67833903 seconds)
loading group "problem"... done (took 1.981116728 seconds)
loading group "array"... done (took 22.422636793 seconds)
loading group "misc"... done (took 1.427463643 seconds)
loading group "sort"... done (took 3.584992438 seconds)
loading group "collection"... done (took 19.471142624 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518268067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138128496 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132039738 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147438824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204695032 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143838196 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157284408 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115178202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.94709494 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18265839 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153674778 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493737075 seconds)
done (took 5.077098673 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.2474245 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094505272 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103357649 seconds)
  done (took 0.868189791 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077707227 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145643575 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095186628 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077943234 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094903065 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080362945 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093961774 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076912438 seconds)
  done (took 1.338149373 seconds)
done (took 3.218184844 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.719613902 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281200039 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20224986 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462574681 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180704477 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.235173574 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675365908 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347217077 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254910857 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099622175 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144035186 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391348044 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138461646 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678352916 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089815163 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123989508 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178746693 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455440005 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082027643 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110044072 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116397664 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141614226 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127598845 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090094376 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184700478 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083598166 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194025599 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110246338 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080581112 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290993201 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200927276 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699277332 seconds)
  done (took 10.881460981 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112892532 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13619169 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099434993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140826723 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137528855 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102433115 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086632891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098532913 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123567736 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177861052 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114549514 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138128442 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096610823 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083209372 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11751509 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247923882 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122705475 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106488738 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102148118 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090161783 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140907934 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114250889 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09489248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110317999 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167666448 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206765768 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.125992217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128907324 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097094164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113264213 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142109668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143052055 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095436605 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080205496 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172706571 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125081574 seconds)
  done (took 5.180477088 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187964585 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120023234 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167325569 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162827618 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140070182 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158996906 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112940252 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229277759 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113650818 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165031484 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143500748 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116879563 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081111393 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097711597 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095639836 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628072199 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163779128 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133820962 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098274769 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105010515 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102295883 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370193466 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087682991 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095802046 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081368317 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083327172 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161287242 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082243759 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14018459 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123090757 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099752767 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116470934 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209641564 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127869003 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118211449 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098083245 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079377859 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194979073 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088678524 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096416305 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103169987 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135734418 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134442375 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097316196 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081536849 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205577479 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096193796 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114415248 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.947104934 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181639794 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123591233 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099589931 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330200626 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114026207 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079865796 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094818248 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105357663 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269790404 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184548221 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093938615 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081319246 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097219756 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079755285 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099050965 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381050596 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101686573 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741459215 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084601715 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108397721 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084092795 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100123341 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105501524 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087585845 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115561912 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081323168 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100191433 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080184682 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096638928 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08321458 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109431231 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102061802 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080506744 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163884144 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078814462 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114487133 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127653786 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084986279 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097347608 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115562481 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100064126 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097771291 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116175759 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098896924 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077061767 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109011347 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099696387 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141523976 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082114837 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183460503 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081210188 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128040211 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098941864 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115098916 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115898674 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100150965 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083968283 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095742408 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077432158 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164056936 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080551006 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099612405 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082561505 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09457366 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109893992 seconds)
  done (took 22.627325903 seconds)
done (took 39.36378011 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330779422 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10410866 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102658016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102140786 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08507579 seconds)
  done (took 1.469553484 seconds)
done (took 2.188438972 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283116489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172810407 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094626272 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168512319 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077150193 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193952821 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161183596 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094242156 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200001884 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076534296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181306041 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076634208 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093671123 seconds)
  done (took 2.618223168 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095444242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116886328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083019899 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114134292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078154269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113844094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0948446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118625561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111674866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084859329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094585322 seconds)
  done (took 1.823886537 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093672129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114227494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084023877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112779477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078213045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113088877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094812589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119009929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112126028 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086462584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096192141 seconds)
  done (took 1.822334529 seconds)
done (took 6.977510561 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091822697 seconds)
  done (took 0.805962871 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.008048012 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.042396208 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116542869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.154296198 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330929324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.201903316 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.557605556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12569001 seconds)
  done (took 15.450598131 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115604884 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115498366 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105000895 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083124478 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10146375 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082725175 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101455843 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099329908 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083584736 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102484704 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085875147 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102312859 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098719237 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087020177 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101356057 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084360468 seconds)
  done (took 2.331511125 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119093432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119389835 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104815748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108917144 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087063146 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104606775 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105540127 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088617099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101844356 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104287461 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090629566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106536336 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104628059 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079404507 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107411111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108332589 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08711922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106609701 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107784382 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091273444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107494047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096232422 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087009178 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108110121 seconds)
  done (took 3.258747462 seconds)
done (took 22.566242172 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161086447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109989166 seconds)
  done (took 0.996838343 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095011834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116307705 seconds)
  done (took 0.939841381 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097944972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095611471 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123823667 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111378529 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082389188 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099538894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123597568 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082766075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099294678 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081887478 seconds)
  done (took 1.728657634 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083898337 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112786021 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102635219 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096471496 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107220188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096621122 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088032652 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100581411 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109539972 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077073527 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103401917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114477506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085581744 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116401889 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105082657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085744531 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105225726 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100815841 seconds)
  done (took 2.520734401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08180443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099481254 seconds)
  done (took 0.911940202 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082835413 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096638467 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083499308 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099986778 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09644456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079417151 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097365957 seconds)
  done (took 1.362142207 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481559048 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121764494 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.279041413 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086958334 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123911141 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.323453833 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097993127 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084408424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103307952 seconds)
  done (took 2.468887111 seconds)
done (took 11.658056663 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093740488 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119511543 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116378213 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474301394 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109693871 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10091224 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151273496 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248928394 seconds)
done (took 2.145107443 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15193187 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32726877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117285129 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068755677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098080856 seconds)
  done (took 1.346424098 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082123655 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102599312 seconds)
  done (took 0.922300253 seconds)
done (took 3.168722528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083058656 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0991667 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079454074 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099780497 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079131357 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097809871 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081524863 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099521619 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115854832 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.101341633 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079151515 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09982556 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0996772 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080649553 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095287915 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078922273 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099672921 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079324604 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09652164 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07957684 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097716879 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081280131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097181526 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079380066 seconds)
  done (took 2.951512066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100041493 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099292289 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103795324 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085501943 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102702348 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086264147 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103809664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097364698 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086185946 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099747888 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086005179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100980178 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100821432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084933863 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10119718 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102997432 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0873454 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100635483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083917179 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103069092 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105493934 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082495637 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103721108 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087886224 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104122768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104018599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084536577 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099899521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087409838 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104212881 seconds)
  done (took 3.623337191 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085733601 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097076734 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079719514 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105158203 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079684549 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100142006 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078649944 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098106214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080837034 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097352764 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081586668 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097308029 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080859491 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099583608 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081377436 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100979542 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111198471 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079608564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097353529 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079898412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101923417 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079795243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097862995 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079888917 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097862811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079645759 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098885861 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080484285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099159023 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080331586 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101233499 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084150714 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097965077 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084832957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100476186 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078156812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100826863 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079348652 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098626989 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079903491 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097434324 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080125433 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097734789 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086750447 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0980156 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09952608 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080261715 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098883455 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079968364 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101411326 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079082745 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098313549 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081807677 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098790793 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084015662 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097178869 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080839092 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096933319 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080924744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098048958 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080132304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097019616 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082932944 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097609424 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113215335 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086929132 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097856134 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081663633 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099645529 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082128623 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100520716 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094805755 seconds)
  done (took 7.291144262 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084446684 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108134336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082389436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099876403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078267304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09941644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101588563 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080597785 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100501993 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087507022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098289093 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082065653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099229539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092789991 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099381797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099729484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087121282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096256975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080476313 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102320226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082475035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101651274 seconds)
  done (took 2.797281849 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211618282 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105225875 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143316906 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108003418 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085181847 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108885457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104686303 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088017349 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10598989 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085851762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104131088 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105404261 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08634605 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10346677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086209976 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104188842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106150626 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087143278 seconds)
  done (took 2.67854238 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093761705 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.1022982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104934977 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100876174 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101973833 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085069456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108357122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112007499 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085610746 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101173728 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093485044 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103134763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103750498 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083637584 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103852877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083241255 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103867797 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08355982 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110438352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108690607 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0886868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110032347 seconds)
  done (took 2.921171602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096513835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10337463 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122383714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085755479 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098184689 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081269634 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10846473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083381161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109647569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100729581 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080562026 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09794289 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088145646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099573231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103447555 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081298195 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100894679 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082705783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101479096 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077729626 seconds)
  done (took 2.656772413 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103702775 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102014039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102295823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092638315 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100687582 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082884991 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110564371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100279433 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083821491 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126656323 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101716051 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083354879 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112552783 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106781484 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082640019 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109351099 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110436929 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110399569 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082817564 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10003188 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126269001 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192489933 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109300025 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100427547 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083561489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101242713 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082461989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10647972 seconds)
  done (took 3.665281349 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082043352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101617559 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081670371 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09927428 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080093488 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099441536 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080280442 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099650418 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083409791 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099398722 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08286572 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101714981 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083142183 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100977777 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083735657 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101021016 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086751244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098941949 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081017502 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099276284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083777802 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102067647 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082975346 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099182402 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081195572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10126539 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080755479 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09905342 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083198603 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098721787 seconds)
  done (took 3.495270739 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090753536 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107772504 seconds)
  done (took 0.952417952 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078776475 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115608008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080392372 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105002583 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08688335 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099516532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107850598 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087153618 seconds)
  done (took 1.516240165 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097339183 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113535031 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083647686 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113134372 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110286744 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09460746 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16014416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101221342 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087793467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098115236 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095534728 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09874475 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105615172 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081841832 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104891235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088701559 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097606774 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088381156 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10190755 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080167229 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101037173 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111462812 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084575749 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097810832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082966005 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110117012 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109030376 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082842933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103548796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09120008 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105599559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076373536 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099498712 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1009838 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080000581 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110100059 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094249248 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10377932 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108846894 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083718517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112561857 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077412686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105175646 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105932228 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093232213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100948045 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083149173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095858789 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080654265 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106700154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080110549 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102858784 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078581259 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109510224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107163308 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09828524 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101738981 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085607392 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105906032 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086648487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109701945 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104973962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086287646 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103071596 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091768644 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106718925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09186185 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097757088 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078337821 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100968651 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111829801 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106955925 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111000262 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104262627 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085946984 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100680058 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088580469 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104253884 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09199837 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111778831 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103805626 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092592143 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111186536 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085309789 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105374643 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111343276 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081962075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105765166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083269466 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118768739 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101592343 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080075202 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098043076 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090954008 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104654172 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081845644 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099086556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092861935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09471361 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083413675 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101232892 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100969604 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091023314 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106078091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106707974 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090614849 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108623984 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082286167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103501341 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079103934 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101717924 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084904076 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107642032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076348055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103728941 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101998136 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083633448 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108105449 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080066457 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100834008 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108541914 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089657197 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099097516 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078578872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102973486 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082838286 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104793352 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089983185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09831356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095203603 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078692818 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107367813 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085458624 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106761988 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089755119 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105779342 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097025877 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08194051 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108716796 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091139872 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103650471 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084664182 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107757717 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10406264 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082899732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10856456 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085848115 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103241998 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089088153 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105019078 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080592152 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107700416 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106840757 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083525031 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107341656 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08996083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105849773 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086232173 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10099807 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106163912 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084455259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100817896 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082899744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100443276 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09257913 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104464155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07869194 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097902596 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107857387 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079610834 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100935894 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081735246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103036894 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083980573 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098945382 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082133969 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101517194 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112659831 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087526047 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102283484 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088185837 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10977847 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100813678 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083793796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100412974 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084179112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101893567 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090047125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106464522 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107083792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084791702 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097318822 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088236361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108056378 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08193165 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099332592 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099763489 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087076209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10843813 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086320177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101452949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080907417 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101176146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10557966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085894504 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101197931 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08241788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10571148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081726676 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108791146 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10202406 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092276887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104290198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078103684 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104688429 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099463855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088856733 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097061881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080447285 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100003536 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084144921 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099759196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085491867 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096005726 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090182998 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108783697 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100906119 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082022643 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101842803 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091191507 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102587562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086290553 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105012151 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105969503 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096174803 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100545199 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086149654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.1104426 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083620241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095146057 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107387413 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081213969 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100662578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082622997 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099624406 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086295532 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110526902 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105739761 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076351923 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103644444 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081626355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100415815 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079530378 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107899437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086883904 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102243802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110046961 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08392622 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102673056 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086952228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10085979 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084217365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102266076 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104680694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083945691 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104452436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0824713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10413604 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083435862 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099421622 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084699098 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102657818 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08312814 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10708272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104408006 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083640166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104464908 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084281284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103122901 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083583277 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101176001 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085978852 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102523531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101947979 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08553636 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096908077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091296577 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101706242 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090632071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10139477 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080468273 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107968289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104135942 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090172549 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10314788 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083553987 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102854818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082624294 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104425764 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110487814 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080755257 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111092142 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089734122 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1022804 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104238329 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083429703 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103991917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081958716 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.1033677 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083711876 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102588308 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082937652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107053091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085486102 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101847074 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102711778 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084920973 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102998517 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084594735 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096136033 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081987488 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101140436 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083885217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109308871 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10313376 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087247546 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100382387 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085697614 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100962292 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081068019 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110003681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112781943 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084910982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111626069 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082623693 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103745721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111430258 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077386105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100556781 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082105431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100190879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091375475 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102377915 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091556588 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101592435 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082105322 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099416153 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103876673 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082385341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096202738 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08153914 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105371214 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085923034 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101306481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083947745 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105345383 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084365179 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109005305 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1009403 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084868095 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102852248 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080956458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100483638 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081935521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105382408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084084623 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099760109 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080578316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102477998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111149205 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084462841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102319671 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085735111 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109589909 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084028282 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105524627 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087436204 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097220693 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105088281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083121135 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101722753 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082512823 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105883331 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086801758 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103865987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109402821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083376137 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102548668 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084206275 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100361363 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083922178 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102486032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08474188 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101528631 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084563885 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110450935 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100376898 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086257528 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10233049 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084021471 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106791928 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084513392 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103638961 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110399303 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086538257 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103891959 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090507148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106743004 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086653055 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103573114 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10376472 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089523421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101500096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09224145 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103167658 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084792616 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103467747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081647824 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10269925 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102796813 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083217865 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107044509 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085038562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102360779 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082426849 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100954969 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085016657 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106233494 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109496932 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086165128 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105361321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079586038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098896894 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084877126 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100128912 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084731339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105317555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108894086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085916938 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102609044 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082571224 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109639327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090072696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107960774 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100765961 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088518447 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104950215 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086776588 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103643249 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084207445 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104549457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107443743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086016369 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102397362 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092425631 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107437684 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084938237 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104423092 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084438638 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102744416 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097500815 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085061085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105247429 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090968811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10496605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083641707 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112072932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083248068 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102648354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107895062 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083538831 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108374594 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079041173 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102970824 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085307466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104798201 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097884157 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082982421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100537532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085989267 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102263099 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079112016 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112245414 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090595193 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104174124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101854133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083083572 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09770558 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079960123 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101205834 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085519349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104255759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093290032 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10203621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082812386 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098666493 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102740352 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087589493 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105856526 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081490044 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098129808 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082553431 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104890957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090391631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101529678 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084233751 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10663482 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105064775 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082241399 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107207104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080981121 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107702766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093772358 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104835862 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10366367 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088455494 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111267456 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086203318 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09914186 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084349873 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105399032 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103386942 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086028576 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104521799 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09811066 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106847294 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083605719 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102742264 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105563987 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083734602 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110835959 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085207408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103782222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088578972 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104377092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111932881 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08616769 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108661238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087397094 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105473881 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082941317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103186603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100678055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082117307 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104626827 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086022173 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109999097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091268236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103310523 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112075999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092765561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107665272 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081065601 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103086134 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083627588 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099647667 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085667584 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102243835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101489733 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082514707 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10209898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085101986 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108492308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08586322 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105070693 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084357805 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098439594 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085728287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105930442 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104217494 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081915721 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103501405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085534259 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108954954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09118465 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104849127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085785344 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104447459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103552737 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080808068 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110256343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083272376 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106076993 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08384725 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103845244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085850378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106896334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109113181 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085346719 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106006833 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096645181 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106728879 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081516159 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100601129 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108818559 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082523275 seconds)
  done (took 58.028231655 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147402918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081262587 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098732095 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080048431 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113311572 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099886813 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079949776 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100101571 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08123078 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10333861 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079476881 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098464027 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10962186 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106709477 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113303148 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103949426 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079580877 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100418569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079713417 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100470028 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110325449 seconds)
  done (took 2.876061606 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104860114 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117305481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114918768 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120634778 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090099601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114821189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114747235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095900109 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120994713 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110313865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118812538 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095612469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111274025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111232141 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110225481 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093019718 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119700126 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110512449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097425121 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114180696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113041598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115074552 seconds)
  done (took 3.222310019 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084504014 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102606783 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084754443 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099118116 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083206929 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097630569 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088236011 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101146405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087751963 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103008809 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082101624 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102283767 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084997622 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.098649998 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102797475 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082299335 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156813641 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108036391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082879496 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105656945 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078804685 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105948635 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078606361 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.100792468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102406175 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088970908 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1041773 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081796982 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103761284 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082541998 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102716371 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081491865 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104368405 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085101434 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.102061546 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082908213 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103711629 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10285138 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079806658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100886225 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084059704 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099245978 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084395938 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104209633 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082161115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101078633 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086729063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103550352 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079334569 seconds)
  done (took 5.447864323 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106192641 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162483288 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086580957 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143890963 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122062477 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114208677 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088306068 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143761093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102814723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083965152 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124453597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119987021 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104235879 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09000005 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110418839 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103452165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087230594 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103894296 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088661967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103741602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108405413 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091815992 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118441414 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1183718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108705276 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083370414 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103116514 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088844414 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118519274 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109041352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110239042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090663686 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120373019 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109522923 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084341196 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106944571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122962222 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085231664 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106726263 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101528741 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087502891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109176808 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090253735 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122732553 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105313708 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109206095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084681989 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100760912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117660984 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087189043 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113288819 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119360131 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088527452 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104749776 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110185736 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099669569 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105106938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10216117 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088233257 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117372771 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100843772 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09039904 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119794626 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106272848 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092685561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119795128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108851181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089214908 seconds)
  done (took 8.123313001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093892555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110864657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121170567 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121580683 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091908311 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1115128 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111498955 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091312545 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110677967 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117064656 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111048366 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13422184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086508247 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11481085 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110712116 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09193142 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112718159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111820955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092730245 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111736794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111817718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120568027 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091973996 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122338871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143510397 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105962521 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092172051 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111092225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122384449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112049937 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103987202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112191984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111757691 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121080779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124620779 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092831272 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102934405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091093451 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111423905 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11137549 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085916665 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122925243 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11166344 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105186358 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091576511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111478092 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122128721 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124310754 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096394987 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118184191 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111933709 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122520434 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092136797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112159481 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121831656 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149297721 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121548569 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121454888 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092974276 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121914592 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121115895 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130345933 seconds)
  done (took 7.713977252 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108312466 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11533072 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118760034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101061838 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084348565 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109551059 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082913948 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103145432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093986073 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115338269 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117795115 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110122361 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093553535 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118505115 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109641771 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113874576 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08980346 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10980537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115636608 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090931626 seconds)
  done (took 2.928123223 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094039952 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124009506 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085597958 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112776074 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108809268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092185143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107228536 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107309267 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08689836 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107655126 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097047719 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117963208 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106260731 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092400068 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118288491 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112435371 seconds)
  done (took 2.502506934 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09735554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122123282 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120523482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085307752 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103687536 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081445198 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106132146 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10160906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081778495 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122276937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085476425 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109328434 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105850171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083592419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102326032 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088831523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10109483 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083475544 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105939281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123011826 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096700738 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104828312 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086312917 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109577622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106100778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091067198 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106521785 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082300217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104802071 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105490233 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08644315 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112822204 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082383318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104104516 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103147446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083661466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105071307 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086894288 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109290833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085936861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104549259 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105025422 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086396947 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107067218 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081749508 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106214902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081845748 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111882055 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103507772 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086345559 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10537872 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08764069 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106771692 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116113376 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090536155 seconds)
  done (took 6.275011868 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100918172 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109300042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081259586 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103573585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088345489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108667627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108245466 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089196046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107883887 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083256801 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107324647 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090427064 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108227444 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109866831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087866972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109478979 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081387067 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107384607 seconds)
  done (took 2.620063512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090998894 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105403799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092496242 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106110788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08588516 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108847706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080831978 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104581142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083061257 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106743012 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105800061 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08934236 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104079597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087456884 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106170489 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085742404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108550166 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083449805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106518312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101878513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088612682 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104824882 seconds)
  done (took 2.973281666 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120297438 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125364267 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093153586 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229962302 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10470598 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133943876 seconds)
  done (took 1.642660718 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110606423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121859574 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106748486 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107981076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116805806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087193858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108002212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107860979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118882384 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103107775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108521302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119553203 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120075704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098285954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11671459 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115422164 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088282608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108173893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106181516 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129481093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088228316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117999281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108241512 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088544039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109280724 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11888758 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118354113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102761903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108811425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118700691 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115180865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088760596 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118595735 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123514616 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089212033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118435034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108698096 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129955122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095220039 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119097639 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109643317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09528233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120077023 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115047512 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119628151 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087937466 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113584974 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108305151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087779871 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13567784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115030767 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118303025 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115967029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097850969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119015689 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136007163 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123792751 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118865471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115964262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102595803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119264273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116491218 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119177095 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123536467 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095589725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118827022 seconds)
  done (took 8.168069006 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103668873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125615596 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109626018 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103362268 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098744185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108569599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108375948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088809001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109811591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087800219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152838784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108962414 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118397562 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118890497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088816941 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108595367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109071535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119293047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088159728 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137080031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107975507 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118470073 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098524416 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118828073 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123863005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115729328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088634958 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10968689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108889539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087917921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115318275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108386335 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119218623 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087503431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118505047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108591326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088747114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114795067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108778134 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094485751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119187488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130546745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108855659 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087899008 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12339822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109580913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108408055 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08808263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109485788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087897458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12449698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124725505 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124976479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119540716 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088330377 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109953651 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109614211 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088481452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10913096 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116755753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117902958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089328115 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136730884 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109745912 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10882703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098731021 seconds)
  done (took 8.046708699 seconds)
done (took 155.8489123 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099431774 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138302444 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096223892 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169372951 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106462349 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119914861 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139446563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097574595 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107345104 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086893078 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10668322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087884829 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172298259 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085967854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107129873 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108276641 seconds)
  done (took 2.663542804 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20072449 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256478366 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103316749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106915593 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089150311 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110687388 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105509302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092263813 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110332345 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085521432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10926863 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087158417 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106382203 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086499887 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110939578 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088016804 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107122483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088218595 seconds)
  done (took 2.892815546 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114927211 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150692199 seconds)
  done (took 1.119894506 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119961899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181988828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296466963 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156750122 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119942212 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1279582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157129378 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130676844 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19854244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123563039 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123063104 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097565812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141293991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115844158 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094604072 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1186015 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142958207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093280886 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115733611 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117544612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117958429 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106244478 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095109008 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115460258 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182182876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120083188 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086492075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106180846 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095612138 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116949109 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113367413 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104681335 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121169366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156264117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124160677 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158493526 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119429127 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111361875 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09567166 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112873092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119896451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099294071 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125962644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118954527 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088884502 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11906619 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085417481 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106545817 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114278769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100238089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115044035 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092370888 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177015465 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097733993 seconds)
  done (took 7.542560717 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799680906 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165669853 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089685955 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891241017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138749333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104456743 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787408315 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109417638 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257003448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759737437 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131454163 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100154487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233652276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257568626 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910066622 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309995367 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672266916 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126555265 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150814784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156522605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094564075 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137897108 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130747347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429359209 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115144489 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091131813 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117019887 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12037571 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162270954 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125743522 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093885254 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200295932 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250087268 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186502717 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115874199 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110681068 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089752196 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169915978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270986408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21847828 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182150651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085576149 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111712286 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109039915 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109121646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165363837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195968559 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174744823 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091642217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121099089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119215435 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097271738 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.188651122 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120870664 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298754859 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325959808 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112013014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096586948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12695595 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267358069 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12327438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20514168 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137744977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215237421 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088626106 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807048762 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169529711 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111619161 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116769111 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096715084 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116548086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119754234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168286711 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391832297 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102933116 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114880868 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088761727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236178645 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124737974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090079604 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162245485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116314001 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118411526 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102353833 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12241661 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170809739 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25430336 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100468503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119831185 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11427155 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101308085 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116451446 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211544836 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223188912 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163419291 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23199573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099913374 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187835217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170239871 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119238647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173635693 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115803232 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104466913 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123149628 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220214129 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147214961 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102406052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116115174 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117352652 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150292294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105511592 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119509723 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170117695 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48314185 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170362137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107650792 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106390016 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120257765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16304531 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117605729 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260214373 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098669114 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192650173 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096406071 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108823196 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0956006 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188852148 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101081392 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122510873 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123231571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095646445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259424786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19879101 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123893015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245036334 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186046648 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096095907 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196522117 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096764252 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189489816 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09880812 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120788977 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114998379 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772838689 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124206774 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118777115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094146098 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189275926 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112123103 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102189777 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126594981 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108641826 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754891568 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128991335 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122729417 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125568619 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097222748 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118140779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115666189 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095322203 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163800472 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233047882 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12216971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117633322 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104022684 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183214122 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094784641 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127108198 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125350759 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103903526 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120496539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115044654 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104201969 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192243933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165909069 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222483551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57750568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113111045 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125839967 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232247651 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090973519 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293273698 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118241183 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206322041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187596414 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099951166 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322758406 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166703047 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189314591 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129214502 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195827901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088377883 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11774522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168193009 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110167992 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096182048 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164295727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126933947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123346802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96801736 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090818993 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22503003 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109531641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173452013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117481884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119486645 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276033369 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113202774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1269528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166578973 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113902105 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105122477 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728562093 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10387687 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121977306 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118847487 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226116138 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167360087 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117563637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096906615 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120553582 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165692744 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20770221 seconds)
  done (took 44.075281894 seconds)
done (took 59.138510291 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275197235 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214837564 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260481852 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171328358 seconds)
  done (took 1.861742664 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171446837 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149741595 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120015434 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107794541 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149209954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086134766 seconds)
  done (took 1.661759404 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329044205 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293800088 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216599948 seconds)
  done (took 1.71855695 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250155644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271029441 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333360265 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420762025 seconds)
  done (took 2.252961316 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199580083 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132188855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.087862907 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.128906585 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173760908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243863006 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140844029 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165990593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122355331 seconds)
  done (took 2.317397359 seconds)
done (took 10.690566145 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.24289938 seconds)
    (2/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.158268846 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.132507595 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.243517504 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.292380197 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.130959846 seconds)
    (7/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127018421 seconds)
    (8/286) benchmarking ("sort", Float32, false)...
    done (took 0.173477037 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101326473 seconds)
    (10/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119596202 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10293339 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.146062569 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116465932 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125085925 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095122346 seconds)
    (16/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120484554 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095534278 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140229542 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.215776142 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097151649 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125938497 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.172715109 seconds)
    (23/286) benchmarking ("sort", Float64, true)...
    done (took 0.233118379 seconds)
    (24/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.172094513 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.220566094 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11129857 seconds)
    (27/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.139466108 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.225707452 seconds)
    (29/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116672165 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119159972 seconds)
    (31/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099771458 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225882274 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.17038058 seconds)
    (34/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.201217864 seconds)
    (35/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.216756264 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093908182 seconds)
    (37/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.155705433 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100088641 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117581181 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149282248 seconds)
    (41/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124662176 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187828325 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097359442 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222994952 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.208586297 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117403286 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.12785895 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.177025935 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141571334 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.192355561 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087559006 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 0.213042585 seconds)
    (53/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.122933254 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112177666 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08569529 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13829547 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173048309 seconds)
    (58/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067025884 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086864361 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140111195 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.205821608 seconds)
    (62/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142687052 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116701271 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123645607 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125885485 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176980192 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087851554 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079705531 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200646263 seconds)
    (70/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214772202 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117131616 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068245297 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175071314 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066244482 seconds)
    (75/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159698971 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.088077503 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141893691 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13095308 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09917234 seconds)
    (80/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12075864 seconds)
    (81/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089293752 seconds)
    (82/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110239526 seconds)
    (83/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093110374 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.11670243 seconds)
    (85/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077184654 seconds)
    (86/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.098969064 seconds)
    (87/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.120705044 seconds)
    (88/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234637245 seconds)
    (89/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066380125 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183004718 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136710571 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.215808176 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096956061 seconds)
    (94/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1260835 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066952462 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199741835 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114177176 seconds)
    (98/286) benchmarking ("sort", Float64, false)...
    done (took 0.175908941 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110777764 seconds)
    (100/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090320439 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15081668 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118828661 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188586684 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099623458 seconds)
    (105/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.152173672 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200224285 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116608831 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127876516 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086322825 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111715823 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117895914 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.183020613 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09746489 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136664582 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09907732 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11870491 seconds)
    (117/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146483604 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093911651 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116703674 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096350942 seconds)
    (121/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149461113 seconds)
    (122/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091833276 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125212239 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087748224 seconds)
    (125/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175142683 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118415486 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087767273 seconds)
    (128/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116550117 seconds)
    (129/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067398781 seconds)
    (130/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067224492 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174140563 seconds)
    (132/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124239722 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086681238 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109530569 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095461181 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175689481 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115614606 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112756295 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169549585 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088755382 seconds)
    (141/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117793596 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096391566 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090340973 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097048569 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109720272 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066928979 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.12221641 seconds)
    (148/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118479922 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09072195 seconds)
    (150/286) benchmarking ("sort", Int8, true)...
    done (took 0.222878377 seconds)
    (151/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067358205 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093728182 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168717929 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110017525 seconds)
    (155/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.14869573 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122542862 seconds)
    (157/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093685364 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185380529 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089648049 seconds)
    (160/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125557454 seconds)
    (161/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077440028 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110153101 seconds)
    (163/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066814478 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089728801 seconds)
    (165/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096614925 seconds)
    (166/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233559979 seconds)
    (167/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.144986268 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088046968 seconds)
    (169/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187657932 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068419488 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118449631 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184298947 seconds)
    (173/286) benchmarking ("sort", Float32, true)...
    done (took 0.234857706 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06897759 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120849078 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087275506 seconds)
    (177/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067261432 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.105981953 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067926538 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172513278 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094368104 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092161962 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086444557 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.225891204 seconds)
    (185/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102217256 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086132668 seconds)
    (187/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185056577 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067580464 seconds)
    (189/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07642265 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091463009 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139669517 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091449206 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069077699 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101609961 seconds)
    (195/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083146311 seconds)
    (196/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083355306 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137933038 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086777626 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119704066 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094952132 seconds)
    (201/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.175761471 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168703608 seconds)
    (203/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222169343 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090967772 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06780312 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09506334 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117417819 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183548159 seconds)
    (209/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169699029 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110723429 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087763723 seconds)
    (212/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.335425661 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102217751 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134950016 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109975671 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11294312 seconds)
    (217/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091131868 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093875101 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091393659 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091505521 seconds)
    (221/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113320839 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067661966 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068669454 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109722949 seconds)
    (225/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08359141 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11318422 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067578906 seconds)
    (228/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13486345 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.128026193 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118890138 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097208624 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136382078 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086243894 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120360667 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077815431 seconds)
    (236/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11218181 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165917367 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087530314 seconds)
    (239/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117660069 seconds)
    (240/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067783076 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136449529 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094493819 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112740871 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095522029 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13584025 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112869754 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067694217 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067605193 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115674604 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111830884 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111144492 seconds)
    (252/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069233975 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09331328 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087399103 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111023296 seconds)
    (256/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076107566 seconds)
    (257/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067474397 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092863148 seconds)
    (259/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07637621 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091248795 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095533666 seconds)
    (262/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077733182 seconds)
    (263/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114273222 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110418373 seconds)
    (265/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06847857 seconds)
    (266/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089282702 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109102118 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087805659 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109099901 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096162414 seconds)
    (271/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092646574 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068140135 seconds)
    (273/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117249248 seconds)
    (274/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093924299 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090878667 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094165538 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112090938 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067704478 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068006495 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110821999 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092871386 seconds)
    (282/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100175537 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087108899 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116516904 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088699326 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136710453 seconds)
  done (took 36.277237291 seconds)
done (took 37.155178997 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.1008031 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148689716 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096710269 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136260632 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123126602 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092082878 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118957349 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099009948 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12444322 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12480677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099149064 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093295137 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09737214 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120443125 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096755737 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139034102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124039067 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094187013 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118839305 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08670552 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119229936 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08665483 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112538627 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070085392 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121337394 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094597999 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11658426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096772527 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.11073622 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08662846 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116260091 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117232752 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086915782 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123806092 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094023245 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11820458 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098638573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12032298 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089156492 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110855732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.095080953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110549414 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093815517 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118207674 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09227952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115755616 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119291013 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100482619 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139777973 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092052939 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.119034269 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098948244 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120870322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119272685 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091874431 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119176589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092438982 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139293494 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096789143 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116262642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117763939 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095246694 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116037357 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096130723 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119638493 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098446109 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121678019 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092234224 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120732336 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115213759 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086971925 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118534116 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090811408 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109639803 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096556071 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121540833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086518423 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116681953 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094588401 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115473816 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087755919 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113177009 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089172712 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116694765 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090624424 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093859706 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091021919 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116672448 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086936842 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118909033 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093806766 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117890768 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089631692 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12323103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086529676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115772447 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087125958 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111436049 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090084264 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114662735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087728556 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114351383 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119730888 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089289596 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116999628 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100197718 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110860363 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094970576 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109590897 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086681724 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126302294 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09809419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111483066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092361134 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110675511 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094242947 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.1107144 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086609967 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110704248 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110277808 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093644895 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110432198 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090348509 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118408455 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102449809 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11096334 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092270264 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113440563 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088525574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117136469 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087927535 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111088814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089548223 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10235586 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089951559 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110762103 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095975717 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114330527 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097041253 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113048507 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096952913 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116112185 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093309405 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116751386 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086367187 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099085498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093769924 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113375367 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08985689 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112096124 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089644515 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110655786 seconds)
done (took 16.967929345 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087674037 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184388054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15110579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142766741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108386536 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112225912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122770737 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120044163 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114329676 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1428349 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111002627 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132002188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148105698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087705713 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112184252 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092317839 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113268893 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102972667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145567137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133078176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16493911 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087748879 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147709051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13535018 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097785685 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139512734 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111426706 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093134975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11464936 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104650392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132054167 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091003299 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113181708 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133965182 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1060951 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120050309 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0878778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118573742 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08833054 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112255887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141564017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110394306 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117663172 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094181737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116825877 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113470923 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08996508 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120561285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099174617 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116210676 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102431564 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157076301 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115659556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121681807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087289224 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122594931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098297986 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115229634 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089008685 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115085227 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0881884 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115734478 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126991384 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117770871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115908327 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12107272 seconds)
  done (took 8.621736263 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106337997 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139633998 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106266451 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1311919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111550593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089462244 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112394451 seconds)
  done (took 1.740730902 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089207227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134727206 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112509687 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136263447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132117056 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112178714 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124079829 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089302551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1330456 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090341324 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134966789 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151251666 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091879377 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121057259 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138277953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090195321 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137658275 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08958274 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117088882 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112456551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1167636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134891312 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092396389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113598435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104059605 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114159619 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162896333 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095142935 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114828922 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093543028 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112356944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.12827769 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128089805 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124765339 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089731811 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12914601 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104439441 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112295072 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101458432 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119529197 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129017797 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091394291 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114983945 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08796147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1181725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100153858 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11766182 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10763393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116670021 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109009978 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114908755 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.102472078 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11421883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117471336 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091462523 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119385663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099414214 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115101058 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110229774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11578521 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.105794384 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130841754 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128439767 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106866215 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117434618 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103759454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128354182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092366298 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1167778 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117900572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112026385 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091494846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125195335 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092422255 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139042629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137380265 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092236398 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125527663 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090160397 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114635571 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090680985 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137955206 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093145343 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114877975 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092999036 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119192784 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087727867 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113364018 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092542295 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113952283 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091713434 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117810517 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114529437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092558207 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131423233 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090788489 seconds)
  done (took 11.83867268 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093149792 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11537545 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093594905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114978887 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090567577 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115948924 seconds)
  done (took 1.582864611 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117168554 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118591133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104551043 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121699813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157568307 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104952557 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131730685 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124370511 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109705757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128467021 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130281337 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106909813 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135544372 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121369064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105093893 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121363174 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105251598 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126446612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128109598 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098194553 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138043953 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122164005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098115565 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132958173 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09463985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12210747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128006048 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103749171 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127398449 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09825439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122051733 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119512809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097398492 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123737858 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130427213 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096348641 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1215787 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095026233 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126218578 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118721684 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106075369 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122764834 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102365862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119310217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123767851 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09710425 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11995386 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125471359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104841052 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119865574 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095261558 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121771924 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12114566 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095587752 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12401593 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098835362 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122575574 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130751831 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096725137 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122770839 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094111848 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119495602 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124392476 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093896942 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130950592 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119579034 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097288169 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123207299 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097752694 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122299997 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118941702 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094090591 seconds)
  done (took 9.274617033 seconds)
done (took 33.997205961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686233686 seconds)
  done (took 1.634406133 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.843431622 seconds)
  done (took 1.798892115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.03912037 seconds)
  done (took 18.026789383 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.478311929 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.56405444 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.996919166 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172154569 seconds)
  done (took 3.163709564 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943845645 seconds)
  done (took 1.917174183 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283515124 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235576784 seconds)
  done (took 1.474529514 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766925692 seconds)
  done (took 1.743112704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.440765606 seconds)
  done (took 2.406949906 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323944281 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182949169 seconds)
  done (took 1.479315727 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553999906 seconds)
  done (took 1.520185322 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.036316773 seconds)
  done (took 11.011808342 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268919442 seconds)
  done (took 1.253662839 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303800025 seconds)
  done (took 1.276711653 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516054152 seconds)
  done (took 4.489248501 seconds)
done (took 54.164979823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099718893 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127354451 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103718618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124894227 seconds)
  done (took 1.420533918 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10202561 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12125376 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101929315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122154538 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126892657 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097364486 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124798951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103045733 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121482596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097769419 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122747077 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09515085 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125146992 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123882868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095100503 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125955297 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100329224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122358917 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125154881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09793126 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119193143 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098901727 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125567021 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096035623 seconds)
  done (took 3.666979613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10089609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119392764 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097260237 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119953064 seconds)
  done (took 1.418503569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103274761 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132055922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10695174 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125871875 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106544596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131966993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118555331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094050199 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119821648 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100673785 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116036409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114727848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132246478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125902455 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102475441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115213868 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091853936 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132156095 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101297485 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126930753 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118834606 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101547724 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11648961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110010915 seconds)
  done (took 3.729125901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171466742 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127986726 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140340107 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096153141 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162179997 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141740971 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089535247 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142009665 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088197756 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132353747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092307932 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160336915 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131270503 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089366156 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114655733 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088762033 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130579182 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129651888 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092342677 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128214115 seconds)
  done (took 3.435275801 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098340663 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117512128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089269744 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116655817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099832354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121430193 seconds)
  done (took 1.628215938 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091576452 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114667429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090533011 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115004585 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09520573 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115437899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089912127 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115230778 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090318454 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115334055 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089920295 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11437851 seconds)
  done (took 2.220529892 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505464335 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121755422 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121668234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090088904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122648318 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090502277 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.1312198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094065518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141480188 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089156687 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116656939 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094767165 seconds)
  done (took 2.702885502 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241092278 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126984279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279365806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345607419 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153522819 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166159512 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304547223 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164996399 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194853521 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151318945 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198959116 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224450079 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151620099 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192341576 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139406166 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119092471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217097133 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225855996 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154310295 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23791066 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182139893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168403954 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18192227 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15134798 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140395524 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162950553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095914867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130644969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236699524 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182651715 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190684536 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187383658 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12134588 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231811338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231261658 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197412145 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280695691 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134661175 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141778878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168189228 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255005466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138723916 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209147026 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157244694 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132805722 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199187829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161110493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173978201 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145859107 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141137302 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224021281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216838265 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187248267 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139676037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322175046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152246097 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160153136 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191582377 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22718113 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226630671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191082512 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123056664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188853879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190066307 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211499473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153977256 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178003208 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148853603 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185565471 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191983753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16718126 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180143449 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209406829 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1381236 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170359176 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174273344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171837045 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259884551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186535081 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122432846 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169972403 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123207979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132286919 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197089278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125170662 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216731819 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145380066 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166045418 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211977163 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160898153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162893903 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195310306 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213379593 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122779495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112713436 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153746917 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129164885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200248794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113742327 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160241471 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159100659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13258895 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172231938 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125275122 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186338999 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091372883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169316699 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2130566 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100511514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163556573 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153151234 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152979764 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179722346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197850301 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141765228 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135075753 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211699514 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182052297 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142977078 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178526283 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226728162 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118215274 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150726198 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229603666 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219089819 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144124927 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204612082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149422467 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137369759 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133236718 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185138979 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157621189 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163013706 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107342055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209536909 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20325368 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127454686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113612423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226469059 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106401096 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134027543 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1582603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151099557 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138823638 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117229172 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146837612 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176723418 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207643395 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128797042 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191917473 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120184422 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235239208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14165052 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152630595 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124355808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122282087 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188910003 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225414745 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105939491 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23358826 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171102933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198916892 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171079964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137303913 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179530814 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131265566 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094133587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220998324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166438916 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161163788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195853745 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197786766 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202925887 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185917607 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16837578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174832262 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168187053 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156355882 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111392777 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162695774 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159566424 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124522931 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141978484 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107206763 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150590585 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144471732 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134877011 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199558541 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171582578 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218056631 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160962641 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149773423 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183791302 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103071592 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205527291 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178852898 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147070112 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197665608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195918085 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189788294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145392035 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231527136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093960311 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126389252 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143127778 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170383405 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107473073 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137371319 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163973195 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184068676 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176843327 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173849019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23475027 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173590865 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192862985 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12416773 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169164674 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179522485 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17900891 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180881211 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116874172 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15054985 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179176286 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150921329 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259156834 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167739613 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175530045 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227384923 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125018268 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133057902 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152256975 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180448602 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156009041 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174675683 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148387894 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138500215 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155002063 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104800651 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161367085 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179039125 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165300902 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209318758 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149800059 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18839394 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128626615 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16449819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161598394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136932007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110322662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171426679 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195637235 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145163571 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162836483 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18315522 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133169688 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309166011 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22932205 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192682491 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138528705 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155588124 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136051624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163363133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167963626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181240557 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188453079 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188931583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159466248 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109707129 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139761283 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150376964 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152962782 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106433909 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147938862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177082778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140605903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18143815 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15649383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160980536 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173400081 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151939381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144770934 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124316659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245929423 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1841663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243636804 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150805053 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175771162 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208252697 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127264319 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105399247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134313519 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180246358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138398199 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19313838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189452913 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228861728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181913406 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179293405 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140537778 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121606032 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158220162 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169853671 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204102488 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147582834 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150863634 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198576985 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138640267 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103844666 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168726581 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31402737 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119186139 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217175844 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080451115 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283597049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126315058 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133359044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137218446 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232263725 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137313993 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153224626 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167025498 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163112924 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164565711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151158557 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219365133 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214752614 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228973282 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182558616 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104744457 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159331301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171795187 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215152674 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157110995 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111669058 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233977431 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196104865 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193478788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144344154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169505154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168860275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160214869 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187647043 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136489425 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234872315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107799427 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220918486 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1543558 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111434366 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202803836 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189653812 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141897177 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185019246 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183789566 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137134043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133420534 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160799021 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178759236 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149452191 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100427447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176721128 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126607845 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197063219 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266932188 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134632872 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15560671 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121249811 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136747139 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156156785 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159837998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139102077 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14137066 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222509793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108314794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215566162 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204254388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171516945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168327637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147309826 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689037134 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133509818 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196050725 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149971356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182694788 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151217788 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174028081 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16122953 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170483258 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197229409 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160398746 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231668708 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219695472 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179668157 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105410504 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158995331 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156505645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145372897 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155333995 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168595996 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162331344 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147586948 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179420096 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165979993 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135694204 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112787951 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227236975 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148913914 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183222676 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183123392 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139962993 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172488196 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18992637 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134678809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17505581 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20426109 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142669749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151694391 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135557359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153125323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264648475 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098232438 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189931906 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215156664 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159608188 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169204824 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146670312 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195693687 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159567255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187228443 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145127041 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15664438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158405044 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137955467 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103260162 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156316882 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165421769 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151832983 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161067939 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165161717 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196120846 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097103934 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146264771 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286438831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19861543 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217857273 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13717803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107726716 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162105665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14918544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177298078 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180678209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136317673 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137094504 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136430435 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12994162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138376216 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130698914 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220659767 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160810836 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208204459 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137694233 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278164817 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113564509 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15625092 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088681662 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133304777 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153019751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147445973 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151037913 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194954999 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26461765 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14858227 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106709233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150731722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128943462 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10946445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165002539 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164524743 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20766833 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115860559 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109576266 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158048861 seconds)
  done (took 82.240823657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17401547 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135191117 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148237625 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202833097 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177781972 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271025563 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210934082 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254780276 seconds)
  done (took 2.654485082 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095476906 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147706007 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157093084 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133169788 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092945639 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120702905 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339662844 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133635347 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092608361 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.148098262 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147500937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.119648947 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.529920677 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.119508234 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12011128 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084773489 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118525989 seconds)
  done (took 3.765223291 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.174497437 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486675796 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.013863205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211744888 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16007217 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120950822 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692581827 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115981611 seconds)
  done (took 12.056038 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116643056 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137168379 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124359456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154470632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142810803 seconds)
  done (took 1.763022129 seconds)
done (took 123.677456529 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098547565 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128411 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098699649 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131425919 seconds)
  done (took 1.52704499 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095766227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071290373 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101739636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075650747 seconds)
  done (took 1.425370132 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191346731 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170229589 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393831545 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072468645 seconds)
  done (took 1.580766509 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115838544 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133665356 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105903556 seconds)
  done (took 1.441813197 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107163895 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129352919 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104548867 seconds)
  done (took 1.425164696 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106675851 seconds)
  done (took 1.187442303 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107991441 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138051133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109464462 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138006483 seconds)
  done (took 1.574890422 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098808705 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127653376 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109953345 seconds)
  done (took 1.420855747 seconds)
done (took 13.028200967 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104958262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420117663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38627977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139267436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724051817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381041381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031917223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146845035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166272216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095306094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139523139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675093408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025039599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378945223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979886099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376674129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679863614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122893038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092726396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122845659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015298965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093459269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122348313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093125585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705159131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400087812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123193793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.346295707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121970157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126977667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.385401112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122942068 seconds)
  done (took 16.913765028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095969719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174633715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098726299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123383864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124859179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09533421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125042722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095140463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180615733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122573479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112688441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122045623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097747863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123364135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145215894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09281186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125842538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093382703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121845079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094883738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140535028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119839007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094679081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121815394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095144979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13618429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095640368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121730836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093623686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127780296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127601945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0962914 seconds)
  done (took 4.816613325 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141613464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183586747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129030125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127249703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168752098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124243875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200403133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119668767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184367671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123414883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139949552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093391649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156793251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096098134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14335519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121884982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098039898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122350634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093391485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123924501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11332631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122857747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122878367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09452016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123337665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108577258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12490269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093438064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121804485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126387166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10163835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123732365 seconds)
  done (took 5.159303622 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098002378 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126342466 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11012608 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138798792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096091342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126684104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098361286 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125296259 seconds)
  done (took 2.00535264 seconds)
done (took 29.978366383 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111386742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127682505 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108460488 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135401474 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104145293 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132386388 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092143655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135530381 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.105836405 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.131236482 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137310216 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092655277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122968665 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092266429 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136290429 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098045499 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13367152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102560562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134637735 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131738288 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095507834 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133693569 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104312502 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133280062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105057363 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134181699 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10905346 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.128717734 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122818518 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095476535 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124059338 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104698997 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124362197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106037347 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127012287 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098795597 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123361636 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096068449 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133475483 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10508654 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129269999 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13334506 seconds)
  done (took 6.010031163 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108371423 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140054154 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105740836 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082191696 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117063618 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080691889 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137942354 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079874285 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11051869 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108471542 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074789097 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10732701 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079169057 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073383076 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.106649097 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076325635 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108344743 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077201189 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077324727 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106338266 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081201008 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073656259 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108584246 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079816767 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075400161 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110361832 seconds)
  done (took 3.579092073 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100438844 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135591268 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113637774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184972226 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161571773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101128712 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132061986 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111310335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138987638 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119652262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097239025 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150323017 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111043989 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130260846 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0923199 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138445509 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.106696634 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123296505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128340278 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113203382 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138330429 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103236088 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141281982 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10415195 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.12164013 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095197524 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126852841 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134787143 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098235986 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132124405 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097864894 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125197537 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.094473316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.133623451 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125749821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096415751 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141823565 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104052193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132312657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094194411 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130657541 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093806886 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144092478 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161714223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093241494 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130435328 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096441573 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134510415 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.093029197 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141983535 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131046651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093905455 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12537647 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093464624 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121442808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107789885 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124399794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095338923 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132035712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09871256 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136350417 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097496558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139108772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121216002 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101407542 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121280977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094736305 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121445827 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116194219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124128929 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16174776 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095025035 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123273464 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103355537 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130436464 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101075465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122912977 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109298013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132721189 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096666395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133434572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125075511 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097396686 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13982246 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095491471 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123904413 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094993302 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129758114 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.095876346 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12422096 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107273635 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123895977 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096514392 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140751354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121716822 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09556579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129299595 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098876966 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121954634 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107024288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130146256 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093185691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133888876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122123153 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09687721 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131717957 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098679089 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122086291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098448878 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1297255 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093954727 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124163513 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096314262 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124409134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103678156 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131162078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126737626 seconds)
  done (took 14.886127138 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229826734 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218016989 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190210547 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296225951 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105408767 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147619735 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213016939 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158025043 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094199355 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161867869 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171320816 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183096871 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170111706 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180562357 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170064658 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123849495 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112310373 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166550115 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217078225 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290770447 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112950629 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134060559 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163889423 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161914833 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107175476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134143163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143007565 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10665834 seconds)
  done (took 5.775319495 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110704775 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156109686 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099370994 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146335952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150202131 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092994976 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129652171 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095041715 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136795032 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136651304 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09320548 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130209662 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101019259 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134293257 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.093967159 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.133585609 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132596452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095804795 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126101387 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099184639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134798227 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103742199 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128475635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092788526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13346073 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093038036 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.117120808 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145212156 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094407206 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146173663 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.091861012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133295298 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138182373 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094998198 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123081536 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096277648 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12551607 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096283121 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125898305 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093202581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122811557 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078852836 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12225834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109167693 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129317822 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081357657 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130898632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099324091 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125519714 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.091248756 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127961562 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09652984 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127322982 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101031652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127094009 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.094411305 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127654692 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085727698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131374312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096362409 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115303974 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092089412 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12906166 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090333896 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132592249 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099133392 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122451603 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.095600415 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129243456 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129789316 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096159989 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130267048 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091836574 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126234622 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096480555 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129121898 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097769474 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122496376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094663943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124555587 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076448772 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123605869 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075660998 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097841647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122062124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093278595 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127003176 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129679852 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109945523 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126507214 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103206294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125317915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093255819 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127199513 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083745736 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128058733 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109937944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143009729 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125252901 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.092870175 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139840885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097349028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12457287 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077236018 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133580945 seconds)
  done (took 13.067586305 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132430339 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154969331 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095957553 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142942975 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157817573 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157107712 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102389635 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131793764 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096915636 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143300765 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094667852 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133612711 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095476125 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139084716 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158653269 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104728745 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126675464 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110163635 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129782266 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170386039 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114101894 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142593675 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111307548 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125079439 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09967429 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141387047 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160585908 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109097119 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137070578 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.113073391 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.139675819 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16056481 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.115086954 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129367368 seconds)
  done (took 5.508033251 seconds)
done (took 49.916463054 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.19944971 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43895417 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194085307 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100842488 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215840923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.195938604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203223653 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19666719 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.682229413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19204493 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467779176 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.823215813 seconds)
done (took 60.029716655 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.274643244 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.35128073 seconds)
    (2/2) benchmarking "String"...
    done (took 1.515487123 seconds)
  done (took 3.982608368 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.735676734 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148611619 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455290038 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196978359 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190533549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488981227 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.909454841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.57797091 seconds)
  done (took 28.090174107 seconds)
done (took 42.203879691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200657564 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.274357389 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.225903371 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186261031 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.303987195 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.21726567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.558603364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.213575226 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.210689246 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179656146 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21430342 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204965648 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20940881 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.551513238 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205180645 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202080753 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.258247002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.710232114 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612842538 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209899887 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.228180814 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.251990537 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222397514 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197893304 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.228986763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197695823 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217401901 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.223052952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.780942802 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201903097 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213257034 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.725273954 seconds)
  done (took 190.760743639 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201249643 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.307457646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.380578626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.231500459 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.69852392 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399934033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348917959 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.76345516 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215489985 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205496942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.517470205 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198491526 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.558431395 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161866959 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226951993 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259464944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.383580823 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.537999051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236308057 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.329970329 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213762485 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.436624398 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.330056181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.450529368 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.236659236 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.243651739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227262631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210763706 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391561765 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.311930299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.212312523 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.252126107 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822888462 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054930952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.214363836 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219960175 seconds)
  done (took 150.114751392 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20144969 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199399962 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193809382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233087891 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202344178 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781680776 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785342288 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710535311 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.30056785 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.609411598 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499943695 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202269901 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28971733 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211177687 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196336197 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213965125 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.24575814 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201528575 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201218448 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785646923 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217116513 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.255426631 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377948134 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215906908 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235283829 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59416264 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198257075 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234334129 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535389581 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25055966 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199407832 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59623428 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.511699592 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317120294 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20092646 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234195502 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20310783 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483123288 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194097379 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196451579 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204583594 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889450811 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203043877 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7822853 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203044529 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.179297965 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203520578 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201337674 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.514570738 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.846030897 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218258785 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200785066 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.204531989 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200820371 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20211071 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232936462 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201760516 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.510692348 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29379708 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215276886 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201133903 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.2039563 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233547758 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200058909 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.220264568 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198645137 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.769215552 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253348899 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304866522 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759903122 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198352772 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297056539 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315002881 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195047157 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197927714 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1968029 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197613333 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306050075 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195303321 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.595079133 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.368514737 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.210463051 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.553842651 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294563689 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195520377 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581364456 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200638307 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194491194 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993105193 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296006934 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19510396 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196636897 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196755165 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199424938 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.601193331 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763144743 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.457940852 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200321383 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.48997077 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193040536 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.607498595 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729261597 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.846637379 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192671687 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305369606 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361985267 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208423905 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189739682 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.532869444 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193063347 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246335657 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193733708 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191058977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589931164 seconds)
  done (took 365.167283178 seconds)
done (took 707.168634553 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.785504581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.784674352 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.892850344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783352286 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.740735784 seconds)
  done (took 10.100263286 seconds)
done (took 11.215757318 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385728351 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38120146 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254556832 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381751803 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2261404 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400564965 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360799202 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215102287 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295581953 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274924798 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293140251 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248082352 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228217543 seconds)
  done (took 18.060146865 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513992404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521787777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260457949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518436062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232988144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513497664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407050595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412943692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411271831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226371461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203641473 seconds)
  done (took 16.338408085 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522751329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512389894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26145751 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523720329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236646109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508208608 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401305925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415178115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410309126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224318697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205969508 seconds)
  done (took 16.338849011 seconds)
done (took 51.864249517 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203324543 seconds)
  done (took 2.314118643 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237313692 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403118457 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.216709154 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205345101 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201641057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205016422 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206882245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20134863 seconds)
  done (took 10.992422697 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198590214 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.201608083 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201111859 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.198442974 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.19874665 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197587464 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200751476 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197687458 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198981317 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202522908 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200688159 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.201441267 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.199509762 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.2023937 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201662463 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200750501 seconds)
  done (took 20.318850488 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.202395284 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.199426683 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200020821 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201823443 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20657998 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202494277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201375198 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20151265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19850639 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199977619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202193997 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204036143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203725204 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210371638 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211563238 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212904553 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211311313 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21203493 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215926742 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211056421 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212352928 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2145918 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214512472 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213917216 seconds)
  done (took 30.083204106 seconds)
done (took 64.823929123 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.834106061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.822751772 seconds)
  done (took 6.788566562 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217258527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.216065487 seconds)
  done (took 3.565373743 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216036385 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21520907 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215824198 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216922107 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215877082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216786316 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.217075821 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216806768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217078419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21685237 seconds)
  done (took 13.298226505 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218161935 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216275141 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214677404 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217867203 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216351406 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213984228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216332642 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217126217 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21942513 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213615589 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216826176 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214321112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215943896 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214058411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.216087202 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214707956 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216848172 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213917552 seconds)
  done (took 23.020107765 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217182739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216756914 seconds)
  done (took 3.565871277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21627196 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21465413 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214565373 seconds)
    (4/7) benchmarking "year"...
    done (took 1.21765962 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214681033 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214955994 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.215112289 seconds)
  done (took 9.640378295 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219148105 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401443856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.501320129 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821626831 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220703615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.221804372 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.153123248 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221976395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224936216 seconds)
  done (took 14.118709942 seconds)
done (took 75.131790436 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.235783188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.227689638 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.455100957 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22909373 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229358805 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.558349163 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.251948334 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340038261 seconds)
done (took 37.663196121 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.210977285 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204406484 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.975788793 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193800047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.26046786 seconds)
  done (took 18.768293962 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.235047584 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547090816 seconds)
  done (took 4.91567758 seconds)
done (took 31.028835205 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218352317 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22042938 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.216861036 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21946773 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.216530586 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216560556 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220712285 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21785794 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221655989 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.219653153 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216581615 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220145778 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220727541 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220024877 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217763863 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218021111 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223036778 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217387368 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216668037 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218034241 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216927278 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2195849 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21735424 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21751097 seconds)
  done (took 30.381799168 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222778206 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219497849 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220460956 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221106563 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218801185 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221514361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221773784 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219029274 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221970076 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222162459 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219544397 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220894876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223346508 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21834836 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221962438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220699422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222878869 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218461718 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21975694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219003502 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2213965 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219453363 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219251102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222865127 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.222085902 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218611257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.221243088 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219426243 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221536984 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221253899 seconds)
  done (took 37.75665322 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226610805 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233486295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223856397 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22304437 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223859267 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221549148 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222517897 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221428756 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222985188 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222091857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224594686 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221104596 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222060419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221372155 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221394584 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221266141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220952098 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219451105 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223594225 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220632412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221804897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221130685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220691369 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219996374 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221899255 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220963582 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221316389 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221628482 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219802331 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219855558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221775805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222228862 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222190307 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221268553 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221053043 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221646267 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.226631802 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229072674 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22080401 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22193776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222096977 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22062487 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22155835 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223401651 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222888178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222220964 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222615764 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223522035 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22146192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221995975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22353906 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.222616989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22182249 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222719057 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222337499 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222664136 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226034212 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221158463 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223982252 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225199457 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224758082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224212737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222531771 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225585467 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225425687 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223194592 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223832854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225224495 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22423983 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224765734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222931748 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22552393 seconds)
  done (took 89.179154132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224226196 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22102514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222006854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221096422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221396999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224485873 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220203145 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223917746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221973108 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224030312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22431886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221144672 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221515435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225359002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224266848 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.22049185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221589393 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21876452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222707135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223794251 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22318609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220856652 seconds)
  done (took 28.028822659 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222419739 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225797493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221471697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223690103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221864944 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225319694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226101067 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22538199 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224822923 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221179762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220076854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222793084 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221966528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221391401 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223396824 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224425321 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225439334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223429949 seconds)
  done (took 23.157688126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.222172645 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.222024344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22545784 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222475012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223553781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226217925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2226827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225936413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227072787 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224935762 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226852344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228230349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22814846 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224205279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22715298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225111485 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225992277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225572922 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227487502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224478751 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223625144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225356313 seconds)
  done (took 28.093993591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225227625 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226373712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221204954 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223120701 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222282361 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226124403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227277074 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221820994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227675018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224891914 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222386103 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229377946 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223516494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22199931 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221541591 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221462093 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226965627 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223587125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225724265 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224187332 seconds)
  done (took 25.62524367 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225900193 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224417877 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224608777 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226451939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225961199 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226677487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229539128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225218354 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22398365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225677944 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224599593 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22439068 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225296924 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225487798 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229346772 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224102596 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224597328 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224555773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225004376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224610853 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223537688 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224097953 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223101211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225821793 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223483749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222774524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223136486 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223356923 seconds)
  done (took 35.436621557 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223063494 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222826092 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221146328 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219268964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220056565 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219738542 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220948966 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221008261 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220944168 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219375701 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225025457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222991244 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224089303 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224490691 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222892355 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223678075 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222320712 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220992101 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224283047 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220975149 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222207142 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222929912 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222907838 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220029337 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220761262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223574355 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222338552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220130853 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222996525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220407667 seconds)
  done (took 37.794421622 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242346378 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24241537 seconds)
  done (took 3.621634088 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.219144846 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225773939 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225323208 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222373712 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220416976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22475746 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223323217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220331199 seconds)
  done (took 10.918679675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224931724 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224441945 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224163357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224967194 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225860277 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.226045595 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234623017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.242800798 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225013849 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227082791 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232006271 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234145597 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227603217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225369574 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22360484 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228792947 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224715243 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226092527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227097658 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226399434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225715565 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228430718 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227492229 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223908201 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22646334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239923699 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.24619203 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226938795 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226118693 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23081109 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227099393 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223887712 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227936787 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226987752 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226581187 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226984759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237554868 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241471602 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23385408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243861556 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228063992 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.2263976 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227279549 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227962038 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228075678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227424784 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226577197 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223896408 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225690998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230277843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232105645 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228022331 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226336348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230415621 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227300259 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236426061 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24474795 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230137723 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237934726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24283327 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.258374549 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250389788 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230303836 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229450736 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237736885 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251946156 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237225062 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.241465395 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226113065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228718199 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239995034 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258435251 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.250017448 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229527779 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229844339 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228692746 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230604949 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230305323 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237812122 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247459009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228710028 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228813487 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237970366 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256045319 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231463948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231517909 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230401364 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231113816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.228636782 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239980474 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247093713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230087271 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228897694 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.2304899 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233925473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232484762 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229987815 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233179034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231493483 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231858498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234261947 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233043758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24138143 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230474433 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231231872 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240838765 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247090804 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229627748 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239097585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230703083 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233729403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232118649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237348039 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230354158 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235008402 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.241920219 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231801813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233437544 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232328794 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232920929 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241792082 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259856675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233012858 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.231949459 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235964711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245456034 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231669816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23391746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.232848725 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230420385 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230617176 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234031251 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232438132 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234013612 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234527746 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23308765 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230798077 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234873353 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234410773 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234225492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234403425 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232912167 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233278006 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234638807 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233093794 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233444071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242395891 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249093685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235805035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234477383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23336644 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234635771 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235264999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235424006 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234494886 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236193957 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235087239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234101668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235231139 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235008081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236686919 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238332842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244768769 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237862728 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.236846963 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234486455 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233169519 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235688374 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236014136 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235585586 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234776191 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234555687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238151334 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245097753 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234943781 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235923187 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.236939836 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235045733 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23450358 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235389609 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237326916 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246753368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237509824 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242701779 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252262618 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237753313 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237295958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238795028 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238881456 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238489741 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239235326 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245483001 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250025998 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257685793 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239895606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240919638 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236660935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240675918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240306378 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237664612 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235491441 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237934951 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236647191 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2381876 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.237692148 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237672111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236667603 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238923971 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.23620745 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235977948 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238197866 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237672322 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237721116 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235623416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238105901 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237586142 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237115307 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235612102 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237885409 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.238143622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238491847 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239148834 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244187963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235165488 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240287805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23868248 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.238261605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239958931 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241570899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241788055 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.239115901 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24801492 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254490106 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239704565 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246783426 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.254893732 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.239954281 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244515912 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239678412 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236332105 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242646208 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248007927 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238299589 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239634863 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23909532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240046053 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241365499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249136601 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254269971 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241933279 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242039884 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244140361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239690492 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244073047 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242368718 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243616926 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243009857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240730302 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242891453 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243894483 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243362533 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240751302 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242271094 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24244812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251323128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248286595 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242587982 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24665372 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242650667 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248846156 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243470999 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245007845 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241939854 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256874243 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.263687166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247251649 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.259074818 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244165046 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251151384 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257982672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248176585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244466495 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246635804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245286788 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243960125 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242474994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246278323 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245846345 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247111874 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.246284098 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2508609 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248210747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.246330559 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247088806 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247291254 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247253712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246931748 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248683772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24785969 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248825257 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244200945 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247443873 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256164463 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261767301 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248077838 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245272377 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245022395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247093051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246395894 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.244736514 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248085795 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254528697 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250400697 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257085935 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247290772 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257758075 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245310955 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247694376 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255991733 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243294577 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248825193 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247801367 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248537928 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254962579 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264006481 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247642857 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253044344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245796643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245769733 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244652256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247834619 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24747993 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247184002 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256105005 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263370796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251410694 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248913955 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242661322 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250093327 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246737402 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246710152 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251374952 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247221319 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248914856 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247636904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250219944 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249157893 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250139565 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246722368 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24665247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248346309 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258054677 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267076248 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252576342 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.246154055 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256338354 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265923367 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256819284 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265866737 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247459795 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249125684 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247407602 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250948754 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250203657 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249984663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250682401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250570788 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254530019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250854958 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251446352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249575501 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.250573597 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24775611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260451814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274360851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25020817 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254740682 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.247180425 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249540036 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254293492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248962503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246316982 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251992048 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262197998 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260568549 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251947376 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.251469023 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249730388 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250850707 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248585497 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252724744 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250775889 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249538477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.250413723 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.251321518 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251106802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249422598 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251728272 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25386288 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25153363 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262901746 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268914121 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250482033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254173026 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251295519 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25106812 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251350981 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253873219 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253209604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255120762 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255553789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258816606 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260410826 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25445785 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25178074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252659901 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252650191 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.25352552 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255512249 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253919806 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251108561 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254790938 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.253809902 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251488831 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.25424565 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25554026 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254733337 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253188564 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257809567 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262367091 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255053827 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251572133 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253765243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253827091 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252528174 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253870335 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263531678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273427112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264572574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264321833 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257900592 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253171434 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256911756 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263619277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254950772 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253142148 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.25600302 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255689385 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255590545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258931904 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257120466 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26162404 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.271936192 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255615926 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266396848 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271768327 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254758029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25282884 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259118396 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253917397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252963378 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256162584 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255751131 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264593536 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271620607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255016604 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256248512 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254887656 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256962605 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2611812 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255291979 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256973037 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250342763 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256091211 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256305185 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25413678 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.253909022 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254860126 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255763709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259076449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263394176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253678471 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25785755 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255933934 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258807921 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257560034 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256571129 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255247628 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254526956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255778055 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258457253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254624421 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260162019 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255783841 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.258885437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260301605 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25751686 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257859661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268370276 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265343506 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254010537 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257071063 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258938891 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260292533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257829068 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258417556 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256805383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25965502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.257179003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257502313 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256930504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260243146 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276508132 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.275037947 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258913212 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257016089 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261470922 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259386142 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255752892 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.260004227 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26098444 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260614895 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268058587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25938256 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263356809 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27526262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260574238 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263548605 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26201592 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267771229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261707664 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258735707 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260340399 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263833 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278773151 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260786919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270785889 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293601449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.278136618 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262294332 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261451577 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258061722 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.261182723 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262213466 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260821252 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258762486 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260708401 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262608983 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261417566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266993894 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.261207068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265634604 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26135853 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262009084 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263327774 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259382538 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26158137 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261026412 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261858759 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261133837 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261624667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26075145 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273848019 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.286005407 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262161609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262705024 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259966581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266162767 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265438895 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272858685 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269990737 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264400406 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261993664 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263952323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262389257 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.260817141 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265728951 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265511461 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264340828 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.262826287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275902013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285343792 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.269113806 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261312212 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263873251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262622726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263667185 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265189599 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262275785 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264465759 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266308454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267001676 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263259167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263392403 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26593137 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272859959 seconds)
  done (took 744.610072978 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261295122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264142654 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265472383 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262371071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26181128 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26231762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262504421 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262964001 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262086721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26205621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260985942 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263727727 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262706031 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26233872 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262644524 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263612352 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264300226 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264163862 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263851649 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264934765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264487392 seconds)
  done (took 27.696661391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266502224 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264495321 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26251764 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266702888 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263323318 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266022457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263580613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265281277 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265124584 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264753131 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268183196 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266692082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263801873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.265728228 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265235948 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267703689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268761768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265878294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268840517 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263124703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268483741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264800906 seconds)
  done (took 29.018922236 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268071398 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26661736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266235971 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265074289 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266996593 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.26511067 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26740244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26454165 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268514604 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269106638 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266657086 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268277053 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273552727 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272918011 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270182967 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267803968 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412506825 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.26889785 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267713484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26848284 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.264434033 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273311093 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.283958953 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266331113 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267109779 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.267891593 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268623498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26956072 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268504871 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.267398027 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27323209 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.266934386 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268001999 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271001283 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.267527041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270321559 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272290624 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271356542 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266944482 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.269430474 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279164602 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289634321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270804398 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.274175236 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.287614298 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.268569217 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273260091 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279469383 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.265704171 seconds)
  done (took 63.563803967 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270056269 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.269663645 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.266681353 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271254539 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269157234 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.270787235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.269655239 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269863548 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.268123872 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270101547 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.269694357 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269660183 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269197264 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.272998328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271845881 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268825108 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270378775 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268725236 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268213468 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269607441 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268656276 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272278189 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272249613 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269275044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271625335 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270478349 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270249107 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.270344344 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268873719 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.270081267 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272981433 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271372107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273691151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.268366791 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269070215 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270139184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273201931 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26832261 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272802442 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269909257 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274261828 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273439195 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.27378711 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272217538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269640257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270243119 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270175962 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.269345425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272021951 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273467546 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274220088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272861357 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.2719208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.270970121 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274354858 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274906868 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271904141 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271070193 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274430459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.270840472 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270953642 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275370849 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272767113 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.273996808 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273351437 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27322165 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272481623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275699604 seconds)
  done (took 87.622237421 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273232525 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272914798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273784956 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27393909 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273176295 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273637261 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275386926 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274961745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275576125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274827956 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274805635 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273712125 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276836123 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274019778 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275848333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273422845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274582958 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273487535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277332488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277036377 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274877846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275041043 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274496482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274641326 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275858279 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276334904 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275870142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275219274 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275363742 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276049923 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275730357 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.275826094 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276233385 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275555143 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276312939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27413629 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274745572 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274896395 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.275544063 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276008561 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27625423 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275001606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276872716 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275333923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277149831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.27723047 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27700646 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27539784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276284729 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276421533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277088778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276710838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27690304 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277296171 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276659876 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277963588 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276279317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275698664 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27852018 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277497041 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278043692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278188265 seconds)
  done (took 80.274443614 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276905865 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278020076 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275437842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277050242 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279787 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275921534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277925233 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279534703 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278503184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279438209 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279868724 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275934012 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275994453 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277740108 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276493896 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276891513 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276434748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276417927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277385578 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27508844 seconds)
  done (took 26.732516008 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.276813533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280742554 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276296278 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275935188 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281488463 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278103776 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281953454 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280820045 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278832222 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280531207 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280485755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280704257 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27708341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277081756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279952032 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278275018 seconds)
  done (took 21.651654679 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2777353 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280254632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279806263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278760435 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277893542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277817789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280160431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277822676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277909617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280882753 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281139673 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280863173 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281948683 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282514805 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278245486 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283948621 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279517307 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279811167 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281492023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282114299 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277612348 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.277038418 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283124999 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281680736 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.278743515 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278126501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279504198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279769132 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278296269 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281539034 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281187158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.2796549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277932171 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280065528 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28141262 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279383203 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281335388 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281396551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282756728 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282985652 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281418761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280766166 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282456118 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284629291 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280431338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283513416 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281092558 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281279285 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278640257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.279383211 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282893278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283728437 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282873285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283157888 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282466955 seconds)
  done (took 71.62179949 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282065576 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282775647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279609866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28493183 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285328327 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281598646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285101169 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282044487 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28171242 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285278888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282029893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286035331 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280663042 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285983103 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281445588 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284616136 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282364034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281626195 seconds)
  done (took 24.285087529 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282626978 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283095671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283704389 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280571931 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2820767 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284976895 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280828082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285809442 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284544142 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282911094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282750398 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286508679 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284190345 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.286483281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28433548 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282282087 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28590349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285985342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283515671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282492334 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285741596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286289216 seconds)
  done (took 29.438759065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.284372075 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284598273 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285161964 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.29875574 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.305456582 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.306014473 seconds)
  done (took 8.956705029 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292532836 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288057213 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281976759 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291562895 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290438843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285040228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284030774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283247812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287611691 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285497494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28491808 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286249589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286550301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286672656 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287682306 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289154168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288278859 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288976147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286418527 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289352313 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285840004 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289865142 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286264761 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285545273 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286351082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285932089 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29046909 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286294764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286884951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291476052 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291163798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285402763 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290748936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286022931 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292678876 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291885846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286838961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291115633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288917137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285942608 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289127896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290412563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29119983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286252208 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288953693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287324336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285389683 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288305988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284485314 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292420901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293363509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287020143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289847826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290217014 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290651096 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290549584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28843228 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291562083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291606614 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289345897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287178229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290869609 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288509555 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287527006 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290510624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285871544 seconds)
  done (took 86.242378077 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287867107 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289958675 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288704573 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291768138 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289425293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289892112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290866717 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290126496 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289252887 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288093334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29262783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29028196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289363744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291019812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290393754 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288856016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291172371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290539235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288859883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296234014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291237495 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293048335 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293054519 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292504489 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293462033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295309791 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292047996 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290687667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290112876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289870042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289622996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288999042 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288519873 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29507823 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290095563 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291663823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290274707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289493136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289699869 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291178698 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290407868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294082475 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289276977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290025548 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290308571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289998405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287768465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28875968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28879463 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288398941 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290711365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289754865 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288647553 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289792261 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290121692 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290343835 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289562132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290781128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290474339 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295378936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291473818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290963745 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294400758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291331493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292403773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290465757 seconds)
  done (took 86.382468694 seconds)
done (took 1739.227557715 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45534831 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408682334 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294931193 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.296104603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290449854 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.313903042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.287026727 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290233238 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296072237 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295868961 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294356486 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481827217 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.29826752 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291716395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295674327 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390077131 seconds)
  done (took 42.479579249 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319739014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302134033 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.407521957 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314750363 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324843716 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472802134 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350260287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.29973505 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.459902196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.338060976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.791026589 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.322546393 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299282526 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.364043115 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317510778 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470747725 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5308711 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.796941902 seconds)
  done (took 29.685167211 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712374307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315491102 seconds)
  done (took 9.231605639 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31573312 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299035264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298833265 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296116137 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28957943 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.307241173 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297303761 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305571924 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.672967832 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.418925398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303012644 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310027901 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318135309 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300020305 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296937129 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.337236128 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.449629458 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297174391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299640696 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309570413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300249416 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406517306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337642522 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298868213 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416875926 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.679042072 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303575868 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.306660812 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43157565 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298729039 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303909615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30150968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301830507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.174898552 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.776073628 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311975582 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344565121 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308834434 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298668225 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458652204 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.301244786 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306695159 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.293961227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.76321421 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.427790507 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413678551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.470375683 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317087781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307666532 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363954065 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303009226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305029294 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349076919 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.073563948 seconds)
  done (took 109.293009166 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.325664107 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.686278635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463412264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316683284 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902289909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982750932 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312001597 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56633733 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335855258 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300023908 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584886791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787527028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318857086 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.312661071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.400852728 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384160705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300310011 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.046362463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314066926 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301422618 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786441059 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301099802 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312846192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.442979783 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336707439 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742053406 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.599484704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.75237369 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316386273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292385285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.744702834 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.319126371 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355856372 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2935395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556221109 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644947815 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63467687 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315795905 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295431177 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296553236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317985025 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736136585 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642035309 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314186574 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316248443 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741533954 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318637997 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310947951 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.310281759 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499504938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.184924116 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30110783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.591421363 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301130774 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.600321789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.339780529 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379524565 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770294342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315142154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.391868751 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355699979 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305015038 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300974407 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30347571 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30532778 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627688932 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643701806 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299793341 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.631296083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.753946165 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310746251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810232439 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.160136171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308899493 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352963199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301183464 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.851261625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774246091 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336313811 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294958036 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617886151 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313784642 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.566517624 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323934923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300226231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804557936 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.306513632 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31090534 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.299121349 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.317953534 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.952506886 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307911694 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.549728655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.314235337 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299366082 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299562618 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328039469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293695622 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313770033 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304942215 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804899158 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.31749676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.401330007 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315236792 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302878318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300366312 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298044948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300534664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514596819 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.774090951 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.321654098 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30059576 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.295279959 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.317483638 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.434997478 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305643293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587186783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313857162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300433237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317044296 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016789122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316292563 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295651237 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303458621 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.174507424 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504842611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318280353 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.294462279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302727236 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316767205 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.497448795 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320522224 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.322155478 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303096913 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982647123 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330049684 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.312919047 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.842576213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307887164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.127668157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32047314 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301260461 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581660087 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558155114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.571285069 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299397378 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.314369336 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978515138 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32995321 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437753969 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320383838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.365247779 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500477671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424572429 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302441442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.889435872 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.294144039 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503071536 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292865627 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585982492 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.761005618 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308365816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295765012 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973343639 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.004485408 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.963247489 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292960062 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.555271677 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.238446419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770723371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.294601694 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293747331 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.724229445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.298261053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284773989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.279144405 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.27214832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.400005436 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441505498 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.873084288 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.255162381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679568934 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292330836 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259244402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.282225138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.259868406 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608120015 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.341320203 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.262239581 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.259928561 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.261314635 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.259316776 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.705974631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.163946038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.266107586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.412844386 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877690976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.2812713 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.265427147 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.903183918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.543945805 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.751710327 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.317597129 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.552962793 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.289488861 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.298974121 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.833285439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296647443 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713192091 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28410326 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.266608368 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841527361 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.28231617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.33846637 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.256720027 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.26360179 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77717627 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.279136269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.267255582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.455920735 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284002489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527358433 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.26230936 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.308947262 seconds)
  done (took 1100.036830588 seconds)
done (took 1291.926854085 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.265093218 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.267634531 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.247134323 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26673298 seconds)
  done (took 26.228186972 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.275145008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.270654295 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.273536603 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.270792002 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.275171215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.270235808 seconds)
  done (took 8.813309553 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.296356483 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.266969038 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.266840664 seconds)
  done (took 19.0078156 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.461528611 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.479873226 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.573542632 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.404975062 seconds)
  done (took 10.098925421 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.275795274 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.275819353 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.274467495 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.277955361 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.277827363 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.280324061 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.275567482 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.277450634 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.280487695 seconds)
  done (took 12.675676896 seconds)
done (took 78.004407228 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.602483767 seconds)
    (2/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.266649249 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.390131711 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.035216575 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.935132102 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.402481305 seconds)
    (7/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.265363416 seconds)
    (8/286) benchmarking ("sort", Float32, false)...
    done (took 5.241377106 seconds)
    (9/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.433835697 seconds)
    (10/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.389050924 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.50320019 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.971028545 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.316909354 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.306964502 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.293450976 seconds)
    (16/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.267829629 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.278152121 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.499584404 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.248963221 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.26667719 seconds)
    (21/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.27492575 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.479350538 seconds)
    (23/286) benchmarking ("sort", Float64, true)...
    done (took 6.279698751 seconds)
    (24/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.616466752 seconds)
    (25/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.052843022 seconds)
    (26/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.32338597 seconds)
    (27/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.2453337 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.260968438 seconds)
    (29/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981902962 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371962063 seconds)
    (31/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.34638626 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.240492755 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289531636 seconds)
    (34/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.596558692 seconds)
    (35/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.477533545 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.242038841 seconds)
    (37/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.871631564 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.275684025 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283020835 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.241086714 seconds)
    (41/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.271852098 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.241735214 seconds)
    (43/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.302327729 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.242658256 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.243592987 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.365050603 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.605023677 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.522737966 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.704279723 seconds)
    (50/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.241465104 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.27269211 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 4.273117676 seconds)
    (53/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.834934543 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.319521729 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.341627398 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.781660369 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.629477113 seconds)
    (58/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.832340704 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.750599216 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.15551249 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.240524984 seconds)
    (62/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.068940064 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.26009565 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.381547127 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.399219499 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.280732875 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.262464579 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.927895578 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.255946831 seconds)
    (70/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.241034816 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983569026 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.906147126 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.477590285 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.042615956 seconds)
    (75/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.355149153 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.420325777 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.184477364 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.572127485 seconds)
    (79/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.26441578 seconds)
    (80/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37832054 seconds)
    (81/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.387595409 seconds)
    (82/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.054372941 seconds)
    (83/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.595429625 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.341103507 seconds)
    (85/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.007062812 seconds)
    (86/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.52097432 seconds)
    (87/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.616390647 seconds)
    (88/286) benchmarking ("sort", BigInt, true)...
    done (took 6.275251807 seconds)
    (89/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.440130835 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.350143707 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.603834991 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.261989187 seconds)
    (93/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.36353024 seconds)
    (94/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.573077178 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.636823428 seconds)
    (96/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289988831 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.278373566 seconds)
    (98/286) benchmarking ("sort", Float64, false)...
    done (took 5.557270211 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.469520982 seconds)
    (100/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.242547386 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.213748343 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.302811003 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.359687741 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.284697991 seconds)
    (105/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.439405348 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.244190549 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.262559319 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.586686077 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.592364252 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.266535875 seconds)
    (111/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.346453673 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.771142631 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.292867509 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.166648282 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.89083544 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.51957728 seconds)
    (117/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.276573448 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.303169138 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.989199745 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.52380705 seconds)
    (121/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244773499 seconds)
    (122/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.32121994 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.956918314 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.277516691 seconds)
    (125/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.489415161 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.379481542 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.106284995 seconds)
    (128/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.290709012 seconds)
    (129/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.244085791 seconds)
    (130/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.74572277 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.244676714 seconds)
    (132/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.349018528 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.997746544 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997577672 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289011684 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.495235322 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.710674881 seconds)
    (138/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.096457593 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.037866784 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.359383021 seconds)
    (141/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387795595 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34794649 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.428563552 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.288424401 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.104592949 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.084035556 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.291041178 seconds)
    (148/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052255157 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.249230169 seconds)
    (150/286) benchmarking ("sort", Int8, true)...
    done (took 6.264587338 seconds)
    (151/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.468413737 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.468691721 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.01997406 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.727974015 seconds)
    (155/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.245724008 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.356001031 seconds)
    (157/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.347567149 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.244534894 seconds)
    (159/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.482198893 seconds)
    (160/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.346445348 seconds)
    (161/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.549767484 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.853208822 seconds)
    (163/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.220385871 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.266692626 seconds)
    (165/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.290125824 seconds)
    (166/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.265172346 seconds)
    (167/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.843649533 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16171972 seconds)
    (169/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.676386522 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.24574426 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.32222931 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.358208288 seconds)
    (173/286) benchmarking ("sort", Float32, true)...
    done (took 6.264273995 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.246637007 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.319115812 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.868384375 seconds)
    (177/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.241746542 seconds)
    (178/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.777197115 seconds)
    (179/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.731205179 seconds)
    (180/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.455570232 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088273594 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.248861484 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.039895891 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.355485946 seconds)
    (185/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.655454933 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.337579358 seconds)
    (187/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085043579 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.721374002 seconds)
    (189/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.651045653 seconds)
    (190/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.261571204 seconds)
    (191/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.269245546 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.248081946 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.285033274 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.510282547 seconds)
    (195/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.748157452 seconds)
    (196/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.279481155 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.538397165 seconds)
    (198/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.520286259 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.907844211 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476661266 seconds)
    (201/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.0705902 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.2588813 seconds)
    (203/286) benchmarking ("sort", BigInt, false)...
    done (took 6.268052781 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.26478573 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.267136444 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.310424969 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.289397064 seconds)
    (208/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.286178779 seconds)
    (209/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.259150363 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.308669523 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.672575824 seconds)
    (212/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.387058872 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.41978197 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.673600872 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.165853566 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.664572986 seconds)
    (217/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.250378708 seconds)
    (218/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.3109221 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.823400553 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.346838567 seconds)
    (221/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.370197641 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.279273585 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.266875793 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.284318624 seconds)
    (225/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.769207141 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.333022304 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.251865351 seconds)
    (228/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.298602211 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.670294603 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.292828605 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.294026037 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.281560174 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.474263458 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.692143239 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.267482259 seconds)
    (236/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328600431 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.251304369 seconds)
    (238/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.277907151 seconds)
    (239/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.392468432 seconds)
    (240/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.254183747 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370252843 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.295853298 seconds)
    (243/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.393353569 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.655268771 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.319862553 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.288972263 seconds)
    (247/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.455263059 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.252881294 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.28986027 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.288701758 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.893468775 seconds)
    (252/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.25417164 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.287724926 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.618493838 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.887764958 seconds)
    (256/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.62652976 seconds)
    (257/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.254506526 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.251380852 seconds)
    (259/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.623706424 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.772226201 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.353306808 seconds)
    (262/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.319341047 seconds)
    (263/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354274974 seconds)
    (264/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.280508896 seconds)
    (265/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.458521865 seconds)
    (266/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.388329085 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.352512128 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.271602337 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392289064 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.079757098 seconds)
    (271/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.254931751 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.76610851 seconds)
    (273/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.300125625 seconds)
    (274/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.296997344 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.10143018 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.314191859 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.357304701 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.252614906 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.268648166 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.673223924 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.303937273 seconds)
    (282/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.996403142 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.680745933 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.309268029 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.356471413 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.107096445 seconds)
  done (took 914.525222867 seconds)
done (took 915.706987648 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.301583799 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300048166 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.283901394 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.306250113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.394206962 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.305471743 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.295027781 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.284502064 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.32955918 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.332816307 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282769291 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.309440173 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.283770143 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.2834664 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.286312612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299910215 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27961872 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.277993548 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.302552016 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.297340588 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.301395776 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.284532547 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.333324592 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.309532994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.290603061 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.287597629 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.28820127 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302798806 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.395025903 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.288136333 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.28751694 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.295687561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.279691764 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275755469 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.280847553 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.303728917 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.294701316 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.294197865 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.287458648 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.318311741 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.663192089 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292740428 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.285792814 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.285706983 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.284916537 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.290464418 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.2867462 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.291495192 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30073005 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299117529 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.652307806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.309028372 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.290396231 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.286357655 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297631149 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.28767188 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.290275992 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304174051 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.305242983 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30268684 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.267549864 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.287075473 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.291038138 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.304921904 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294614871 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.690783679 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.291255591 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292953705 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.667734566 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.301515237 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.690650217 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.304043979 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.288882093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.301597604 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.317211399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.28149447 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.278615648 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.287728799 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.295431477 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.28617603 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.298291149 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300863238 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.294590003 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.288579501 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303982883 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.314273314 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.29985772 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.289905049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296732613 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.308598832 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.295163959 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.299782479 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.292092989 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.284228075 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.29886138 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.293490886 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292180323 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.292086676 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.294095747 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301155685 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.667370121 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316463919 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.287212612 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.287466033 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.28854097 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.302609606 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.667539045 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.298544876 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.314457764 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.337842504 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.292200742 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276318181 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.288539415 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307768247 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.298311079 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.295006198 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.286275421 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.276392913 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.65461481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.313601242 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.292784654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.288758002 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308357016 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.292220146 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.288284955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.307286544 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.292329398 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303892553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.411789208 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.301462322 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.321923741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.286530894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.294580822 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.317784933 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308441231 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324096702 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.295958193 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308729842 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.307684681 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.287932912 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.300931272 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.301738145 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.294235959 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.297664756 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.28467053 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.316528907 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305396016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305953891 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.313279963 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.414259933 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.290003053 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.296104626 seconds)
done (took 217.7131206 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.349374373 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.289448077 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.372538525 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290013568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.388867626 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.387509203 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.286691654 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.288090012 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.28867278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.667267441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288878566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.287949484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.290856238 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288100437 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.373783048 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.291471381 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.285265082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.630800252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291800131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.362880128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.291155421 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.288187464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292293522 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.671356766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.290731179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.285728447 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.363218013 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.29089244 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.634632474 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.289705459 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.287815123 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.636580704 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.379896469 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.310832773 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301095686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.299463376 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391916003 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.310246031 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.374258114 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.372765367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.376308686 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.33014886 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.294492837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.284333074 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294259813 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.294123042 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290384221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319881589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.289976941 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.290347642 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.628617439 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302366488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.301523853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.289965844 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289608622 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.313361671 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.289924156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.293798143 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.382812535 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.293817611 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.355012971 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.672948731 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.669187339 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.292212637 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.291797751 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.291591929 seconds)
  done (took 145.579778522 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.358351657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.365270523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.401466434 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.308916655 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.343130183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.408270579 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.309028166 seconds)
  done (took 10.689951641 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300482228 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295723822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343750261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34328523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.294060313 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.472615288 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294276957 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305097433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.293278072 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.347288118 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.2975443 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.295353105 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.302054785 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.293638542 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341349628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305370407 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408719588 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295904419 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.293093494 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446050957 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291112557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.299973865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.348214716 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30581876 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.296531589 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300833859 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.143567994 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29556967 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292930626 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.293932139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294174374 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.371298845 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296494188 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.289384603 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.292898527 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410465976 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.295823216 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293461753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295668192 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.292767798 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.296553985 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297202053 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.296313241 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.294404357 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.297430275 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319169062 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.296038817 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298095882 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.297826368 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.297307254 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.348676192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297224426 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.294890802 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.295457602 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.353469785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304077865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.29725509 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.293972048 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.297835585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296464027 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450327757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344957663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.297811742 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344948717 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297960326 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298888338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.297922055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298093127 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352552517 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.29768952 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348417404 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295599519 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484063899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322451816 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300130055 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301459439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.29834733 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298582992 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.291561569 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305052754 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.295263117 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.298936163 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.302828216 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295826086 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296183246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464081728 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407184717 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.295677732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.31122195 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.304334604 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.294766582 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.351188877 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.298790279 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.296318332 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350559325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414568589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352334911 seconds)
  done (took 149.997296103 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.303679756 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.305546472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.303305693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322874139 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316341733 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.299594832 seconds)
  done (took 9.053625349 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301851732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.300060936 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.300776676 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.300757528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.30132614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.301647578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301060164 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301775909 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304981277 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.300257873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.301284541 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.301578439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.301414369 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.299878702 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302119741 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.300257427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.30172712 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297292594 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.301875379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301874936 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.393669025 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.30079974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301039799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.302870587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.306727992 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.300999436 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307614523 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.302989751 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.302884022 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.309147567 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.320320123 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302531482 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.301595799 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307286371 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.306900845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.301485102 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305484331 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.304040924 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299492921 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.303238758 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.30536838 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.30261437 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.302788613 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.3059826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.304288001 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306179371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308415566 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310833539 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.303585178 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305154092 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.304198772 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.303840943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.303125957 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.304055548 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.305310101 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322426945 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.308766615 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.30395285 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.304040898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.303421447 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.306547622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.304428172 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30600342 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.308686415 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.310875467 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.306958937 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.304214419 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308893875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305531192 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.304468089 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.308159766 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.303912731 seconds)
  done (took 96.205440746 seconds)
done (took 412.719698822 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.626564942 seconds)
  done (took 7.833522566 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.343925402 seconds)
  done (took 7.554532581 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.528460425 seconds)
  done (took 21.745416262 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.396101135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.37730219 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.321185412 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.295557762 seconds)
  done (took 26.598572876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.52604899 seconds)
  done (took 7.734775368 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.297184394 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.29951706 seconds)
  done (took 13.806889737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.787626771 seconds)
  done (took 7.994895944 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.803941281 seconds)
  done (took 8.017135346 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.319684315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.311661901 seconds)
  done (took 14.09677458 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.282466957 seconds)
  done (took 7.493345648 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.832150455 seconds)
  done (took 12.04366827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.309335407 seconds)
  done (took 7.522929836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.371847372 seconds)
  done (took 7.581979223 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.163349829 seconds)
  done (took 9.373525019 seconds)
done (took 160.604889024 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.299769 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.303543553 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.301457587 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.303083049 seconds)
  done (took 26.417658829 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.34294799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.342420429 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34297084 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.354177184 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.346962268 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.342290484 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335986876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.333806541 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35341351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.345969411 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.344647196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345647883 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.344960265 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.335742399 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.344769017 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.343852747 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354793177 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.34402212 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.336682774 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.345510593 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.310218998 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353808887 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.344529665 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.311363284 seconds)
  done (took 33.414377774 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.828746106 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.379604287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.460175829 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.358744313 seconds)
  done (took 7.239347697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.359847931 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364324155 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.377401802 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.414866096 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451160276 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.373918429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.339848331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.326008946 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.319396166 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.365083651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.440175549 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.379011281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.464800396 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.312023562 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.507220616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.312332215 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.310667111 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.364740125 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.415143048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428145009 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311365956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.362973074 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367601658 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.381660964 seconds)
  done (took 34.263425616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310332694 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.331067307 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310931725 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.310722032 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319500098 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.31109438 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311807191 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.313119062 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.310486107 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.316622611 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.311033126 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3240626 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310747026 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.312565416 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314729331 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.312732009 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.318405174 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.310937622 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.31102886 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.317960657 seconds)
  done (took 27.504096686 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.30511332 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.160268085 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658524172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.563059074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.307426315 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.306448053 seconds)
  done (took 27.51467121 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.375046351 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.5290999 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.315059368 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.658262001 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751135468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329866587 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309264065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.552466348 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856139302 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839148457 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.368621775 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.38030555 seconds)
  done (took 19.478536916 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.318253791 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.308140272 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.313127712 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.324603085 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367187709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.333037312 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321660339 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.308574409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369854049 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385481969 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333574792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.369685859 seconds)
  done (took 37.270662969 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396752001 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35430525 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.225458235 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330116221 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048801649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515640207 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371477639 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049343632 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.330682594 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583286223 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321179612 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390410189 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564322441 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312181138 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31140105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.262087157 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552468074 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779804914 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306418651 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225107795 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331252725 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315853568 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.30643864 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535550439 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54081113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.289554556 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.573189392 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087552804 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587875062 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325796953 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322905545 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312814346 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585545021 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959712102 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423479931 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519012763 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329576171 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868218194 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.298280124 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.253462808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320536624 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.315816996 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325245036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313950372 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247711584 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31340627 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050496026 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.33566271 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.025353023 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312960702 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562619396 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41096146 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.317501133 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.883647941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380332497 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321257411 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.318111986 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405316484 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904048876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49046481 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316759752 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.248470012 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321902708 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247227719 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915806835 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.327874579 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.319539301 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319530515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249746189 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.245764485 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330471013 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462351936 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.332782914 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965757177 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99924023 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341779734 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246700737 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841088724 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311401137 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.251369079 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5429756 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089478404 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25118666 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.26001197 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248840309 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990214313 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325074965 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.685347009 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335938989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056616927 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538523268 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350999284 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34026805 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538174188 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.197958232 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316772853 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.312212397 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437048303 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3317253 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043461647 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268713391 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.313935421 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571443562 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.52751529 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316907132 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.275328328 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808174414 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345504092 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.333431477 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324128102 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523789947 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.895816192 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343449128 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499909746 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335312341 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.094267398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032406595 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32661576 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.321620106 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328884707 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589406848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.048890145 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20232829 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386908044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322088947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318679908 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275816289 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168992313 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.221606595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.511706743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345060761 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.328920937 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.319373646 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263833659 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.319966891 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320738075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.096682795 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54289318 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32445687 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594594745 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254041877 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465703348 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324362455 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.536652103 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496668944 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.33973542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578127737 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332366533 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320321973 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331736319 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338395207 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418734133 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342070883 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.324962367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576875003 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323500468 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324539619 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276320479 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101788426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32629874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.326015101 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323591459 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879693568 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308458819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320344442 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205943074 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.336087073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390772607 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327002242 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527271523 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.524561195 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32434606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.321217335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.322193666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537737759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33004219 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.267140277 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403272219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.796571909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90311879 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351276847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.257913845 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.035041636 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.015855259 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324767729 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.510814228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32293214 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527400104 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353333143 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334362409 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883219033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339557718 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26506825 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.329619347 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333141206 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327388285 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323680461 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.491232726 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.531576869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334791768 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.335925354 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465589693 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.338233884 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257961787 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.839649315 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328561567 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324468692 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.101391308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35904981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.290537806 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19727707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594666152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333156825 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576493359 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.365442306 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.35641541 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.320797773 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335116442 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336788577 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.336206709 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332739844 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33519965 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.28021109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.764580692 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889451159 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034877897 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854343659 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648249955 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.356318466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207608013 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059060335 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276195264 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982823654 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560918655 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070072398 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288212826 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801938449 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.523409858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08777473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577427643 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554140126 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632234246 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.351578186 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580126524 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539152704 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360033878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326168501 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269999259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.837468854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898366308 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343077203 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404229781 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066072002 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357799172 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10580105 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.337530986 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.992118656 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722322304 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.889187753 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714602764 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332152149 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328761767 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20627598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351354995 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851886151 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944983921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359038118 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.802778213 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279215304 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53400993 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.35628128 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.326611537 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.833749483 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.32072534 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574694411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576667113 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264856521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336954798 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848383475 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200485528 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.334325445 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329047386 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037288711 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341535402 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606752442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.331147258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.532399238 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346448416 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261661649 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263819764 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.023600834 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333598673 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303262747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793473283 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.335929423 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33197738 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331780566 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190360984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584524935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.343735365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894072544 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570617698 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346489547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35369258 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.332663897 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332443634 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.315622599 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213055843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996691991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390248684 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552714536 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.260171669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.23262445 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358580328 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544029443 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225816968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342691987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570154722 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.059213691 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.34112621 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020519025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372206965 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33918982 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344176154 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327133313 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352317825 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417606081 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539400506 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.358931674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3429181 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729936962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358072597 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333002443 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.344799961 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425350932 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.555604607 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.528011681 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.105343078 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90222013 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069505039 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929936788 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602344049 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335376153 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342385064 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264611402 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47505183 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.85851148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607501001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465236829 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.330778009 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356858954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345705765 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33475708 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547320416 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607412367 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.203900599 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334235741 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992844514 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.492548439 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344019323 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.544145212 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808773013 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863086317 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445112568 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340226549 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073049693 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62687878 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426572709 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334427013 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925514515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.353521468 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.010153066 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.343049163 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335660265 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498066922 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586846706 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993589973 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361329243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.495801796 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.10644466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316444403 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591862629 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.793196471 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545498581 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925532673 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035902097 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600436214 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404668334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545449466 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.452918001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482402397 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.347136219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.235202436 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33540923 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178955562 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.04663422 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345648064 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914457201 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615803488 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.339725556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.335331451 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360671009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.346914566 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559894392 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029452317 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561308103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345832252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340981005 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906932786 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918400296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608713093 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275685389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.333598221 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575135294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591921536 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366112355 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.79286146 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.050425043 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881601601 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.303815985 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358904019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34209706 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031313649 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916089553 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.55833472 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83594047 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.996650191 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338370292 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627227833 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343833979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344527743 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616212201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341771954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351002659 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55095626 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.929268066 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110057724 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35852822 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355877538 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.277427981 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.565217333 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436644711 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279121045 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342348183 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.747709254 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359757207 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471348029 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343551619 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.338293527 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345737775 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.073721116 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623787917 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339421412 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.320872465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.330973201 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346722443 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431024355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920144726 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362885757 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016028389 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.691843167 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598430602 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351919852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.322427104 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345074967 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341968877 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061363594 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304192283 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337363132 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898941351 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.337611085 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.352056041 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34529319 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.559812954 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554743611 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340229092 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573731767 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369370652 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357280444 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.243850974 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110699882 seconds)
  done (took 1651.022262113 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394566911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.358010992 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.369148885 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.376014714 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400109994 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435185904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.442446681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446088324 seconds)
  done (took 52.467534066 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.344683566 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.499341992 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.372155284 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.342352501 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.352433663 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.347999029 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.80247452 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.372720257 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.34514985 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.352157058 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.354402998 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.350968859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.987089647 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.352128705 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.355510793 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.326861394 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.351830553 seconds)
  done (took 65.463040694 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.407678187 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.693881929 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.10577245 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.346652657 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.363069418 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.338171479 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.841598376 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.351684344 seconds)
  done (took 58.697038648 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362358119 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.359852353 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.361432651 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.361005367 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362121986 seconds)
  done (took 8.056301058 seconds)
done (took 2050.022720721 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.347518599 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352402175 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.348130906 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.350583298 seconds)
  done (took 6.646417702 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.325287911 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.061635516 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.318644134 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.333635099 seconds)
  done (took 18.288362435 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.350762865 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.347829277 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.014216856 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.951974517 seconds)
  done (took 5.216941236 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.099177903 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10804188 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.092725088 seconds)
  done (took 7.550702634 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.344532918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.346106885 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.346488025 seconds)
  done (took 20.287729731 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630855017 seconds)
  done (took 2.881860205 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.493234771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.542525379 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.661421558 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.667924534 seconds)
  done (took 7.616947173 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.746821973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.723107659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.551181678 seconds)
  done (took 6.270765109 seconds)
done (took 88.707800303 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.089110501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.583586788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.547277425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.06332861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.570211653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.543098631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.559293094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.032608642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.576378268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.552926747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.055833829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.569421009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.512343989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.587698075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511364683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.585044789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.570535407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.12926027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.74506255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.947969023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.556793494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.693460215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.889024566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.786720208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.577278151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.496122826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.286938917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.581445971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.921203133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.375189729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.502647108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.115295526 seconds)
  done (took 193.365864532 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.347082941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.354043757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.340066167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.348554441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.355367243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.35098316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.341141155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.3414029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.350712597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.349185581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.342328433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.355844699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.342731836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.356544503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.342547441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.356604685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.361676827 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.350186468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.35750093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.341569106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.343531725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.347453087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.342542185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.356026055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.350735069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.356440564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.344720564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35453823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.343080228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35762976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366291663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.361414178 seconds)
  done (took 204.463153024 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348088634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.357485565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.352606882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.349901288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.34294597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.349211026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.346196274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.349641249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359046983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.364687918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.344100188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.344322595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.360417415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.355691446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.342391396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.344017256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.343827016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.366432304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366099061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352739428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.343533766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.347187162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.344933817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357657515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.362709945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.345610031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343279132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.344392024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358136331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.344843024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.353953665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.351530092 seconds)
  done (took 204.493348571 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.549049028 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.359667011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.361227553 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.300375941 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.36066895 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.36082143 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.356104217 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.556124272 seconds)
  done (took 14.459792942 seconds)
done (took 618.034819148 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.604101133 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.318855158 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.547801006 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.377301868 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132579742 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396816666 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.381237956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.54735367 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.259654568 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.543716173 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.582842643 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394133805 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727425529 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.378825841 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633904493 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.479117563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.229572168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.334754811 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68560015 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.912168424 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634844561 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.825258421 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.564425634 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.286027044 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.741467642 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.825492016 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.074124844 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.217334439 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.395227838 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.699713179 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.983122509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.311233219 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43975682 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.4364422 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.496083729 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.475502031 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.302445764 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434989001 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.576910002 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.588443878 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88541567 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.088858416 seconds)
  done (took 92.008136475 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.346106079 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.3466491 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.346073942 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.347570043 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.347527129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.347295274 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.34495377 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.345899244 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.348011756 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.347078357 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.347636986 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.349000637 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.346626429 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.348652841 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.346385003 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.347076987 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.347849039 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.349440688 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.347731292 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.347335686 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.348683135 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34704298 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.348355295 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.347321222 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.347208247 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.347613581 seconds)
  done (took 36.29201755 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364556602 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610548288 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770652891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.37221599 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.365756632 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.368785934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.442294505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.366955912 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.369224149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369508765 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.521130777 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.368799014 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.402352744 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.792660065 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.368539313 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365994143 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.368151704 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367544454 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.619777468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376104113 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.458376122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.369423117 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.443491256 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37757294 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.384767158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.368244869 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372342864 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.936396686 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384037497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521001762 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.138052993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.441309564 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.908546305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.800510494 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.135792869 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369265974 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.369378474 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525465815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.370657527 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.367959348 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.443363244 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.36972393 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.780534972 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.035672893 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376748876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.36939655 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.957382423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540692656 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.605674028 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377977131 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803603693 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372639483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369888928 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371049823 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.603607819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.375251788 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368908023 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.970893803 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.391649787 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.44729797 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370066568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370651353 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.627730912 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371287525 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.616243834 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.372534335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.378729716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385428548 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.782782006 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37417454 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.060444536 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.378272089 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.370490803 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.523268303 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.615907718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990124406 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.390313118 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632970026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925240115 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.460731437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375400526 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.929708135 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.464055096 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.373576433 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373541008 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373404804 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.371310685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421440203 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.444802054 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.999166651 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073096173 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.996004947 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.465507329 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385308534 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371423223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.973334262 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.390134096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.372100436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778682872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061983971 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.38164519 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.380280944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054680466 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.381848868 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.448568155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377980767 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.791332452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.372897262 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.420992126 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.372919159 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.380410561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393016946 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.448292822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.3758195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374759298 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.033946832 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.540581158 seconds)
  done (took 180.712758378 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.36548035 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.357779262 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.36892913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.358258882 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.366479053 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.374682432 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.366608833 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.368664302 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.372895779 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.367211287 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.368699114 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.365363591 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366950711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377888768 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.369761202 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375025115 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.979260795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367625825 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.370193842 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.3761728 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.157539947 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.370071611 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.368592962 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.37649616 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.36965171 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.368821882 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.373214259 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.381801092 seconds)
  done (took 153.020440336 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.37673529 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.931152076 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392674343 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.501972033 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395300755 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372966721 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.500372829 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.431717246 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391626493 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.373201185 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374119711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671266324 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.367554431 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.875471991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.551381435 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.517033818 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.882298766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.39067459 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.373492213 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.374479287 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503820224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.370719804 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67382067 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.928948853 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.393723836 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.933964166 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362866292 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.377749834 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.375591026 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.935735559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389741639 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.676875219 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.451435725 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435591177 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.951037686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900582445 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.899770117 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520705376 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.377305805 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.374973121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.375450149 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.361300965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.9369064 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.394183951 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.377926207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927392392 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39483185 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.378823866 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384091508 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.376855258 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.434624068 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.451956121 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.69210903 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926764599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.460457455 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.390687121 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.505240158 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.758424886 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.382301411 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.888119196 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362512518 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.932839245 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386675533 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.361693675 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.378720776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.383767781 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.523860782 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.507279846 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.89031919 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393845858 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.888694305 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.539430391 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.378717106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.377368637 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.381167871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.941544654 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.904005941 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539563053 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50961931 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567061992 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.366146972 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.378513019 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.363329146 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.45451895 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.379069774 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942458946 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.905095213 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39530753 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.38021939 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380863948 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.38098393 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550971681 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.958081513 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.469094278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.880979352 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698714014 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.6825093 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.382563806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439196805 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393091202 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684927937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381842634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.43627093 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.821850152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.686064522 seconds)
  done (took 163.89336478 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612227311 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.570967244 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.471521837 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.530524235 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.976543134 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.948647226 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.598055084 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.52123336 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.490294228 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.634579022 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.514349742 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.473892837 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.593211312 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458855649 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.110541516 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.464710899 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.488052373 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.529511843 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.536391853 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.385721342 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.040185492 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.663002799 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.558922077 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.357396617 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.502921185 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138937618 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.937004464 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.907382799 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.56102983 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.663441143 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.914216541 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.483111378 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.346768447 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.069547655 seconds)
  done (took 66.330236353 seconds)
done (took 693.514543398 seconds)
SAVING RESULT...
DONE!
